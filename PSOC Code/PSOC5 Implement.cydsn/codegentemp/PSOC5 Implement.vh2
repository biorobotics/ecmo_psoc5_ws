--
--	Conversion of PSOC5 Implement.v to vh2:
--
--	Cypress Semiconductor - WARP Version 6.3 IR 41
--	Sat Sep 27 22:13:57 2025
--

USE cypress.cypress.all;
USE cypress.rtlpkg.all;
ENTITY top_RTL IS
ATTRIBUTE part_name of top_RTL:TYPE IS "cpsoc3";
END top_RTL;
--------------------------------------------------------
ARCHITECTURE R_T_L OF top_RTL IS
SIGNAL Net_12 : bit;
SIGNAL Net_10 : bit;
SIGNAL tmpOE__TX_OEM_net_0 : bit;
SIGNAL Net_171 : bit;
SIGNAL tmpFB_0__TX_OEM_net_0 : bit;
SIGNAL tmpIO_0__TX_OEM_net_0 : bit;
TERMINAL tmpSIOVREF__TX_OEM_net_0 : bit;
SIGNAL zero : bit;
SIGNAL one : bit;
SIGNAL tmpINTERRUPT_0__TX_OEM_net_0 : bit;
SIGNAL tmpOE__USER_LED_net_0 : bit;
SIGNAL tmpFB_0__USER_LED_net_0 : bit;
SIGNAL tmpIO_0__USER_LED_net_0 : bit;
TERMINAL tmpSIOVREF__USER_LED_net_0 : bit;
SIGNAL tmpINTERRUPT_0__USER_LED_net_0 : bit;
SIGNAL tmpOE__RX_OEM_net_0 : bit;
SIGNAL Net_167 : bit;
SIGNAL tmpIO_0__RX_OEM_net_0 : bit;
TERMINAL tmpSIOVREF__RX_OEM_net_0 : bit;
SIGNAL tmpINTERRUPT_0__RX_OEM_net_0 : bit;
SIGNAL tmpOE__RX_RPI_net_0 : bit;
SIGNAL Net_154 : bit;
SIGNAL tmpIO_0__RX_RPI_net_0 : bit;
TERMINAL tmpSIOVREF__RX_RPI_net_0 : bit;
SIGNAL tmpINTERRUPT_0__RX_RPI_net_0 : bit;
SIGNAL \UART_OEM:Net_9\ : bit;
SIGNAL \UART_OEM:Net_61\ : bit;
SIGNAL \UART_OEM:BUART:clock_op\ : bit;
SIGNAL \UART_OEM:BUART:reset_reg\ : bit;
SIGNAL \UART_OEM:BUART:tx_hd_send_break\ : bit;
SIGNAL \UART_OEM:BUART:HalfDuplexSend\ : bit;
SIGNAL \UART_OEM:BUART:FinalParityType_1\ : bit;
SIGNAL \UART_OEM:BUART:FinalParityType_0\ : bit;
SIGNAL \UART_OEM:BUART:FinalAddrMode_2\ : bit;
SIGNAL \UART_OEM:BUART:FinalAddrMode_1\ : bit;
SIGNAL \UART_OEM:BUART:FinalAddrMode_0\ : bit;
SIGNAL \UART_OEM:BUART:tx_ctrl_mark\ : bit;
SIGNAL \UART_OEM:BUART:reset_sr\ : bit;
SIGNAL \UART_OEM:BUART:HalfDuplexSend_last\ : bit;
SIGNAL \UART_OEM:BUART:txn\ : bit;
SIGNAL Net_175 : bit;
SIGNAL \UART_OEM:BUART:tx_interrupt_out\ : bit;
SIGNAL Net_170 : bit;
SIGNAL \UART_OEM:BUART:rx_interrupt_out\ : bit;
SIGNAL \UART_OEM:BUART:tx_state_1\ : bit;
SIGNAL \UART_OEM:BUART:tx_state_0\ : bit;
SIGNAL \UART_OEM:BUART:tx_bitclk_enable_pre\ : bit;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:ce0\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:ce0\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:cl0\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:z0\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:ff0\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:ce1\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:ce1\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:cl1\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:z1\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:ff1\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:tx_shift_out\ : bit;
SIGNAL \UART_OEM:BUART:tx_fifo_notfull\ : bit;
SIGNAL \UART_OEM:BUART:tx_fifo_empty\ : bit;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:f1_bus_stat\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:f1_bus_stat\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:f1_blk_stat\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:f1_blk_stat\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sTX:TxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sTX:TxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:counter_load_not\ : bit;
SIGNAL \UART_OEM:BUART:tx_state_2\ : bit;
SIGNAL \UART_OEM:BUART:tx_bitclk_dp\ : bit;
SIGNAL \UART_OEM:BUART:tx_counter_dp\ : bit;
SIGNAL \UART_OEM:BUART:sc_out_7\ : bit;
SIGNAL \UART_OEM:BUART:sc_out_6\ : bit;
SIGNAL \UART_OEM:BUART:sc_out_5\ : bit;
SIGNAL \UART_OEM:BUART:sc_out_4\ : bit;
SIGNAL \UART_OEM:BUART:sc_out_3\ : bit;
SIGNAL \UART_OEM:BUART:sc_out_2\ : bit;
SIGNAL \UART_OEM:BUART:sc_out_1\ : bit;
SIGNAL \UART_OEM:BUART:sc_out_0\ : bit;
SIGNAL \UART_OEM:BUART:tx_counter_tc\ : bit;
SIGNAL \UART_OEM:BUART:tx_status_6\ : bit;
SIGNAL \UART_OEM:BUART:tx_status_5\ : bit;
SIGNAL \UART_OEM:BUART:tx_status_4\ : bit;
SIGNAL \UART_OEM:BUART:tx_status_0\ : bit;
SIGNAL \UART_OEM:BUART:tx_status_1\ : bit;
SIGNAL \UART_OEM:BUART:tx_status_2\ : bit;
SIGNAL \UART_OEM:BUART:tx_status_3\ : bit;
SIGNAL Net_174 : bit;
SIGNAL \UART_OEM:BUART:tx_bitclk\ : bit;
SIGNAL \UART_OEM:BUART:tx_ctrl_mark_last\ : bit;
SIGNAL \UART_OEM:BUART:tx_mark\ : bit;
SIGNAL \UART_OEM:BUART:tx_parity_bit\ : bit;
SIGNAL \UART_OEM:BUART:rx_addressmatch\ : bit;
SIGNAL \UART_OEM:BUART:rx_addressmatch1\ : bit;
SIGNAL \UART_OEM:BUART:rx_addressmatch2\ : bit;
SIGNAL \UART_OEM:BUART:rx_state_1\ : bit;
SIGNAL \UART_OEM:BUART:rx_state_0\ : bit;
SIGNAL \UART_OEM:BUART:rx_bitclk_enable\ : bit;
SIGNAL \UART_OEM:BUART:rx_postpoll\ : bit;
SIGNAL \UART_OEM:BUART:rx_load_fifo\ : bit;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:cl0\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:z0\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:ff0\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:cl1\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:z1\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:ff1\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:hd_shift_out\ : bit;
SIGNAL \UART_OEM:BUART:rx_fifonotempty\ : bit;
SIGNAL \UART_OEM:BUART:rx_fifofull\ : bit;
SIGNAL \UART_OEM:BUART:hd_tx_fifo_notfull\ : bit;
SIGNAL \UART_OEM:BUART:hd_tx_fifo_empty\ : bit;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:RxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:RxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:rx_counter_load\ : bit;
SIGNAL \UART_OEM:BUART:rx_state_3\ : bit;
SIGNAL \UART_OEM:BUART:rx_state_2\ : bit;
SIGNAL \UART_OEM:BUART:rx_bitclk_pre\ : bit;
SIGNAL \UART_OEM:BUART:rx_count_3\ : bit;
SIGNAL \UART_OEM:BUART:rx_count_2\ : bit;
SIGNAL \UART_OEM:BUART:rx_count_1\ : bit;
SIGNAL \UART_OEM:BUART:rx_count_0\ : bit;
SIGNAL \UART_OEM:BUART:rx_bitclk_pre16x\ : bit;
SIGNAL \UART_OEM:BUART:rx_count_6\ : bit;
SIGNAL \UART_OEM:BUART:rx_count_5\ : bit;
SIGNAL \UART_OEM:BUART:rx_count_4\ : bit;
SIGNAL \UART_OEM:BUART:rx_count7_tc\ : bit;
SIGNAL \UART_OEM:BUART:rx_count7_bit8_wire\ : bit;
SIGNAL \UART_OEM:BUART:rx_count7_bit8\ : bit;
SIGNAL \UART_OEM:BUART:rx_bitclk\ : bit;
SIGNAL \UART_OEM:BUART:rx_state_stop1_reg\ : bit;
SIGNAL \UART_OEM:BUART:rx_poll_bit1\ : bit;
SIGNAL \UART_OEM:BUART:rx_poll_bit2\ : bit;
SIGNAL \UART_OEM:BUART:pollingrange\ : bit;
SIGNAL \UART_OEM:BUART:pollcount_1\ : bit;
SIGNAL add_vv_vv_MODGEN_2_1 : bit;
SIGNAL \UART_OEM:BUART:pollcount_0\ : bit;
SIGNAL add_vv_vv_MODGEN_2_0 : bit;
SIGNAL cmp_vv_vv_MODGEN_3 : bit;
SIGNAL cmp_vv_vv_MODGEN_4 : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_1\ : bit;
SIGNAL MODIN3_1 : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_0\ : bit;
SIGNAL MODIN3_0 : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_1\ : bit;
SIGNAL MODIN4_1 : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_0\ : bit;
SIGNAL MODIN4_0 : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_1\ : bit;
SIGNAL MODIN5_1 : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_0\ : bit;
SIGNAL MODIN5_0 : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_0\ : bit;
SIGNAL \UART_OEM:BUART:rx_status_0\ : bit;
SIGNAL \UART_OEM:BUART:rx_markspace_status\ : bit;
SIGNAL \UART_OEM:BUART:rx_status_1\ : bit;
SIGNAL \UART_OEM:BUART:rx_status_2\ : bit;
SIGNAL \UART_OEM:BUART:rx_parity_error_status\ : bit;
SIGNAL \UART_OEM:BUART:rx_status_3\ : bit;
SIGNAL \UART_OEM:BUART:rx_stop_bit_error\ : bit;
SIGNAL \UART_OEM:BUART:rx_status_4\ : bit;
SIGNAL \UART_OEM:BUART:rx_status_5\ : bit;
SIGNAL \UART_OEM:BUART:rx_status_6\ : bit;
SIGNAL \UART_OEM:BUART:rx_addr_match_status\ : bit;
SIGNAL Net_166 : bit;
SIGNAL \UART_OEM:BUART:rx_markspace_pre\ : bit;
SIGNAL \UART_OEM:BUART:rx_parity_error_pre\ : bit;
SIGNAL \UART_OEM:BUART:rx_break_status\ : bit;
SIGNAL cmp_vv_vv_MODGEN_5 : bit;
SIGNAL \UART_OEM:BUART:rx_address_detected\ : bit;
SIGNAL \UART_OEM:BUART:rx_last\ : bit;
SIGNAL \UART_OEM:BUART:rx_parity_bit\ : bit;
SIGNAL cmp_vv_vv_MODGEN_6 : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newa_6\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newa_5\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newa_4\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newa_3\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newa_2\ : bit;
SIGNAL MODIN6_6 : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newa_1\ : bit;
SIGNAL MODIN6_5 : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newa_0\ : bit;
SIGNAL MODIN6_4 : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_6\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_5\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_4\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_3\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_2\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:dataa_6\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:dataa_5\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:dataa_4\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:dataa_3\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:dataa_2\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:dataa_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:dataa_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:datab_6\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:datab_5\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:datab_4\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:datab_3\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:datab_2\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:datab_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:datab_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_6\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:gta_6\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_5\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:gta_5\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_4\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:gta_4\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_3\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:gta_3\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_2\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:gta_2\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:gta_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_5:g2:a0:gta_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:newa_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:newb_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:dataa_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:datab_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:a_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:b_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:eq_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:eqi_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_1\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:lt_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:gt_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:lti_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:gti_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_0\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:xeq\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:xneq\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:xlt\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:xlte\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:xgt\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:g1:a0:xgte\ : bit;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:lt\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:MODULE_6:lt\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:eq\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:MODULE_6:eq\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:gt\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:MODULE_6:gt\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:gte\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:MODULE_6:gte\:SIGNAL IS 2;
SIGNAL \UART_OEM:BUART:sRX:MODULE_6:lte\ : bit;
ATTRIBUTE port_state_att of \UART_OEM:BUART:sRX:MODULE_6:lte\:SIGNAL IS 2;
SIGNAL tmpOE__TX_RPI_net_0 : bit;
SIGNAL Net_158 : bit;
SIGNAL tmpFB_0__TX_RPI_net_0 : bit;
SIGNAL tmpIO_0__TX_RPI_net_0 : bit;
TERMINAL tmpSIOVREF__TX_RPI_net_0 : bit;
SIGNAL tmpINTERRUPT_0__TX_RPI_net_0 : bit;
SIGNAL \UART_RPI:Net_9\ : bit;
SIGNAL \UART_RPI:Net_61\ : bit;
SIGNAL \UART_RPI:BUART:clock_op\ : bit;
SIGNAL \UART_RPI:BUART:reset_reg\ : bit;
SIGNAL \UART_RPI:BUART:tx_hd_send_break\ : bit;
SIGNAL \UART_RPI:BUART:HalfDuplexSend\ : bit;
SIGNAL \UART_RPI:BUART:FinalParityType_1\ : bit;
SIGNAL \UART_RPI:BUART:FinalParityType_0\ : bit;
SIGNAL \UART_RPI:BUART:FinalAddrMode_2\ : bit;
SIGNAL \UART_RPI:BUART:FinalAddrMode_1\ : bit;
SIGNAL \UART_RPI:BUART:FinalAddrMode_0\ : bit;
SIGNAL \UART_RPI:BUART:tx_ctrl_mark\ : bit;
SIGNAL \UART_RPI:BUART:reset_sr\ : bit;
SIGNAL \UART_RPI:BUART:HalfDuplexSend_last\ : bit;
SIGNAL \UART_RPI:BUART:txn\ : bit;
SIGNAL Net_162 : bit;
SIGNAL \UART_RPI:BUART:tx_interrupt_out\ : bit;
SIGNAL Net_157 : bit;
SIGNAL \UART_RPI:BUART:rx_interrupt_out\ : bit;
SIGNAL \UART_RPI:BUART:tx_state_1\ : bit;
SIGNAL \UART_RPI:BUART:tx_state_0\ : bit;
SIGNAL \UART_RPI:BUART:tx_bitclk_enable_pre\ : bit;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:ce0\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:ce0\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:cl0\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:z0\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:ff0\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:ce1\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:ce1\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:cl1\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:z1\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:ff1\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:tx_shift_out\ : bit;
SIGNAL \UART_RPI:BUART:tx_fifo_notfull\ : bit;
SIGNAL \UART_RPI:BUART:tx_fifo_empty\ : bit;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:f1_bus_stat\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:f1_bus_stat\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:f1_blk_stat\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:f1_blk_stat\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sTX:TxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sTX:TxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:counter_load_not\ : bit;
SIGNAL \UART_RPI:BUART:tx_state_2\ : bit;
SIGNAL \UART_RPI:BUART:tx_bitclk_dp\ : bit;
SIGNAL \UART_RPI:BUART:tx_counter_dp\ : bit;
SIGNAL \UART_RPI:BUART:sc_out_7\ : bit;
SIGNAL \UART_RPI:BUART:sc_out_6\ : bit;
SIGNAL \UART_RPI:BUART:sc_out_5\ : bit;
SIGNAL \UART_RPI:BUART:sc_out_4\ : bit;
SIGNAL \UART_RPI:BUART:sc_out_3\ : bit;
SIGNAL \UART_RPI:BUART:sc_out_2\ : bit;
SIGNAL \UART_RPI:BUART:sc_out_1\ : bit;
SIGNAL \UART_RPI:BUART:sc_out_0\ : bit;
SIGNAL \UART_RPI:BUART:tx_counter_tc\ : bit;
SIGNAL \UART_RPI:BUART:tx_status_6\ : bit;
SIGNAL \UART_RPI:BUART:tx_status_5\ : bit;
SIGNAL \UART_RPI:BUART:tx_status_4\ : bit;
SIGNAL \UART_RPI:BUART:tx_status_0\ : bit;
SIGNAL \UART_RPI:BUART:tx_status_1\ : bit;
SIGNAL \UART_RPI:BUART:tx_status_2\ : bit;
SIGNAL \UART_RPI:BUART:tx_status_3\ : bit;
SIGNAL Net_161 : bit;
SIGNAL \UART_RPI:BUART:tx_bitclk\ : bit;
SIGNAL \UART_RPI:BUART:tx_ctrl_mark_last\ : bit;
SIGNAL \UART_RPI:BUART:tx_mark\ : bit;
SIGNAL \UART_RPI:BUART:tx_parity_bit\ : bit;
SIGNAL \UART_RPI:BUART:rx_addressmatch\ : bit;
SIGNAL \UART_RPI:BUART:rx_addressmatch1\ : bit;
SIGNAL \UART_RPI:BUART:rx_addressmatch2\ : bit;
SIGNAL \UART_RPI:BUART:rx_state_1\ : bit;
SIGNAL \UART_RPI:BUART:rx_state_0\ : bit;
SIGNAL \UART_RPI:BUART:rx_bitclk_enable\ : bit;
SIGNAL \UART_RPI:BUART:rx_postpoll\ : bit;
SIGNAL \UART_RPI:BUART:rx_load_fifo\ : bit;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:cl0\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:z0\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:ff0\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:cl1\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:z1\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:ff1\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:hd_shift_out\ : bit;
SIGNAL \UART_RPI:BUART:rx_fifonotempty\ : bit;
SIGNAL \UART_RPI:BUART:rx_fifofull\ : bit;
SIGNAL \UART_RPI:BUART:hd_tx_fifo_notfull\ : bit;
SIGNAL \UART_RPI:BUART:hd_tx_fifo_empty\ : bit;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:RxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:RxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:rx_counter_load\ : bit;
SIGNAL \UART_RPI:BUART:rx_state_3\ : bit;
SIGNAL \UART_RPI:BUART:rx_state_2\ : bit;
SIGNAL \UART_RPI:BUART:rx_bitclk_pre\ : bit;
SIGNAL \UART_RPI:BUART:rx_count_3\ : bit;
SIGNAL \UART_RPI:BUART:rx_count_2\ : bit;
SIGNAL \UART_RPI:BUART:rx_count_1\ : bit;
SIGNAL \UART_RPI:BUART:rx_count_0\ : bit;
SIGNAL \UART_RPI:BUART:rx_bitclk_pre16x\ : bit;
SIGNAL \UART_RPI:BUART:rx_count_6\ : bit;
SIGNAL \UART_RPI:BUART:rx_count_5\ : bit;
SIGNAL \UART_RPI:BUART:rx_count_4\ : bit;
SIGNAL \UART_RPI:BUART:rx_count7_tc\ : bit;
SIGNAL \UART_RPI:BUART:rx_count7_bit8_wire\ : bit;
SIGNAL \UART_RPI:BUART:rx_count7_bit8\ : bit;
SIGNAL \UART_RPI:BUART:rx_bitclk\ : bit;
SIGNAL \UART_RPI:BUART:rx_state_stop1_reg\ : bit;
SIGNAL \UART_RPI:BUART:rx_poll_bit1\ : bit;
SIGNAL \UART_RPI:BUART:rx_poll_bit2\ : bit;
SIGNAL \UART_RPI:BUART:pollingrange\ : bit;
SIGNAL \UART_RPI:BUART:pollcount_1\ : bit;
SIGNAL add_vv_vv_MODGEN_7_1 : bit;
SIGNAL \UART_RPI:BUART:pollcount_0\ : bit;
SIGNAL add_vv_vv_MODGEN_7_0 : bit;
SIGNAL cmp_vv_vv_MODGEN_8 : bit;
SIGNAL cmp_vv_vv_MODGEN_9 : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_7:g2:a0:a_1\ : bit;
SIGNAL MODIN7_1 : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_7:g2:a0:a_0\ : bit;
SIGNAL MODIN7_0 : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_7:g2:a0:b_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_7:g2:a0:b_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_7:g2:a0:s_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_7:g2:a0:s_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:newa_1\ : bit;
SIGNAL MODIN8_1 : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:newa_0\ : bit;
SIGNAL MODIN8_0 : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:newb_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:newb_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:dataa_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:dataa_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:datab_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:datab_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:lta_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:gta_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:lta_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:gta_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:newa_1\ : bit;
SIGNAL MODIN9_1 : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:newa_0\ : bit;
SIGNAL MODIN9_0 : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:newb_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:newb_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:dataa_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:dataa_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:datab_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:datab_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:lta_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:gta_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:lta_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:gta_0\ : bit;
SIGNAL \UART_RPI:BUART:rx_status_0\ : bit;
SIGNAL \UART_RPI:BUART:rx_markspace_status\ : bit;
SIGNAL \UART_RPI:BUART:rx_status_1\ : bit;
SIGNAL \UART_RPI:BUART:rx_status_2\ : bit;
SIGNAL \UART_RPI:BUART:rx_parity_error_status\ : bit;
SIGNAL \UART_RPI:BUART:rx_status_3\ : bit;
SIGNAL \UART_RPI:BUART:rx_stop_bit_error\ : bit;
SIGNAL \UART_RPI:BUART:rx_status_4\ : bit;
SIGNAL \UART_RPI:BUART:rx_status_5\ : bit;
SIGNAL \UART_RPI:BUART:rx_status_6\ : bit;
SIGNAL \UART_RPI:BUART:rx_addr_match_status\ : bit;
SIGNAL Net_153 : bit;
SIGNAL \UART_RPI:BUART:rx_markspace_pre\ : bit;
SIGNAL \UART_RPI:BUART:rx_parity_error_pre\ : bit;
SIGNAL \UART_RPI:BUART:rx_break_status\ : bit;
SIGNAL cmp_vv_vv_MODGEN_10 : bit;
SIGNAL \UART_RPI:BUART:rx_address_detected\ : bit;
SIGNAL \UART_RPI:BUART:rx_last\ : bit;
SIGNAL \UART_RPI:BUART:rx_parity_bit\ : bit;
SIGNAL cmp_vv_vv_MODGEN_11 : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newa_6\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newa_5\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newa_4\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newa_3\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newa_2\ : bit;
SIGNAL MODIN10_6 : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newa_1\ : bit;
SIGNAL MODIN10_5 : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newa_0\ : bit;
SIGNAL MODIN10_4 : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_6\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_5\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_4\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_3\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_2\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:dataa_6\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:dataa_5\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:dataa_4\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:dataa_3\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:dataa_2\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:dataa_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:dataa_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:datab_6\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:datab_5\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:datab_4\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:datab_3\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:datab_2\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:datab_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:datab_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_6\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:gta_6\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_5\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:gta_5\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_4\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:gta_4\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_3\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:gta_3\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_2\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:gta_2\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:gta_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_10:g2:a0:gta_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:newa_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:newb_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:dataa_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:datab_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:a_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:b_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:xnor_array_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:aeqb_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:eq_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:eqi_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:aeqb_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:albi_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:agbi_1\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:lt_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:gt_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:lti_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:gti_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:albi_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:agbi_0\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:xeq\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:xneq\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:xlt\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:xlte\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:xgt\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:g1:a0:xgte\ : bit;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:lt\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:MODULE_11:lt\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:eq\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:MODULE_11:eq\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:gt\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:MODULE_11:gt\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:gte\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:MODULE_11:gte\:SIGNAL IS 2;
SIGNAL \UART_RPI:BUART:sRX:MODULE_11:lte\ : bit;
ATTRIBUTE port_state_att of \UART_RPI:BUART:sRX:MODULE_11:lte\:SIGNAL IS 2;
SIGNAL tmpOE__TX_Debug_net_0 : bit;
SIGNAL Net_133 : bit;
SIGNAL tmpFB_0__TX_Debug_net_0 : bit;
SIGNAL tmpIO_0__TX_Debug_net_0 : bit;
TERMINAL tmpSIOVREF__TX_Debug_net_0 : bit;
SIGNAL tmpINTERRUPT_0__TX_Debug_net_0 : bit;
SIGNAL \UART_Debug:Net_9\ : bit;
SIGNAL \UART_Debug:Net_61\ : bit;
SIGNAL \UART_Debug:BUART:clock_op\ : bit;
SIGNAL \UART_Debug:BUART:reset_reg\ : bit;
SIGNAL \UART_Debug:BUART:tx_hd_send_break\ : bit;
SIGNAL \UART_Debug:BUART:HalfDuplexSend\ : bit;
SIGNAL \UART_Debug:BUART:FinalParityType_1\ : bit;
SIGNAL \UART_Debug:BUART:FinalParityType_0\ : bit;
SIGNAL \UART_Debug:BUART:FinalAddrMode_2\ : bit;
SIGNAL \UART_Debug:BUART:FinalAddrMode_1\ : bit;
SIGNAL \UART_Debug:BUART:FinalAddrMode_0\ : bit;
SIGNAL \UART_Debug:BUART:tx_ctrl_mark\ : bit;
SIGNAL \UART_Debug:BUART:reset_sr\ : bit;
SIGNAL \UART_Debug:BUART:HalfDuplexSend_last\ : bit;
SIGNAL \UART_Debug:BUART:txn\ : bit;
SIGNAL Net_149 : bit;
SIGNAL \UART_Debug:BUART:tx_interrupt_out\ : bit;
SIGNAL Net_145 : bit;
SIGNAL \UART_Debug:BUART:tx_state_1\ : bit;
SIGNAL \UART_Debug:BUART:tx_state_0\ : bit;
SIGNAL \UART_Debug:BUART:tx_bitclk_enable_pre\ : bit;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:ce0\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:ce0\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:cl0\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:cl0\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:z0\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:z0\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:ff0\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:ff0\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:ce1\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:ce1\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:cl1\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:cl1\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:z1\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:z1\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:ff1\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:ff1\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:ov_msb\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:ov_msb\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:co_msb\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:co_msb\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:cmsb\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:cmsb\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:tx_shift_out\ : bit;
SIGNAL \UART_Debug:BUART:tx_fifo_notfull\ : bit;
SIGNAL \UART_Debug:BUART:tx_fifo_empty\ : bit;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:f1_bus_stat\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:f1_bus_stat\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:f1_blk_stat\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:f1_blk_stat\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:ce0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:ce0_reg\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:cl0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:cl0_reg\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:z0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:z0_reg\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:ff0_reg\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:ff0_reg\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:ce1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:ce1_reg\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:cl1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:cl1_reg\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:z1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:z1_reg\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:ff1_reg\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:ff1_reg\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:ov_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:ov_msb_reg\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:co_msb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:co_msb_reg\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:cmsb_reg\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:cmsb_reg\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:so_reg\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:so_reg\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:f0_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:f0_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:f0_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:f0_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:f1_bus_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:f1_bus_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:sTX:TxShifter:f1_blk_stat_reg\ : bit;
ATTRIBUTE port_state_att of \UART_Debug:BUART:sTX:TxShifter:f1_blk_stat_reg\:SIGNAL IS 2;
SIGNAL \UART_Debug:BUART:counter_load_not\ : bit;
SIGNAL \UART_Debug:BUART:tx_state_2\ : bit;
SIGNAL \UART_Debug:BUART:tx_bitclk_dp\ : bit;
SIGNAL \UART_Debug:BUART:tx_counter_dp\ : bit;
SIGNAL \UART_Debug:BUART:sc_out_7\ : bit;
SIGNAL \UART_Debug:BUART:sc_out_6\ : bit;
SIGNAL \UART_Debug:BUART:sc_out_5\ : bit;
SIGNAL \UART_Debug:BUART:sc_out_4\ : bit;
SIGNAL \UART_Debug:BUART:sc_out_3\ : bit;
SIGNAL \UART_Debug:BUART:sc_out_2\ : bit;
SIGNAL \UART_Debug:BUART:sc_out_1\ : bit;
SIGNAL \UART_Debug:BUART:sc_out_0\ : bit;
SIGNAL \UART_Debug:BUART:tx_counter_tc\ : bit;
SIGNAL \UART_Debug:BUART:tx_status_6\ : bit;
SIGNAL \UART_Debug:BUART:tx_status_5\ : bit;
SIGNAL \UART_Debug:BUART:tx_status_4\ : bit;
SIGNAL \UART_Debug:BUART:tx_status_0\ : bit;
SIGNAL \UART_Debug:BUART:tx_status_1\ : bit;
SIGNAL \UART_Debug:BUART:tx_status_2\ : bit;
SIGNAL \UART_Debug:BUART:tx_status_3\ : bit;
SIGNAL Net_148 : bit;
SIGNAL \UART_Debug:BUART:tx_bitclk\ : bit;
SIGNAL \UART_Debug:BUART:tx_ctrl_mark_last\ : bit;
SIGNAL \UART_Debug:BUART:tx_mark\ : bit;
SIGNAL \UART_Debug:BUART:tx_parity_bit\ : bit;
SIGNAL \Timer_ISR:Net_260\ : bit;
SIGNAL \Timer_ISR:Net_266\ : bit;
SIGNAL \Timer_ISR:Net_51\ : bit;
SIGNAL \Timer_ISR:Net_261\ : bit;
SIGNAL \Timer_ISR:Net_57\ : bit;
SIGNAL Net_180 : bit;
SIGNAL Net_181 : bit;
SIGNAL \Timer_ISR:Net_102\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_enable\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_is_active\ : bit;
ATTRIBUTE soft of \ADC_TS410:AMuxHw_2_Decoder_is_active\:SIGNAL IS '1';
SIGNAL \ADC_TS410:cmp_vv_vv_MODGEN_1\ : bit;
SIGNAL \ADC_TS410:clock\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ : bit;
SIGNAL \ADC_TS410:ch_addr_5\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ : bit;
SIGNAL \ADC_TS410:ch_addr_4\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ : bit;
SIGNAL \ADC_TS410:ch_addr_3\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ : bit;
SIGNAL \ADC_TS410:ch_addr_2\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ : bit;
SIGNAL \ADC_TS410:ch_addr_1\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ : bit;
SIGNAL \ADC_TS410:ch_addr_0\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_0\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_1\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_2\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_3\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_4\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_5\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_6\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_7\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_8\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_9\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_10\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_11\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_12\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_13\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_14\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_15\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_16\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_17\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_18\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_19\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_20\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_21\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_22\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_23\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_24\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_25\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_26\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_27\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_28\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_29\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_30\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_31\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_32\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_33\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_34\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_35\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_36\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_37\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_38\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_39\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_40\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_41\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_42\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_43\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_44\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_45\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_46\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_47\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_48\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_49\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_50\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_51\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_52\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_53\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_54\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_55\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_56\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_57\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_58\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_59\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_60\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_61\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_62\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_63\ : bit;
TERMINAL Net_322 : bit;
TERMINAL Net_321 : bit;
TERMINAL Net_320 : bit;
TERMINAL Net_319 : bit;
TERMINAL Net_318 : bit;
TERMINAL Net_317 : bit;
TERMINAL Net_316 : bit;
TERMINAL Net_315 : bit;
TERMINAL Net_314 : bit;
TERMINAL Net_313 : bit;
TERMINAL Net_312 : bit;
TERMINAL Net_311 : bit;
TERMINAL Net_310 : bit;
TERMINAL Net_309 : bit;
TERMINAL Net_308 : bit;
TERMINAL Net_307 : bit;
TERMINAL Net_306 : bit;
TERMINAL Net_304 : bit;
TERMINAL Net_302 : bit;
TERMINAL Net_301 : bit;
TERMINAL Net_299 : bit;
TERMINAL Net_297 : bit;
TERMINAL Net_296 : bit;
TERMINAL Net_294 : bit;
TERMINAL Net_292 : bit;
TERMINAL Net_291 : bit;
TERMINAL Net_289 : bit;
TERMINAL Net_287 : bit;
TERMINAL Net_286 : bit;
TERMINAL Net_284 : bit;
TERMINAL Net_282 : bit;
TERMINAL Net_281 : bit;
TERMINAL Net_279 : bit;
TERMINAL Net_277 : bit;
TERMINAL Net_276 : bit;
TERMINAL Net_274 : bit;
TERMINAL Net_272 : bit;
TERMINAL Net_271 : bit;
TERMINAL Net_269 : bit;
TERMINAL Net_267 : bit;
TERMINAL Net_266 : bit;
TERMINAL Net_264 : bit;
TERMINAL Net_262 : bit;
TERMINAL Net_261 : bit;
TERMINAL Net_259 : bit;
TERMINAL Net_257 : bit;
TERMINAL Net_256 : bit;
TERMINAL Net_254 : bit;
TERMINAL Net_252 : bit;
TERMINAL Net_251 : bit;
TERMINAL Net_249 : bit;
TERMINAL Net_247 : bit;
TERMINAL Net_246 : bit;
TERMINAL Net_244 : bit;
TERMINAL Net_242 : bit;
TERMINAL Net_241 : bit;
TERMINAL Net_239 : bit;
TERMINAL Net_237 : bit;
TERMINAL Net_236 : bit;
TERMINAL Net_234 : bit;
TERMINAL Net_232 : bit;
TERMINAL Net_231 : bit;
TERMINAL Net_229 : bit;
TERMINAL Net_228 : bit;
TERMINAL \ADC_TS410:V_single\ : bit;
TERMINAL \ADC_TS410:SAR:Net_248\ : bit;
TERMINAL \ADC_TS410:SAR:Net_235\ : bit;
SIGNAL \ADC_TS410:SAR:vp_ctl_0\ : bit;
SIGNAL \ADC_TS410:SAR:vp_ctl_2\ : bit;
SIGNAL \ADC_TS410:SAR:vn_ctl_1\ : bit;
SIGNAL \ADC_TS410:SAR:vn_ctl_3\ : bit;
SIGNAL \ADC_TS410:SAR:vp_ctl_1\ : bit;
SIGNAL \ADC_TS410:SAR:vp_ctl_3\ : bit;
SIGNAL \ADC_TS410:SAR:vn_ctl_0\ : bit;
SIGNAL \ADC_TS410:SAR:vn_ctl_2\ : bit;
SIGNAL \ADC_TS410:SAR:Net_188\ : bit;
TERMINAL \ADC_TS410:Net_2803\ : bit;
TERMINAL \ADC_TS410:SAR:Net_126\ : bit;
TERMINAL \ADC_TS410:SAR:Net_215\ : bit;
TERMINAL \ADC_TS410:SAR:Net_257\ : bit;
SIGNAL \ADC_TS410:SAR:soc\ : bit;
SIGNAL \ADC_TS410:SAR:Net_252\ : bit;
SIGNAL Net_226 : bit;
SIGNAL \ADC_TS410:SAR:Net_207_11\ : bit;
SIGNAL \ADC_TS410:SAR:Net_207_10\ : bit;
SIGNAL \ADC_TS410:SAR:Net_207_9\ : bit;
SIGNAL \ADC_TS410:SAR:Net_207_8\ : bit;
SIGNAL \ADC_TS410:SAR:Net_207_7\ : bit;
SIGNAL \ADC_TS410:SAR:Net_207_6\ : bit;
SIGNAL \ADC_TS410:SAR:Net_207_5\ : bit;
SIGNAL \ADC_TS410:SAR:Net_207_4\ : bit;
SIGNAL \ADC_TS410:SAR:Net_207_3\ : bit;
SIGNAL \ADC_TS410:SAR:Net_207_2\ : bit;
SIGNAL \ADC_TS410:SAR:Net_207_1\ : bit;
SIGNAL \ADC_TS410:SAR:Net_207_0\ : bit;
SIGNAL \ADC_TS410:Net_3830\ : bit;
TERMINAL \ADC_TS410:SAR:Net_209\ : bit;
TERMINAL \ADC_TS410:SAR:Net_149\ : bit;
TERMINAL \ADC_TS410:SAR:Net_255\ : bit;
TERMINAL \ADC_TS410:SAR:Net_368\ : bit;
SIGNAL \ADC_TS410:SAR:Net_221\ : bit;
SIGNAL \ADC_TS410:SAR:Net_383\ : bit;
SIGNAL \ADC_TS410:SAR:Net_385\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:enable\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:control_0\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:load_period\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:control_1\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:sw_soc\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:control_2\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:clk_fin\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:clk_ctrl\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:count_5\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:count_4\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:count_3\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:count_2\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:count_1\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:count_0\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:status_7\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:status_6\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:status_5\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:status_4\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:status_3\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:status_2\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:status_1\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:status_0\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:nrq_edge_detect_reg\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:cnt_enable\ : bit;
SIGNAL \ADC_TS410:Net_3710\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:bus_clk_nrq_reg\ : bit;
SIGNAL \ADC_TS410:Net_3935\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:nrq_reg\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:nrq_edge_detect\ : bit;
SIGNAL Net_227 : bit;
SIGNAL \ADC_TS410:soc_out\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:control_7\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:control_6\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:control_5\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:control_4\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:control_3\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:count_6\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:cnt_tc\ : bit;
SIGNAL \ADC_TS410:Net_3874\ : bit;
SIGNAL \ADC_TS410:Net_3698\ : bit;
SIGNAL \ADC_TS410:nrq\ : bit;
SIGNAL \ADC_TS410:Net_3905\ : bit;
SIGNAL \ADC_TS410:Net_3867\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:newa_5\ : bit;
SIGNAL \ADC_TS410:MODIN1_5\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:newa_4\ : bit;
SIGNAL \ADC_TS410:MODIN1_4\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:newa_3\ : bit;
SIGNAL \ADC_TS410:MODIN1_3\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:newa_2\ : bit;
SIGNAL \ADC_TS410:MODIN1_2\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:newa_1\ : bit;
SIGNAL \ADC_TS410:MODIN1_1\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:newa_0\ : bit;
SIGNAL \ADC_TS410:MODIN1_0\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:newb_5\ : bit;
SIGNAL \ADC_TS410:MODIN2_5\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:newb_4\ : bit;
SIGNAL \ADC_TS410:MODIN2_4\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:newb_3\ : bit;
SIGNAL \ADC_TS410:MODIN2_3\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:newb_2\ : bit;
SIGNAL \ADC_TS410:MODIN2_2\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:newb_1\ : bit;
SIGNAL \ADC_TS410:MODIN2_1\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:newb_0\ : bit;
SIGNAL \ADC_TS410:MODIN2_0\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:dataa_5\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:dataa_4\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:dataa_3\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:dataa_2\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:dataa_1\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:dataa_0\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:datab_5\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:datab_4\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:datab_3\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:datab_2\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:datab_1\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:datab_0\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:a_5\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:a_4\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:a_3\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:a_2\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:a_1\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:a_0\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:b_5\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:b_4\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:b_3\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:b_2\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:b_1\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:b_0\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:xnor_array_5\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:xnor_array_4\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:xnor_array_3\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:xnor_array_2\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:xnor_array_1\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:xnor_array_0\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:aeqb_0\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:eq_0\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:eq_1\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:eq_2\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:eq_3\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:eq_4\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:eq_5\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:eqi_0\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:aeqb_1\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:albi_2\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:agbi_2\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:lt_3\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:gt_3\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:lt_4\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:gt_4\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:lt_5\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:gt_5\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:lti_1\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:gti_1\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:albi_1\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:agbi_1\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:lt_0\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:gt_0\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:lt_1\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:gt_1\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:lt_2\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:gt_2\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:lti_0\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:gti_0\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:albi_0\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:gx:u0:agbi_0\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:xeq\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:xneq\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:xlt\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:xlte\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:xgt\ : bit;
SIGNAL \ADC_TS410:MODULE_1:g1:a0:xgte\ : bit;
SIGNAL \ADC_TS410:MODULE_1:lt\ : bit;
ATTRIBUTE port_state_att of \ADC_TS410:MODULE_1:lt\:SIGNAL IS 2;
SIGNAL \ADC_TS410:MODULE_1:gt\ : bit;
ATTRIBUTE port_state_att of \ADC_TS410:MODULE_1:gt\:SIGNAL IS 2;
SIGNAL \ADC_TS410:MODULE_1:gte\ : bit;
ATTRIBUTE port_state_att of \ADC_TS410:MODULE_1:gte\:SIGNAL IS 2;
SIGNAL \ADC_TS410:MODULE_1:lte\ : bit;
ATTRIBUTE port_state_att of \ADC_TS410:MODULE_1:lte\:SIGNAL IS 2;
SIGNAL \ADC_TS410:MODULE_1:neq\ : bit;
ATTRIBUTE port_state_att of \ADC_TS410:MODULE_1:neq\:SIGNAL IS 2;
SIGNAL tmpOE__ADC_CH0_net_0 : bit;
SIGNAL tmpFB_0__ADC_CH0_net_0 : bit;
SIGNAL tmpIO_0__ADC_CH0_net_0 : bit;
TERMINAL tmpSIOVREF__ADC_CH0_net_0 : bit;
SIGNAL tmpINTERRUPT_0__ADC_CH0_net_0 : bit;
SIGNAL tmpOE__ADC_CH3_net_0 : bit;
SIGNAL tmpFB_0__ADC_CH3_net_0 : bit;
SIGNAL tmpIO_0__ADC_CH3_net_0 : bit;
TERMINAL tmpSIOVREF__ADC_CH3_net_0 : bit;
SIGNAL tmpINTERRUPT_0__ADC_CH3_net_0 : bit;
SIGNAL tmpOE__ADC_CH2_net_0 : bit;
SIGNAL tmpFB_0__ADC_CH2_net_0 : bit;
SIGNAL tmpIO_0__ADC_CH2_net_0 : bit;
TERMINAL tmpSIOVREF__ADC_CH2_net_0 : bit;
SIGNAL tmpINTERRUPT_0__ADC_CH2_net_0 : bit;
SIGNAL tmpOE__ADC_CH1_net_0 : bit;
SIGNAL tmpFB_0__ADC_CH1_net_0 : bit;
SIGNAL tmpIO_0__ADC_CH1_net_0 : bit;
TERMINAL tmpSIOVREF__ADC_CH1_net_0 : bit;
SIGNAL tmpINTERRUPT_0__ADC_CH1_net_0 : bit;
TERMINAL \ADC_DelSig:Net_690\ : bit;
TERMINAL \ADC_DelSig:Net_35\ : bit;
TERMINAL \ADC_DelSig:Net_34\ : bit;
TERMINAL \ADC_DelSig:Net_677\ : bit;
SIGNAL \ADC_DelSig:Net_488\ : bit;
TERMINAL Net_339 : bit;
TERMINAL \ADC_DelSig:Net_520\ : bit;
SIGNAL \ADC_DelSig:Net_481\ : bit;
SIGNAL \ADC_DelSig:Net_482\ : bit;
SIGNAL \ADC_DelSig:mod_reset\ : bit;
SIGNAL \ADC_DelSig:Net_93\ : bit;
TERMINAL \ADC_DelSig:Net_573\ : bit;
TERMINAL \ADC_DelSig:Net_41\ : bit;
TERMINAL \ADC_DelSig:Net_109\ : bit;
SIGNAL \ADC_DelSig:aclock\ : bit;
SIGNAL \ADC_DelSig:mod_dat_3\ : bit;
SIGNAL \ADC_DelSig:mod_dat_2\ : bit;
SIGNAL \ADC_DelSig:mod_dat_1\ : bit;
SIGNAL \ADC_DelSig:mod_dat_0\ : bit;
SIGNAL \ADC_DelSig:Net_245_7\ : bit;
SIGNAL \ADC_DelSig:Net_245_6\ : bit;
SIGNAL \ADC_DelSig:Net_245_5\ : bit;
SIGNAL \ADC_DelSig:Net_245_4\ : bit;
SIGNAL \ADC_DelSig:Net_245_3\ : bit;
SIGNAL \ADC_DelSig:Net_245_2\ : bit;
SIGNAL \ADC_DelSig:Net_245_1\ : bit;
SIGNAL \ADC_DelSig:Net_245_0\ : bit;
TERMINAL \ADC_DelSig:Net_352\ : bit;
TERMINAL \ADC_DelSig:Net_257\ : bit;
TERMINAL \ADC_DelSig:Net_249\ : bit;
TERMINAL Net_340 : bit;
SIGNAL Net_342 : bit;
SIGNAL \ADC_DelSig:Net_250\ : bit;
SIGNAL \ADC_DelSig:Net_252\ : bit;
SIGNAL \ADC_DelSig:soc\ : bit;
SIGNAL \ADC_DelSig:Net_268\ : bit;
SIGNAL \ADC_DelSig:Net_270\ : bit;
TERMINAL Net_354 : bit;
TERMINAL Net_363 : bit;
TERMINAL Net_357 : bit;
TERMINAL Net_356 : bit;
SIGNAL tmpOE__Pressure_Before_Pos_net_0 : bit;
SIGNAL tmpFB_0__Pressure_Before_Pos_net_0 : bit;
SIGNAL tmpIO_0__Pressure_Before_Pos_net_0 : bit;
TERMINAL tmpSIOVREF__Pressure_Before_Pos_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Pressure_Before_Pos_net_0 : bit;
SIGNAL tmpOE__Pressure_Before_Neg_net_0 : bit;
SIGNAL tmpFB_0__Pressure_Before_Neg_net_0 : bit;
SIGNAL tmpIO_0__Pressure_Before_Neg_net_0 : bit;
TERMINAL tmpSIOVREF__Pressure_Before_Neg_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Pressure_Before_Neg_net_0 : bit;
SIGNAL tmpOE__Pressure_After_Pos_net_0 : bit;
SIGNAL tmpFB_0__Pressure_After_Pos_net_0 : bit;
SIGNAL tmpIO_0__Pressure_After_Pos_net_0 : bit;
TERMINAL tmpSIOVREF__Pressure_After_Pos_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Pressure_After_Pos_net_0 : bit;
SIGNAL tmpOE__Pressure_After_Neg_net_0 : bit;
SIGNAL tmpFB_0__Pressure_After_Neg_net_0 : bit;
SIGNAL tmpIO_0__Pressure_After_Neg_net_0 : bit;
TERMINAL tmpSIOVREF__Pressure_After_Neg_net_0 : bit;
SIGNAL tmpINTERRUPT_0__Pressure_After_Neg_net_0 : bit;
SIGNAL \UART_OEM:BUART:reset_reg\\D\ : bit;
SIGNAL \UART_OEM:BUART:txn\\D\ : bit;
SIGNAL \UART_OEM:BUART:tx_state_1\\D\ : bit;
SIGNAL \UART_OEM:BUART:tx_state_0\\D\ : bit;
SIGNAL \UART_OEM:BUART:tx_state_2\\D\ : bit;
SIGNAL Net_174D : bit;
SIGNAL \UART_OEM:BUART:tx_bitclk\\D\ : bit;
SIGNAL \UART_OEM:BUART:tx_ctrl_mark_last\\D\ : bit;
SIGNAL \UART_OEM:BUART:tx_mark\\D\ : bit;
SIGNAL \UART_OEM:BUART:tx_parity_bit\\D\ : bit;
SIGNAL \UART_OEM:BUART:rx_state_1\\D\ : bit;
SIGNAL \UART_OEM:BUART:rx_state_0\\D\ : bit;
SIGNAL \UART_OEM:BUART:rx_load_fifo\\D\ : bit;
SIGNAL \UART_OEM:BUART:rx_state_3\\D\ : bit;
SIGNAL \UART_OEM:BUART:rx_state_2\\D\ : bit;
SIGNAL \UART_OEM:BUART:rx_count7_bit8\\D\ : bit;
SIGNAL \UART_OEM:BUART:rx_bitclk\\D\ : bit;
SIGNAL \UART_OEM:BUART:rx_state_stop1_reg\\D\ : bit;
SIGNAL \UART_OEM:BUART:pollcount_1\\D\ : bit;
SIGNAL \UART_OEM:BUART:pollcount_0\\D\ : bit;
SIGNAL \UART_OEM:BUART:rx_markspace_status\\D\ : bit;
SIGNAL \UART_OEM:BUART:rx_parity_error_status\\D\ : bit;
SIGNAL \UART_OEM:BUART:rx_stop_bit_error\\D\ : bit;
SIGNAL \UART_OEM:BUART:rx_addr_match_status\\D\ : bit;
SIGNAL \UART_OEM:BUART:rx_markspace_pre\\D\ : bit;
SIGNAL \UART_OEM:BUART:rx_parity_error_pre\\D\ : bit;
SIGNAL \UART_OEM:BUART:rx_break_status\\D\ : bit;
SIGNAL \UART_OEM:BUART:rx_address_detected\\D\ : bit;
SIGNAL \UART_OEM:BUART:rx_last\\D\ : bit;
SIGNAL \UART_OEM:BUART:rx_parity_bit\\D\ : bit;
SIGNAL \UART_RPI:BUART:reset_reg\\D\ : bit;
SIGNAL \UART_RPI:BUART:txn\\D\ : bit;
SIGNAL \UART_RPI:BUART:tx_state_1\\D\ : bit;
SIGNAL \UART_RPI:BUART:tx_state_0\\D\ : bit;
SIGNAL \UART_RPI:BUART:tx_state_2\\D\ : bit;
SIGNAL Net_161D : bit;
SIGNAL \UART_RPI:BUART:tx_bitclk\\D\ : bit;
SIGNAL \UART_RPI:BUART:tx_ctrl_mark_last\\D\ : bit;
SIGNAL \UART_RPI:BUART:tx_mark\\D\ : bit;
SIGNAL \UART_RPI:BUART:tx_parity_bit\\D\ : bit;
SIGNAL \UART_RPI:BUART:rx_state_1\\D\ : bit;
SIGNAL \UART_RPI:BUART:rx_state_0\\D\ : bit;
SIGNAL \UART_RPI:BUART:rx_load_fifo\\D\ : bit;
SIGNAL \UART_RPI:BUART:rx_state_3\\D\ : bit;
SIGNAL \UART_RPI:BUART:rx_state_2\\D\ : bit;
SIGNAL \UART_RPI:BUART:rx_count7_bit8\\D\ : bit;
SIGNAL \UART_RPI:BUART:rx_bitclk\\D\ : bit;
SIGNAL \UART_RPI:BUART:rx_state_stop1_reg\\D\ : bit;
SIGNAL \UART_RPI:BUART:pollcount_1\\D\ : bit;
SIGNAL \UART_RPI:BUART:pollcount_0\\D\ : bit;
SIGNAL \UART_RPI:BUART:rx_markspace_status\\D\ : bit;
SIGNAL \UART_RPI:BUART:rx_parity_error_status\\D\ : bit;
SIGNAL \UART_RPI:BUART:rx_stop_bit_error\\D\ : bit;
SIGNAL \UART_RPI:BUART:rx_addr_match_status\\D\ : bit;
SIGNAL \UART_RPI:BUART:rx_markspace_pre\\D\ : bit;
SIGNAL \UART_RPI:BUART:rx_parity_error_pre\\D\ : bit;
SIGNAL \UART_RPI:BUART:rx_break_status\\D\ : bit;
SIGNAL \UART_RPI:BUART:rx_address_detected\\D\ : bit;
SIGNAL \UART_RPI:BUART:rx_last\\D\ : bit;
SIGNAL \UART_RPI:BUART:rx_parity_bit\\D\ : bit;
SIGNAL \UART_Debug:BUART:reset_reg\\D\ : bit;
SIGNAL \UART_Debug:BUART:txn\\D\ : bit;
SIGNAL \UART_Debug:BUART:tx_state_1\\D\ : bit;
SIGNAL \UART_Debug:BUART:tx_state_0\\D\ : bit;
SIGNAL \UART_Debug:BUART:tx_state_2\\D\ : bit;
SIGNAL Net_148D : bit;
SIGNAL \UART_Debug:BUART:tx_bitclk\\D\ : bit;
SIGNAL \UART_Debug:BUART:tx_ctrl_mark_last\\D\ : bit;
SIGNAL \UART_Debug:BUART:tx_mark\\D\ : bit;
SIGNAL \UART_Debug:BUART:tx_parity_bit\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_old_id_5\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_old_id_4\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_old_id_3\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_old_id_2\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_old_id_1\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_old_id_0\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_0\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_1\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_2\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_3\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_4\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_5\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_6\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_7\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_8\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_9\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_10\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_11\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_12\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_13\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_14\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_15\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_16\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_17\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_18\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_19\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_20\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_21\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_22\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_23\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_24\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_25\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_26\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_27\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_28\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_29\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_30\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_31\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_32\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_33\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_34\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_35\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_36\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_37\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_38\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_39\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_40\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_41\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_42\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_43\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_44\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_45\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_46\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_47\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_48\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_49\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_50\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_51\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_52\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_53\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_54\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_55\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_56\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_57\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_58\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_59\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_60\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_61\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_62\\D\ : bit;
SIGNAL \ADC_TS410:AMuxHw_2_Decoder_one_hot_63\\D\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:nrq_edge_detect_reg\\D\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:bus_clk_nrq_reg\\D\ : bit;
SIGNAL \ADC_TS410:bSAR_SEQ:nrq_reg\\D\ : bit;
BEGIN

Net_12 <=  ('0') ;

tmpOE__TX_OEM_net_0 <=  ('1') ;

Net_171 <= (not \UART_OEM:BUART:txn\);

\UART_OEM:BUART:counter_load_not\ <= ((not \UART_OEM:BUART:tx_bitclk_enable_pre\ and \UART_OEM:BUART:tx_state_2\)
	OR \UART_OEM:BUART:tx_state_0\
	OR \UART_OEM:BUART:tx_state_1\);

\UART_OEM:BUART:tx_status_0\ <= ((not \UART_OEM:BUART:tx_state_1\ and not \UART_OEM:BUART:tx_state_0\ and \UART_OEM:BUART:tx_bitclk_enable_pre\ and \UART_OEM:BUART:tx_fifo_empty\ and \UART_OEM:BUART:tx_state_2\));

\UART_OEM:BUART:tx_status_2\ <= (not \UART_OEM:BUART:tx_fifo_notfull\);

\UART_OEM:BUART:tx_bitclk\\D\ <= ((not \UART_OEM:BUART:tx_state_2\ and \UART_OEM:BUART:tx_bitclk_enable_pre\)
	OR (\UART_OEM:BUART:tx_state_0\ and \UART_OEM:BUART:tx_bitclk_enable_pre\)
	OR (\UART_OEM:BUART:tx_state_1\ and \UART_OEM:BUART:tx_bitclk_enable_pre\));

\UART_OEM:BUART:tx_mark\\D\ <= ((not \UART_OEM:BUART:reset_reg\ and \UART_OEM:BUART:tx_mark\));

\UART_OEM:BUART:tx_state_2\\D\ <= ((not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:tx_state_2\ and \UART_OEM:BUART:tx_state_1\ and \UART_OEM:BUART:tx_counter_dp\ and \UART_OEM:BUART:tx_bitclk\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:tx_state_2\ and \UART_OEM:BUART:tx_state_1\ and \UART_OEM:BUART:tx_state_0\ and \UART_OEM:BUART:tx_bitclk\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:tx_state_1\ and \UART_OEM:BUART:tx_state_0\ and \UART_OEM:BUART:tx_state_2\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:tx_state_0\ and \UART_OEM:BUART:tx_state_1\ and \UART_OEM:BUART:tx_state_2\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:tx_bitclk_enable_pre\ and \UART_OEM:BUART:tx_state_2\));

\UART_OEM:BUART:tx_state_1\\D\ <= ((not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:tx_state_1\ and not \UART_OEM:BUART:tx_state_2\ and \UART_OEM:BUART:tx_state_0\ and \UART_OEM:BUART:tx_bitclk\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:tx_state_2\ and not \UART_OEM:BUART:tx_bitclk\ and \UART_OEM:BUART:tx_state_1\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:tx_bitclk_enable_pre\ and \UART_OEM:BUART:tx_state_1\ and \UART_OEM:BUART:tx_state_2\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:tx_state_0\ and not \UART_OEM:BUART:tx_counter_dp\ and \UART_OEM:BUART:tx_state_1\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:tx_state_0\ and \UART_OEM:BUART:tx_state_1\ and \UART_OEM:BUART:tx_state_2\));

\UART_OEM:BUART:tx_state_0\\D\ <= ((not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:tx_state_1\ and not \UART_OEM:BUART:tx_fifo_empty\ and \UART_OEM:BUART:tx_bitclk_enable_pre\ and \UART_OEM:BUART:tx_state_2\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:tx_state_1\ and not \UART_OEM:BUART:tx_state_0\ and not \UART_OEM:BUART:tx_fifo_empty\ and not \UART_OEM:BUART:tx_state_2\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:tx_bitclk_enable_pre\ and \UART_OEM:BUART:tx_state_0\ and \UART_OEM:BUART:tx_state_2\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:tx_state_2\ and not \UART_OEM:BUART:tx_bitclk\ and \UART_OEM:BUART:tx_state_0\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:tx_fifo_empty\ and \UART_OEM:BUART:tx_state_0\ and \UART_OEM:BUART:tx_state_2\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:tx_state_1\ and \UART_OEM:BUART:tx_state_0\ and \UART_OEM:BUART:tx_state_2\));

\UART_OEM:BUART:txn\\D\ <= ((not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:tx_state_0\ and not \UART_OEM:BUART:tx_shift_out\ and not \UART_OEM:BUART:tx_state_2\ and not \UART_OEM:BUART:tx_counter_dp\ and \UART_OEM:BUART:tx_state_1\ and \UART_OEM:BUART:tx_bitclk\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:tx_state_1\ and not \UART_OEM:BUART:tx_state_2\ and not \UART_OEM:BUART:tx_bitclk\ and \UART_OEM:BUART:tx_state_0\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:tx_state_1\ and not \UART_OEM:BUART:tx_shift_out\ and not \UART_OEM:BUART:tx_state_2\ and \UART_OEM:BUART:tx_state_0\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:tx_bitclk\ and \UART_OEM:BUART:txn\ and \UART_OEM:BUART:tx_state_1\)
	OR (not \UART_OEM:BUART:reset_reg\ and \UART_OEM:BUART:txn\ and \UART_OEM:BUART:tx_state_2\));

\UART_OEM:BUART:tx_parity_bit\\D\ <= ((not \UART_OEM:BUART:tx_state_0\ and \UART_OEM:BUART:txn\ and \UART_OEM:BUART:tx_parity_bit\)
	OR (not \UART_OEM:BUART:tx_state_1\ and not \UART_OEM:BUART:tx_state_0\ and \UART_OEM:BUART:tx_parity_bit\)
	OR \UART_OEM:BUART:tx_parity_bit\);

\UART_OEM:BUART:rx_counter_load\ <= ((not \UART_OEM:BUART:rx_state_1\ and not \UART_OEM:BUART:rx_state_0\ and not \UART_OEM:BUART:rx_state_3\ and not \UART_OEM:BUART:rx_state_2\));

\UART_OEM:BUART:rx_bitclk\\D\ <= ((not \UART_OEM:BUART:rx_count_3\ and not \UART_OEM:BUART:rx_count_2\ and not \UART_OEM:BUART:rx_count_1\ and not \UART_OEM:BUART:rx_count_0\ and not \UART_OEM:BUART:rx_count7_bit8_wire\)
	OR (not \UART_OEM:BUART:rx_count_3\ and \UART_OEM:BUART:rx_count_2\ and \UART_OEM:BUART:rx_count_1\ and \UART_OEM:BUART:rx_count_0\ and \UART_OEM:BUART:rx_count7_bit8_wire\));

\UART_OEM:BUART:rx_state_stop1_reg\\D\ <= (not \UART_OEM:BUART:rx_state_2\
	OR not \UART_OEM:BUART:rx_state_3\
	OR \UART_OEM:BUART:rx_state_0\
	OR \UART_OEM:BUART:rx_state_1\);

\UART_OEM:BUART:pollcount_1\\D\ <= ((not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_count_3\ and not MODIN3_1 and Net_167 and \UART_OEM:BUART:rx_count_2\ and \UART_OEM:BUART:rx_count_1\ and \UART_OEM:BUART:rx_count_0\ and \UART_OEM:BUART:rx_count7_bit8_wire\ and MODIN3_0)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_count_2\ and not \UART_OEM:BUART:rx_count_1\ and not \UART_OEM:BUART:rx_count_0\ and not MODIN3_1 and Net_167 and \UART_OEM:BUART:rx_count_3\ and \UART_OEM:BUART:rx_count7_bit8_wire\ and MODIN3_0)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_count_3\ and not MODIN3_0 and \UART_OEM:BUART:rx_count_2\ and \UART_OEM:BUART:rx_count_1\ and \UART_OEM:BUART:rx_count_0\ and \UART_OEM:BUART:rx_count7_bit8_wire\ and MODIN3_1)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_count_3\ and not \UART_OEM:BUART:rx_count_2\ and not \UART_OEM:BUART:rx_count_1\ and not \UART_OEM:BUART:rx_count7_bit8_wire\ and not MODIN3_1 and Net_167 and MODIN3_0)
	OR (not Net_167 and not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_count_3\ and \UART_OEM:BUART:rx_count_2\ and \UART_OEM:BUART:rx_count_1\ and \UART_OEM:BUART:rx_count_0\ and \UART_OEM:BUART:rx_count7_bit8_wire\ and MODIN3_1)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_count_2\ and not \UART_OEM:BUART:rx_count_1\ and not \UART_OEM:BUART:rx_count_0\ and not MODIN3_0 and \UART_OEM:BUART:rx_count_3\ and \UART_OEM:BUART:rx_count7_bit8_wire\ and MODIN3_1)
	OR (not Net_167 and not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_count_2\ and not \UART_OEM:BUART:rx_count_1\ and not \UART_OEM:BUART:rx_count_0\ and \UART_OEM:BUART:rx_count_3\ and \UART_OEM:BUART:rx_count7_bit8_wire\ and MODIN3_1)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_count_3\ and not \UART_OEM:BUART:rx_count_2\ and not \UART_OEM:BUART:rx_count_1\ and not \UART_OEM:BUART:rx_count7_bit8_wire\ and not MODIN3_0 and MODIN3_1)
	OR (not Net_167 and not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_count_3\ and not \UART_OEM:BUART:rx_count_2\ and not \UART_OEM:BUART:rx_count_1\ and not \UART_OEM:BUART:rx_count7_bit8_wire\ and MODIN3_1));

\UART_OEM:BUART:pollcount_0\\D\ <= ((not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_count_3\ and not MODIN3_0 and Net_167 and \UART_OEM:BUART:rx_count_2\ and \UART_OEM:BUART:rx_count_1\ and \UART_OEM:BUART:rx_count_0\ and \UART_OEM:BUART:rx_count7_bit8_wire\)
	OR (not Net_167 and not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_count_3\ and \UART_OEM:BUART:rx_count_2\ and \UART_OEM:BUART:rx_count_1\ and \UART_OEM:BUART:rx_count_0\ and \UART_OEM:BUART:rx_count7_bit8_wire\ and MODIN3_0)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_count_2\ and not \UART_OEM:BUART:rx_count_1\ and not \UART_OEM:BUART:rx_count_0\ and not MODIN3_0 and Net_167 and \UART_OEM:BUART:rx_count_3\ and \UART_OEM:BUART:rx_count7_bit8_wire\)
	OR (not Net_167 and not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_count_2\ and not \UART_OEM:BUART:rx_count_1\ and not \UART_OEM:BUART:rx_count_0\ and \UART_OEM:BUART:rx_count_3\ and \UART_OEM:BUART:rx_count7_bit8_wire\ and MODIN3_0)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_count_3\ and not \UART_OEM:BUART:rx_count_2\ and not \UART_OEM:BUART:rx_count_1\ and not \UART_OEM:BUART:rx_count7_bit8_wire\ and not MODIN3_0 and Net_167)
	OR (not Net_167 and not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_count_3\ and not \UART_OEM:BUART:rx_count_2\ and not \UART_OEM:BUART:rx_count_1\ and not \UART_OEM:BUART:rx_count7_bit8_wire\ and MODIN3_0));

\UART_OEM:BUART:rx_postpoll\ <= ((Net_167 and MODIN3_0)
	OR MODIN3_1);

\UART_OEM:BUART:rx_status_4\ <= ((\UART_OEM:BUART:rx_load_fifo\ and \UART_OEM:BUART:rx_fifofull\));

\UART_OEM:BUART:rx_status_5\ <= ((\UART_OEM:BUART:rx_fifonotempty\ and \UART_OEM:BUART:rx_state_stop1_reg\));

\UART_OEM:BUART:rx_stop_bit_error\\D\ <= ((not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_state_1\ and not \UART_OEM:BUART:rx_state_0\ and not MODIN3_1 and not MODIN3_0 and \UART_OEM:BUART:rx_bitclk_enable\ and \UART_OEM:BUART:rx_state_3\ and \UART_OEM:BUART:rx_state_2\)
	OR (not Net_167 and not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_state_1\ and not \UART_OEM:BUART:rx_state_0\ and not MODIN3_1 and \UART_OEM:BUART:rx_bitclk_enable\ and \UART_OEM:BUART:rx_state_3\ and \UART_OEM:BUART:rx_state_2\));

\UART_OEM:BUART:rx_load_fifo\\D\ <= ((not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_state_1\ and not \UART_OEM:BUART:rx_state_0\ and not \UART_OEM:BUART:rx_state_2\ and \UART_OEM:BUART:rx_bitclk_enable\ and \UART_OEM:BUART:rx_state_3\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_state_1\ and not \UART_OEM:BUART:rx_state_3\ and not \UART_OEM:BUART:rx_state_2\ and not MODIN6_5 and \UART_OEM:BUART:rx_state_0\ and \UART_OEM:BUART:rx_count7_bit8_wire\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_state_1\ and not \UART_OEM:BUART:rx_state_3\ and not \UART_OEM:BUART:rx_state_2\ and not MODIN6_6 and \UART_OEM:BUART:rx_state_0\ and \UART_OEM:BUART:rx_count7_bit8_wire\));

\UART_OEM:BUART:rx_state_3\\D\ <= ((not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_state_1\ and not \UART_OEM:BUART:rx_state_2\ and not MODIN6_5 and \UART_OEM:BUART:rx_state_0\ and \UART_OEM:BUART:rx_count7_bit8_wire\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_state_1\ and not \UART_OEM:BUART:rx_state_2\ and not MODIN6_6 and \UART_OEM:BUART:rx_state_0\ and \UART_OEM:BUART:rx_count7_bit8_wire\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_bitclk_enable\ and \UART_OEM:BUART:rx_state_3\)
	OR (not \UART_OEM:BUART:reset_reg\ and \UART_OEM:BUART:rx_state_1\ and \UART_OEM:BUART:rx_state_3\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_state_2\ and \UART_OEM:BUART:rx_state_3\)
	OR (not \UART_OEM:BUART:reset_reg\ and \UART_OEM:BUART:rx_state_0\ and \UART_OEM:BUART:rx_state_3\));

\UART_OEM:BUART:rx_state_2\\D\ <= ((not Net_167 and not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_state_1\ and not \UART_OEM:BUART:rx_state_0\ and not \UART_OEM:BUART:rx_state_3\ and not \UART_OEM:BUART:rx_state_2\ and \UART_OEM:BUART:rx_last\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_state_1\ and not \UART_OEM:BUART:rx_state_0\ and not \UART_OEM:BUART:rx_state_2\ and \UART_OEM:BUART:rx_bitclk_enable\ and \UART_OEM:BUART:rx_state_3\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_state_1\ and not \UART_OEM:BUART:rx_state_3\ and not MODIN6_5 and \UART_OEM:BUART:rx_state_0\ and \UART_OEM:BUART:rx_count7_bit8_wire\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_state_1\ and not \UART_OEM:BUART:rx_state_3\ and not MODIN6_6 and \UART_OEM:BUART:rx_state_0\ and \UART_OEM:BUART:rx_count7_bit8_wire\)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_bitclk_enable\ and \UART_OEM:BUART:rx_state_2\)
	OR (not \UART_OEM:BUART:reset_reg\ and \UART_OEM:BUART:rx_state_1\ and \UART_OEM:BUART:rx_state_2\)
	OR (not \UART_OEM:BUART:reset_reg\ and \UART_OEM:BUART:rx_state_0\ and \UART_OEM:BUART:rx_state_2\));

\UART_OEM:BUART:rx_state_1\\D\ <= ((not \UART_OEM:BUART:reset_reg\ and \UART_OEM:BUART:rx_state_1\));

\UART_OEM:BUART:rx_state_0\\D\ <= ((not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_state_1\ and not \UART_OEM:BUART:rx_state_3\ and not MODIN3_1 and not MODIN3_0 and \UART_OEM:BUART:rx_bitclk_enable\ and \UART_OEM:BUART:rx_state_2\)
	OR (not Net_167 and not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_state_1\ and not \UART_OEM:BUART:rx_state_3\ and not MODIN3_1 and \UART_OEM:BUART:rx_bitclk_enable\ and \UART_OEM:BUART:rx_state_2\)
	OR (not \UART_OEM:BUART:reset_reg\ and \UART_OEM:BUART:rx_state_0\ and MODIN6_6 and MODIN6_5)
	OR (not \UART_OEM:BUART:reset_reg\ and not \UART_OEM:BUART:rx_count7_bit8_wire\ and \UART_OEM:BUART:rx_state_0\)
	OR (not \UART_OEM:BUART:reset_reg\ and \UART_OEM:BUART:rx_state_0\ and \UART_OEM:BUART:rx_state_3\)
	OR (not \UART_OEM:BUART:reset_reg\ and \UART_OEM:BUART:rx_state_1\ and \UART_OEM:BUART:rx_state_0\)
	OR (not \UART_OEM:BUART:reset_reg\ and \UART_OEM:BUART:rx_state_0\ and \UART_OEM:BUART:rx_state_2\));

\UART_OEM:BUART:rx_last\\D\ <= ((not \UART_OEM:BUART:reset_reg\ and Net_167));

\UART_OEM:BUART:rx_address_detected\\D\ <= ((not \UART_OEM:BUART:reset_reg\ and \UART_OEM:BUART:rx_address_detected\));

\UART_OEM:BUART:rx_count7_bit8\\D\ <= ((not \UART_OEM:BUART:reset_reg\ and \UART_OEM:BUART:rx_state_2\ and \UART_OEM:BUART:rx_count7_bit8_wire\)
	OR (not \UART_OEM:BUART:reset_reg\ and \UART_OEM:BUART:rx_state_3\ and \UART_OEM:BUART:rx_count7_bit8_wire\)
	OR (not \UART_OEM:BUART:reset_reg\ and \UART_OEM:BUART:rx_state_0\ and \UART_OEM:BUART:rx_count7_bit8_wire\)
	OR (not \UART_OEM:BUART:reset_reg\ and \UART_OEM:BUART:rx_state_1\ and \UART_OEM:BUART:rx_count7_bit8_wire\)
	OR (not \UART_OEM:BUART:reset_reg\ and \UART_OEM:BUART:rx_state_2\ and \UART_OEM:BUART:rx_count7_tc\)
	OR (not \UART_OEM:BUART:reset_reg\ and \UART_OEM:BUART:rx_state_3\ and \UART_OEM:BUART:rx_count7_tc\)
	OR (not \UART_OEM:BUART:reset_reg\ and \UART_OEM:BUART:rx_state_0\ and \UART_OEM:BUART:rx_count7_tc\)
	OR (not \UART_OEM:BUART:reset_reg\ and \UART_OEM:BUART:rx_state_1\ and \UART_OEM:BUART:rx_count7_tc\));

Net_158 <= (not \UART_RPI:BUART:txn\);

\UART_RPI:BUART:counter_load_not\ <= ((not \UART_RPI:BUART:tx_bitclk_enable_pre\ and \UART_RPI:BUART:tx_state_2\)
	OR \UART_RPI:BUART:tx_state_0\
	OR \UART_RPI:BUART:tx_state_1\);

\UART_RPI:BUART:tx_status_0\ <= ((not \UART_RPI:BUART:tx_state_1\ and not \UART_RPI:BUART:tx_state_0\ and \UART_RPI:BUART:tx_bitclk_enable_pre\ and \UART_RPI:BUART:tx_fifo_empty\ and \UART_RPI:BUART:tx_state_2\));

\UART_RPI:BUART:tx_status_2\ <= (not \UART_RPI:BUART:tx_fifo_notfull\);

\UART_RPI:BUART:tx_bitclk\\D\ <= ((not \UART_RPI:BUART:tx_state_2\ and \UART_RPI:BUART:tx_bitclk_enable_pre\)
	OR (\UART_RPI:BUART:tx_state_0\ and \UART_RPI:BUART:tx_bitclk_enable_pre\)
	OR (\UART_RPI:BUART:tx_state_1\ and \UART_RPI:BUART:tx_bitclk_enable_pre\));

\UART_RPI:BUART:tx_mark\\D\ <= ((not \UART_RPI:BUART:reset_reg\ and \UART_RPI:BUART:tx_mark\));

\UART_RPI:BUART:tx_state_2\\D\ <= ((not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:tx_state_2\ and \UART_RPI:BUART:tx_state_1\ and \UART_RPI:BUART:tx_counter_dp\ and \UART_RPI:BUART:tx_bitclk\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:tx_state_2\ and \UART_RPI:BUART:tx_state_1\ and \UART_RPI:BUART:tx_state_0\ and \UART_RPI:BUART:tx_bitclk\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:tx_state_1\ and \UART_RPI:BUART:tx_state_0\ and \UART_RPI:BUART:tx_state_2\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:tx_state_0\ and \UART_RPI:BUART:tx_state_1\ and \UART_RPI:BUART:tx_state_2\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:tx_bitclk_enable_pre\ and \UART_RPI:BUART:tx_state_2\));

\UART_RPI:BUART:tx_state_1\\D\ <= ((not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:tx_state_1\ and not \UART_RPI:BUART:tx_state_2\ and \UART_RPI:BUART:tx_state_0\ and \UART_RPI:BUART:tx_bitclk\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:tx_state_2\ and not \UART_RPI:BUART:tx_bitclk\ and \UART_RPI:BUART:tx_state_1\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:tx_bitclk_enable_pre\ and \UART_RPI:BUART:tx_state_1\ and \UART_RPI:BUART:tx_state_2\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:tx_state_0\ and not \UART_RPI:BUART:tx_counter_dp\ and \UART_RPI:BUART:tx_state_1\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:tx_state_0\ and \UART_RPI:BUART:tx_state_1\ and \UART_RPI:BUART:tx_state_2\));

\UART_RPI:BUART:tx_state_0\\D\ <= ((not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:tx_state_1\ and not \UART_RPI:BUART:tx_fifo_empty\ and \UART_RPI:BUART:tx_bitclk_enable_pre\ and \UART_RPI:BUART:tx_state_2\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:tx_state_1\ and not \UART_RPI:BUART:tx_state_0\ and not \UART_RPI:BUART:tx_fifo_empty\ and not \UART_RPI:BUART:tx_state_2\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:tx_bitclk_enable_pre\ and \UART_RPI:BUART:tx_state_0\ and \UART_RPI:BUART:tx_state_2\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:tx_state_2\ and not \UART_RPI:BUART:tx_bitclk\ and \UART_RPI:BUART:tx_state_0\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:tx_fifo_empty\ and \UART_RPI:BUART:tx_state_0\ and \UART_RPI:BUART:tx_state_2\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:tx_state_1\ and \UART_RPI:BUART:tx_state_0\ and \UART_RPI:BUART:tx_state_2\));

\UART_RPI:BUART:txn\\D\ <= ((not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:tx_state_0\ and not \UART_RPI:BUART:tx_shift_out\ and not \UART_RPI:BUART:tx_state_2\ and not \UART_RPI:BUART:tx_counter_dp\ and \UART_RPI:BUART:tx_state_1\ and \UART_RPI:BUART:tx_bitclk\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:tx_state_1\ and not \UART_RPI:BUART:tx_state_2\ and not \UART_RPI:BUART:tx_bitclk\ and \UART_RPI:BUART:tx_state_0\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:tx_state_1\ and not \UART_RPI:BUART:tx_shift_out\ and not \UART_RPI:BUART:tx_state_2\ and \UART_RPI:BUART:tx_state_0\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:tx_bitclk\ and \UART_RPI:BUART:txn\ and \UART_RPI:BUART:tx_state_1\)
	OR (not \UART_RPI:BUART:reset_reg\ and \UART_RPI:BUART:txn\ and \UART_RPI:BUART:tx_state_2\));

\UART_RPI:BUART:tx_parity_bit\\D\ <= ((not \UART_RPI:BUART:tx_state_0\ and \UART_RPI:BUART:txn\ and \UART_RPI:BUART:tx_parity_bit\)
	OR (not \UART_RPI:BUART:tx_state_1\ and not \UART_RPI:BUART:tx_state_0\ and \UART_RPI:BUART:tx_parity_bit\)
	OR \UART_RPI:BUART:tx_parity_bit\);

\UART_RPI:BUART:rx_counter_load\ <= ((not \UART_RPI:BUART:rx_state_1\ and not \UART_RPI:BUART:rx_state_0\ and not \UART_RPI:BUART:rx_state_3\ and not \UART_RPI:BUART:rx_state_2\));

\UART_RPI:BUART:rx_bitclk\\D\ <= ((not \UART_RPI:BUART:rx_count_3\ and not \UART_RPI:BUART:rx_count_2\ and not \UART_RPI:BUART:rx_count_1\ and not \UART_RPI:BUART:rx_count_0\ and not \UART_RPI:BUART:rx_count7_bit8_wire\)
	OR (not \UART_RPI:BUART:rx_count_3\ and \UART_RPI:BUART:rx_count_2\ and \UART_RPI:BUART:rx_count_1\ and \UART_RPI:BUART:rx_count_0\ and \UART_RPI:BUART:rx_count7_bit8_wire\));

\UART_RPI:BUART:rx_state_stop1_reg\\D\ <= (not \UART_RPI:BUART:rx_state_2\
	OR not \UART_RPI:BUART:rx_state_3\
	OR \UART_RPI:BUART:rx_state_0\
	OR \UART_RPI:BUART:rx_state_1\);

\UART_RPI:BUART:pollcount_1\\D\ <= ((not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_count_3\ and not MODIN7_1 and Net_154 and \UART_RPI:BUART:rx_count_2\ and \UART_RPI:BUART:rx_count_1\ and \UART_RPI:BUART:rx_count_0\ and \UART_RPI:BUART:rx_count7_bit8_wire\ and MODIN7_0)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_count_2\ and not \UART_RPI:BUART:rx_count_1\ and not \UART_RPI:BUART:rx_count_0\ and not MODIN7_1 and Net_154 and \UART_RPI:BUART:rx_count_3\ and \UART_RPI:BUART:rx_count7_bit8_wire\ and MODIN7_0)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_count_3\ and not MODIN7_0 and \UART_RPI:BUART:rx_count_2\ and \UART_RPI:BUART:rx_count_1\ and \UART_RPI:BUART:rx_count_0\ and \UART_RPI:BUART:rx_count7_bit8_wire\ and MODIN7_1)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_count_3\ and not \UART_RPI:BUART:rx_count_2\ and not \UART_RPI:BUART:rx_count_1\ and not \UART_RPI:BUART:rx_count7_bit8_wire\ and not MODIN7_1 and Net_154 and MODIN7_0)
	OR (not Net_154 and not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_count_3\ and \UART_RPI:BUART:rx_count_2\ and \UART_RPI:BUART:rx_count_1\ and \UART_RPI:BUART:rx_count_0\ and \UART_RPI:BUART:rx_count7_bit8_wire\ and MODIN7_1)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_count_2\ and not \UART_RPI:BUART:rx_count_1\ and not \UART_RPI:BUART:rx_count_0\ and not MODIN7_0 and \UART_RPI:BUART:rx_count_3\ and \UART_RPI:BUART:rx_count7_bit8_wire\ and MODIN7_1)
	OR (not Net_154 and not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_count_2\ and not \UART_RPI:BUART:rx_count_1\ and not \UART_RPI:BUART:rx_count_0\ and \UART_RPI:BUART:rx_count_3\ and \UART_RPI:BUART:rx_count7_bit8_wire\ and MODIN7_1)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_count_3\ and not \UART_RPI:BUART:rx_count_2\ and not \UART_RPI:BUART:rx_count_1\ and not \UART_RPI:BUART:rx_count7_bit8_wire\ and not MODIN7_0 and MODIN7_1)
	OR (not Net_154 and not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_count_3\ and not \UART_RPI:BUART:rx_count_2\ and not \UART_RPI:BUART:rx_count_1\ and not \UART_RPI:BUART:rx_count7_bit8_wire\ and MODIN7_1));

\UART_RPI:BUART:pollcount_0\\D\ <= ((not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_count_3\ and not MODIN7_0 and Net_154 and \UART_RPI:BUART:rx_count_2\ and \UART_RPI:BUART:rx_count_1\ and \UART_RPI:BUART:rx_count_0\ and \UART_RPI:BUART:rx_count7_bit8_wire\)
	OR (not Net_154 and not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_count_3\ and \UART_RPI:BUART:rx_count_2\ and \UART_RPI:BUART:rx_count_1\ and \UART_RPI:BUART:rx_count_0\ and \UART_RPI:BUART:rx_count7_bit8_wire\ and MODIN7_0)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_count_2\ and not \UART_RPI:BUART:rx_count_1\ and not \UART_RPI:BUART:rx_count_0\ and not MODIN7_0 and Net_154 and \UART_RPI:BUART:rx_count_3\ and \UART_RPI:BUART:rx_count7_bit8_wire\)
	OR (not Net_154 and not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_count_2\ and not \UART_RPI:BUART:rx_count_1\ and not \UART_RPI:BUART:rx_count_0\ and \UART_RPI:BUART:rx_count_3\ and \UART_RPI:BUART:rx_count7_bit8_wire\ and MODIN7_0)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_count_3\ and not \UART_RPI:BUART:rx_count_2\ and not \UART_RPI:BUART:rx_count_1\ and not \UART_RPI:BUART:rx_count7_bit8_wire\ and not MODIN7_0 and Net_154)
	OR (not Net_154 and not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_count_3\ and not \UART_RPI:BUART:rx_count_2\ and not \UART_RPI:BUART:rx_count_1\ and not \UART_RPI:BUART:rx_count7_bit8_wire\ and MODIN7_0));

\UART_RPI:BUART:rx_postpoll\ <= ((Net_154 and MODIN7_0)
	OR MODIN7_1);

\UART_RPI:BUART:rx_status_4\ <= ((\UART_RPI:BUART:rx_load_fifo\ and \UART_RPI:BUART:rx_fifofull\));

\UART_RPI:BUART:rx_status_5\ <= ((\UART_RPI:BUART:rx_fifonotempty\ and \UART_RPI:BUART:rx_state_stop1_reg\));

\UART_RPI:BUART:rx_stop_bit_error\\D\ <= ((not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_state_1\ and not \UART_RPI:BUART:rx_state_0\ and not MODIN7_1 and not MODIN7_0 and \UART_RPI:BUART:rx_bitclk_enable\ and \UART_RPI:BUART:rx_state_3\ and \UART_RPI:BUART:rx_state_2\)
	OR (not Net_154 and not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_state_1\ and not \UART_RPI:BUART:rx_state_0\ and not MODIN7_1 and \UART_RPI:BUART:rx_bitclk_enable\ and \UART_RPI:BUART:rx_state_3\ and \UART_RPI:BUART:rx_state_2\));

\UART_RPI:BUART:rx_load_fifo\\D\ <= ((not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_state_1\ and not \UART_RPI:BUART:rx_state_0\ and not \UART_RPI:BUART:rx_state_2\ and \UART_RPI:BUART:rx_bitclk_enable\ and \UART_RPI:BUART:rx_state_3\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_state_1\ and not \UART_RPI:BUART:rx_state_3\ and not \UART_RPI:BUART:rx_state_2\ and not MODIN10_5 and \UART_RPI:BUART:rx_state_0\ and \UART_RPI:BUART:rx_count7_bit8_wire\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_state_1\ and not \UART_RPI:BUART:rx_state_3\ and not \UART_RPI:BUART:rx_state_2\ and not MODIN10_6 and \UART_RPI:BUART:rx_state_0\ and \UART_RPI:BUART:rx_count7_bit8_wire\));

\UART_RPI:BUART:rx_state_3\\D\ <= ((not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_state_1\ and not \UART_RPI:BUART:rx_state_2\ and not MODIN10_5 and \UART_RPI:BUART:rx_state_0\ and \UART_RPI:BUART:rx_count7_bit8_wire\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_state_1\ and not \UART_RPI:BUART:rx_state_2\ and not MODIN10_6 and \UART_RPI:BUART:rx_state_0\ and \UART_RPI:BUART:rx_count7_bit8_wire\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_bitclk_enable\ and \UART_RPI:BUART:rx_state_3\)
	OR (not \UART_RPI:BUART:reset_reg\ and \UART_RPI:BUART:rx_state_1\ and \UART_RPI:BUART:rx_state_3\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_state_2\ and \UART_RPI:BUART:rx_state_3\)
	OR (not \UART_RPI:BUART:reset_reg\ and \UART_RPI:BUART:rx_state_0\ and \UART_RPI:BUART:rx_state_3\));

\UART_RPI:BUART:rx_state_2\\D\ <= ((not Net_154 and not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_state_1\ and not \UART_RPI:BUART:rx_state_0\ and not \UART_RPI:BUART:rx_state_3\ and not \UART_RPI:BUART:rx_state_2\ and \UART_RPI:BUART:rx_last\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_state_1\ and not \UART_RPI:BUART:rx_state_0\ and not \UART_RPI:BUART:rx_state_2\ and \UART_RPI:BUART:rx_bitclk_enable\ and \UART_RPI:BUART:rx_state_3\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_state_1\ and not \UART_RPI:BUART:rx_state_3\ and not MODIN10_5 and \UART_RPI:BUART:rx_state_0\ and \UART_RPI:BUART:rx_count7_bit8_wire\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_state_1\ and not \UART_RPI:BUART:rx_state_3\ and not MODIN10_6 and \UART_RPI:BUART:rx_state_0\ and \UART_RPI:BUART:rx_count7_bit8_wire\)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_bitclk_enable\ and \UART_RPI:BUART:rx_state_2\)
	OR (not \UART_RPI:BUART:reset_reg\ and \UART_RPI:BUART:rx_state_1\ and \UART_RPI:BUART:rx_state_2\)
	OR (not \UART_RPI:BUART:reset_reg\ and \UART_RPI:BUART:rx_state_0\ and \UART_RPI:BUART:rx_state_2\));

\UART_RPI:BUART:rx_state_1\\D\ <= ((not \UART_RPI:BUART:reset_reg\ and \UART_RPI:BUART:rx_state_1\));

\UART_RPI:BUART:rx_state_0\\D\ <= ((not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_state_1\ and not \UART_RPI:BUART:rx_state_3\ and not MODIN7_1 and not MODIN7_0 and \UART_RPI:BUART:rx_bitclk_enable\ and \UART_RPI:BUART:rx_state_2\)
	OR (not Net_154 and not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_state_1\ and not \UART_RPI:BUART:rx_state_3\ and not MODIN7_1 and \UART_RPI:BUART:rx_bitclk_enable\ and \UART_RPI:BUART:rx_state_2\)
	OR (not \UART_RPI:BUART:reset_reg\ and \UART_RPI:BUART:rx_state_0\ and MODIN10_6 and MODIN10_5)
	OR (not \UART_RPI:BUART:reset_reg\ and not \UART_RPI:BUART:rx_count7_bit8_wire\ and \UART_RPI:BUART:rx_state_0\)
	OR (not \UART_RPI:BUART:reset_reg\ and \UART_RPI:BUART:rx_state_0\ and \UART_RPI:BUART:rx_state_3\)
	OR (not \UART_RPI:BUART:reset_reg\ and \UART_RPI:BUART:rx_state_1\ and \UART_RPI:BUART:rx_state_0\)
	OR (not \UART_RPI:BUART:reset_reg\ and \UART_RPI:BUART:rx_state_0\ and \UART_RPI:BUART:rx_state_2\));

\UART_RPI:BUART:rx_last\\D\ <= ((not \UART_RPI:BUART:reset_reg\ and Net_154));

\UART_RPI:BUART:rx_address_detected\\D\ <= ((not \UART_RPI:BUART:reset_reg\ and \UART_RPI:BUART:rx_address_detected\));

\UART_RPI:BUART:rx_count7_bit8\\D\ <= ((not \UART_RPI:BUART:reset_reg\ and \UART_RPI:BUART:rx_state_2\ and \UART_RPI:BUART:rx_count7_bit8_wire\)
	OR (not \UART_RPI:BUART:reset_reg\ and \UART_RPI:BUART:rx_state_3\ and \UART_RPI:BUART:rx_count7_bit8_wire\)
	OR (not \UART_RPI:BUART:reset_reg\ and \UART_RPI:BUART:rx_state_0\ and \UART_RPI:BUART:rx_count7_bit8_wire\)
	OR (not \UART_RPI:BUART:reset_reg\ and \UART_RPI:BUART:rx_state_1\ and \UART_RPI:BUART:rx_count7_bit8_wire\)
	OR (not \UART_RPI:BUART:reset_reg\ and \UART_RPI:BUART:rx_state_2\ and \UART_RPI:BUART:rx_count7_tc\)
	OR (not \UART_RPI:BUART:reset_reg\ and \UART_RPI:BUART:rx_state_3\ and \UART_RPI:BUART:rx_count7_tc\)
	OR (not \UART_RPI:BUART:reset_reg\ and \UART_RPI:BUART:rx_state_0\ and \UART_RPI:BUART:rx_count7_tc\)
	OR (not \UART_RPI:BUART:reset_reg\ and \UART_RPI:BUART:rx_state_1\ and \UART_RPI:BUART:rx_count7_tc\));

Net_133 <= (not \UART_Debug:BUART:txn\);

\UART_Debug:BUART:counter_load_not\ <= ((not \UART_Debug:BUART:tx_bitclk_enable_pre\ and \UART_Debug:BUART:tx_state_2\)
	OR \UART_Debug:BUART:tx_state_0\
	OR \UART_Debug:BUART:tx_state_1\);

\UART_Debug:BUART:tx_status_0\ <= ((not \UART_Debug:BUART:tx_state_1\ and not \UART_Debug:BUART:tx_state_0\ and \UART_Debug:BUART:tx_bitclk_enable_pre\ and \UART_Debug:BUART:tx_fifo_empty\ and \UART_Debug:BUART:tx_state_2\));

\UART_Debug:BUART:tx_status_2\ <= (not \UART_Debug:BUART:tx_fifo_notfull\);

\UART_Debug:BUART:tx_bitclk\\D\ <= ((not \UART_Debug:BUART:tx_state_2\ and \UART_Debug:BUART:tx_bitclk_enable_pre\)
	OR (\UART_Debug:BUART:tx_state_0\ and \UART_Debug:BUART:tx_bitclk_enable_pre\)
	OR (\UART_Debug:BUART:tx_state_1\ and \UART_Debug:BUART:tx_bitclk_enable_pre\));

\UART_Debug:BUART:tx_mark\\D\ <= ((not \UART_Debug:BUART:reset_reg\ and \UART_Debug:BUART:tx_mark\));

\UART_Debug:BUART:tx_state_2\\D\ <= ((not \UART_Debug:BUART:reset_reg\ and not \UART_Debug:BUART:tx_state_2\ and \UART_Debug:BUART:tx_state_1\ and \UART_Debug:BUART:tx_counter_dp\ and \UART_Debug:BUART:tx_bitclk\)
	OR (not \UART_Debug:BUART:reset_reg\ and not \UART_Debug:BUART:tx_state_2\ and \UART_Debug:BUART:tx_state_1\ and \UART_Debug:BUART:tx_state_0\ and \UART_Debug:BUART:tx_bitclk\)
	OR (not \UART_Debug:BUART:reset_reg\ and not \UART_Debug:BUART:tx_state_1\ and \UART_Debug:BUART:tx_state_0\ and \UART_Debug:BUART:tx_state_2\)
	OR (not \UART_Debug:BUART:reset_reg\ and not \UART_Debug:BUART:tx_state_0\ and \UART_Debug:BUART:tx_state_1\ and \UART_Debug:BUART:tx_state_2\)
	OR (not \UART_Debug:BUART:reset_reg\ and not \UART_Debug:BUART:tx_bitclk_enable_pre\ and \UART_Debug:BUART:tx_state_2\));

\UART_Debug:BUART:tx_state_1\\D\ <= ((not \UART_Debug:BUART:reset_reg\ and not \UART_Debug:BUART:tx_state_1\ and not \UART_Debug:BUART:tx_state_2\ and \UART_Debug:BUART:tx_state_0\ and \UART_Debug:BUART:tx_bitclk\)
	OR (not \UART_Debug:BUART:reset_reg\ and not \UART_Debug:BUART:tx_state_2\ and not \UART_Debug:BUART:tx_bitclk\ and \UART_Debug:BUART:tx_state_1\)
	OR (not \UART_Debug:BUART:reset_reg\ and not \UART_Debug:BUART:tx_bitclk_enable_pre\ and \UART_Debug:BUART:tx_state_1\ and \UART_Debug:BUART:tx_state_2\)
	OR (not \UART_Debug:BUART:reset_reg\ and not \UART_Debug:BUART:tx_state_0\ and not \UART_Debug:BUART:tx_counter_dp\ and \UART_Debug:BUART:tx_state_1\)
	OR (not \UART_Debug:BUART:reset_reg\ and not \UART_Debug:BUART:tx_state_0\ and \UART_Debug:BUART:tx_state_1\ and \UART_Debug:BUART:tx_state_2\));

\UART_Debug:BUART:tx_state_0\\D\ <= ((not \UART_Debug:BUART:reset_reg\ and not \UART_Debug:BUART:tx_state_1\ and not \UART_Debug:BUART:tx_fifo_empty\ and \UART_Debug:BUART:tx_bitclk_enable_pre\ and \UART_Debug:BUART:tx_state_2\)
	OR (not \UART_Debug:BUART:reset_reg\ and not \UART_Debug:BUART:tx_state_1\ and not \UART_Debug:BUART:tx_state_0\ and not \UART_Debug:BUART:tx_fifo_empty\ and not \UART_Debug:BUART:tx_state_2\)
	OR (not \UART_Debug:BUART:reset_reg\ and not \UART_Debug:BUART:tx_bitclk_enable_pre\ and \UART_Debug:BUART:tx_state_0\ and \UART_Debug:BUART:tx_state_2\)
	OR (not \UART_Debug:BUART:reset_reg\ and not \UART_Debug:BUART:tx_state_2\ and not \UART_Debug:BUART:tx_bitclk\ and \UART_Debug:BUART:tx_state_0\)
	OR (not \UART_Debug:BUART:reset_reg\ and not \UART_Debug:BUART:tx_fifo_empty\ and \UART_Debug:BUART:tx_state_0\ and \UART_Debug:BUART:tx_state_2\)
	OR (not \UART_Debug:BUART:reset_reg\ and not \UART_Debug:BUART:tx_state_1\ and \UART_Debug:BUART:tx_state_0\ and \UART_Debug:BUART:tx_state_2\));

\UART_Debug:BUART:txn\\D\ <= ((not \UART_Debug:BUART:reset_reg\ and not \UART_Debug:BUART:tx_state_0\ and not \UART_Debug:BUART:tx_shift_out\ and not \UART_Debug:BUART:tx_state_2\ and not \UART_Debug:BUART:tx_counter_dp\ and \UART_Debug:BUART:tx_state_1\ and \UART_Debug:BUART:tx_bitclk\)
	OR (not \UART_Debug:BUART:reset_reg\ and not \UART_Debug:BUART:tx_state_1\ and not \UART_Debug:BUART:tx_state_2\ and not \UART_Debug:BUART:tx_bitclk\ and \UART_Debug:BUART:tx_state_0\)
	OR (not \UART_Debug:BUART:reset_reg\ and not \UART_Debug:BUART:tx_state_1\ and not \UART_Debug:BUART:tx_shift_out\ and not \UART_Debug:BUART:tx_state_2\ and \UART_Debug:BUART:tx_state_0\)
	OR (not \UART_Debug:BUART:reset_reg\ and not \UART_Debug:BUART:tx_bitclk\ and \UART_Debug:BUART:txn\ and \UART_Debug:BUART:tx_state_1\)
	OR (not \UART_Debug:BUART:reset_reg\ and \UART_Debug:BUART:txn\ and \UART_Debug:BUART:tx_state_2\));

\UART_Debug:BUART:tx_parity_bit\\D\ <= ((not \UART_Debug:BUART:tx_state_0\ and \UART_Debug:BUART:txn\ and \UART_Debug:BUART:tx_parity_bit\)
	OR (not \UART_Debug:BUART:tx_state_1\ and not \UART_Debug:BUART:tx_state_0\ and \UART_Debug:BUART:tx_parity_bit\)
	OR \UART_Debug:BUART:tx_parity_bit\);

\ADC_TS410:AMuxHw_2_Decoder_is_active\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_0\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_1\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_2\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_3\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_4\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_5\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_6\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_7\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_8\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_9\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_10\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_11\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_12\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_13\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_14\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_15\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_16\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_17\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_18\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_19\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_20\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_21\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_22\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_23\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_24\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_25\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_26\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_27\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_28\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_29\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_30\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_31\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_32\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_33\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_34\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_35\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_36\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_37\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_38\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_39\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_40\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_41\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_42\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_43\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_44\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_45\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_46\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_47\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_48\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_49\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_50\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_51\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_52\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_53\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_54\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_55\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_56\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_57\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_58\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_59\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_60\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_61\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_62\\D\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\));

\ADC_TS410:AMuxHw_2_Decoder_one_hot_63\\D\ <= ((\ADC_TS410:AMuxHw_2_Decoder_is_active\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

\ADC_TS410:bSAR_SEQ:cnt_enable\ <= (\ADC_TS410:bSAR_SEQ:load_period\
	OR Net_226);

\ADC_TS410:bSAR_SEQ:bus_clk_nrq_reg\\D\ <= ((not Net_227 and \ADC_TS410:bSAR_SEQ:bus_clk_nrq_reg\)
	OR \ADC_TS410:Net_3935\);

\ADC_TS410:bSAR_SEQ:nrq_edge_detect\ <= ((not \ADC_TS410:bSAR_SEQ:nrq_reg\ and \ADC_TS410:bSAR_SEQ:bus_clk_nrq_reg\));

\ADC_TS410:MODULE_1:g1:a0:gx:u0:lt_5\ <= ((not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\)
	OR (not \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\)
	OR (not \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\));

\ADC_TS410:MODULE_1:g1:a0:gx:u0:gt_5\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:ch_addr_4\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\));

\ADC_TS410:MODULE_1:g1:a0:gx:u0:lt_2\ <= ((not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\)
	OR (not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\)
	OR (not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\));

\ADC_TS410:MODULE_1:g1:a0:gx:u0:gt_2\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\));

Clock_ISR:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"0c9922a0-5431-4ab5-95f5-dc8c8fd4e9f9",
		source_clock_id=>"61737EF6-3B74-48f9-8B91-F7473A442AE7",
		divisor=>0,
		period=>"1000000000",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>Net_10,
		dig_domain_out=>open);
TX_OEM:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"fa43ed7f-cefa-44a2-8bf0-d3a57d0c7707",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"1",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__TX_OEM_net_0),
		y=>Net_171,
		fb=>(tmpFB_0__TX_OEM_net_0),
		analog=>(open),
		io=>(tmpIO_0__TX_OEM_net_0),
		siovref=>(tmpSIOVREF__TX_OEM_net_0),
		annotation=>(open),
		in_clock=>Net_12,
		in_clock_en=>tmpOE__TX_OEM_net_0,
		in_reset=>Net_12,
		out_clock=>Net_12,
		out_clock_en=>tmpOE__TX_OEM_net_0,
		out_reset=>Net_12,
		interrupt=>tmpINTERRUPT_0__TX_OEM_net_0);
USER_LED:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"e851a3b9-efb8-48be-bbb8-b303b216c393",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__TX_OEM_net_0),
		y=>(Net_12),
		fb=>(tmpFB_0__USER_LED_net_0),
		analog=>(open),
		io=>(tmpIO_0__USER_LED_net_0),
		siovref=>(tmpSIOVREF__USER_LED_net_0),
		annotation=>(open),
		in_clock=>Net_12,
		in_clock_en=>tmpOE__TX_OEM_net_0,
		in_reset=>Net_12,
		out_clock=>Net_12,
		out_clock_en=>tmpOE__TX_OEM_net_0,
		out_reset=>Net_12,
		interrupt=>tmpINTERRUPT_0__USER_LED_net_0);
RX_OEM:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"fb536421-51b8-453c-9a8a-048d4a7a124b",
		drive_mode=>"001",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"0",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__TX_OEM_net_0),
		y=>(Net_12),
		fb=>Net_167,
		analog=>(open),
		io=>(tmpIO_0__RX_OEM_net_0),
		siovref=>(tmpSIOVREF__RX_OEM_net_0),
		annotation=>(open),
		in_clock=>Net_12,
		in_clock_en=>tmpOE__TX_OEM_net_0,
		in_reset=>Net_12,
		out_clock=>Net_12,
		out_clock_en=>tmpOE__TX_OEM_net_0,
		out_reset=>Net_12,
		interrupt=>tmpINTERRUPT_0__RX_OEM_net_0);
RX_RPI:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"f0e5f922-0c14-47ec-b5c3-f9543d0b051a",
		drive_mode=>"001",
		ibuf_enabled=>"1",
		init_dr_st=>"0",
		input_sync=>"0",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"I",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"00",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__TX_OEM_net_0),
		y=>(Net_12),
		fb=>Net_154,
		analog=>(open),
		io=>(tmpIO_0__RX_RPI_net_0),
		siovref=>(tmpSIOVREF__RX_RPI_net_0),
		annotation=>(open),
		in_clock=>Net_12,
		in_clock_en=>tmpOE__TX_OEM_net_0,
		in_reset=>Net_12,
		out_clock=>Net_12,
		out_clock_en=>tmpOE__TX_OEM_net_0,
		out_reset=>Net_12,
		interrupt=>tmpINTERRUPT_0__RX_RPI_net_0);
\UART_OEM:IntClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"82310a8e-bc44-4a35-8f3d-5a6bd2026ad3/be0a0e37-ad17-42ca-b5a1-1a654d736358",
		source_clock_id=>"",
		divisor=>0,
		period=>"1085069444.44444",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\UART_OEM:Net_9\,
		dig_domain_out=>open);
\UART_OEM:BUART:ClkSync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\UART_OEM:Net_9\,
		enable=>tmpOE__TX_OEM_net_0,
		clock_out=>\UART_OEM:BUART:clock_op\);
\UART_OEM:BUART:sTX:TxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\UART_OEM:BUART:reset_reg\,
		clk=>\UART_OEM:BUART:clock_op\,
		cs_addr=>(\UART_OEM:BUART:tx_state_1\, \UART_OEM:BUART:tx_state_0\, \UART_OEM:BUART:tx_bitclk_enable_pre\),
		route_si=>Net_12,
		route_ci=>Net_12,
		f0_load=>Net_12,
		f1_load=>Net_12,
		d0_load=>Net_12,
		d1_load=>Net_12,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\UART_OEM:BUART:tx_shift_out\,
		f0_bus_stat=>\UART_OEM:BUART:tx_fifo_notfull\,
		f0_blk_stat=>\UART_OEM:BUART:tx_fifo_empty\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>Net_12,
		co=>open,
		sir=>Net_12,
		sor=>open,
		sil=>Net_12,
		sol=>open,
		msbi=>Net_12,
		msbo=>open,
		cei=>(Net_12, Net_12),
		ceo=>open,
		cli=>(Net_12, Net_12),
		clo=>open,
		zi=>(Net_12, Net_12),
		zo=>open,
		fi=>(Net_12, Net_12),
		fo=>open,
		capi=>(Net_12, Net_12),
		capo=>open,
		cfbi=>Net_12,
		cfbo=>open,
		pi=>(Net_12, Net_12, Net_12, Net_12,
			Net_12, Net_12, Net_12, Net_12),
		po=>open);
\UART_OEM:BUART:sTX:sCLOCK:TxBitClkGen\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100001111001000000100000000000101111100000000000000001000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\UART_OEM:BUART:reset_reg\,
		clk=>\UART_OEM:BUART:clock_op\,
		cs_addr=>(Net_12, Net_12, \UART_OEM:BUART:counter_load_not\),
		route_si=>Net_12,
		route_ci=>Net_12,
		f0_load=>Net_12,
		f1_load=>Net_12,
		d0_load=>Net_12,
		d1_load=>Net_12,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>open,
		f0_blk_stat=>open,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>\UART_OEM:BUART:tx_bitclk_enable_pre\,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>\UART_OEM:BUART:tx_counter_dp\,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>Net_12,
		co=>open,
		sir=>Net_12,
		sor=>open,
		sil=>Net_12,
		sol=>open,
		msbi=>Net_12,
		msbo=>open,
		cei=>(Net_12, Net_12),
		ceo=>open,
		cli=>(Net_12, Net_12),
		clo=>open,
		zi=>(Net_12, Net_12),
		zo=>open,
		fi=>(Net_12, Net_12),
		fo=>open,
		capi=>(Net_12, Net_12),
		capo=>open,
		cfbi=>Net_12,
		cfbo=>open,
		pi=>(Net_12, Net_12, Net_12, Net_12,
			Net_12, Net_12, Net_12, Net_12),
		po=>(\UART_OEM:BUART:sc_out_7\, \UART_OEM:BUART:sc_out_6\, \UART_OEM:BUART:sc_out_5\, \UART_OEM:BUART:sc_out_4\,
			\UART_OEM:BUART:sc_out_3\, \UART_OEM:BUART:sc_out_2\, \UART_OEM:BUART:sc_out_1\, \UART_OEM:BUART:sc_out_0\));
\UART_OEM:BUART:sTX:TxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0000001",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\UART_OEM:BUART:reset_reg\,
		clock=>\UART_OEM:BUART:clock_op\,
		status=>(Net_12, Net_12, Net_12, \UART_OEM:BUART:tx_fifo_notfull\,
			\UART_OEM:BUART:tx_status_2\, \UART_OEM:BUART:tx_fifo_empty\, \UART_OEM:BUART:tx_status_0\),
		interrupt=>\UART_OEM:BUART:tx_interrupt_out\);
\UART_OEM:BUART:sRX:RxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\UART_OEM:BUART:reset_reg\,
		clk=>\UART_OEM:BUART:clock_op\,
		cs_addr=>(\UART_OEM:BUART:rx_state_1\, \UART_OEM:BUART:rx_state_0\, \UART_OEM:BUART:rx_bitclk_enable\),
		route_si=>\UART_OEM:BUART:rx_postpoll\,
		route_ci=>Net_12,
		f0_load=>\UART_OEM:BUART:rx_load_fifo\,
		f1_load=>Net_12,
		d0_load=>Net_12,
		d1_load=>Net_12,
		ce0=>\UART_OEM:BUART:rx_addressmatch1\,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>\UART_OEM:BUART:rx_addressmatch2\,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\UART_OEM:BUART:hd_shift_out\,
		f0_bus_stat=>\UART_OEM:BUART:rx_fifonotempty\,
		f0_blk_stat=>\UART_OEM:BUART:rx_fifofull\,
		f1_bus_stat=>\UART_OEM:BUART:hd_tx_fifo_notfull\,
		f1_blk_stat=>\UART_OEM:BUART:hd_tx_fifo_empty\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>Net_12,
		co=>open,
		sir=>Net_12,
		sor=>open,
		sil=>Net_12,
		sol=>open,
		msbi=>Net_12,
		msbo=>open,
		cei=>(Net_12, Net_12),
		ceo=>open,
		cli=>(Net_12, Net_12),
		clo=>open,
		zi=>(Net_12, Net_12),
		zo=>open,
		fi=>(Net_12, Net_12),
		fo=>open,
		capi=>(Net_12, Net_12),
		capo=>open,
		cfbi=>Net_12,
		cfbo=>open,
		pi=>(Net_12, Net_12, Net_12, Net_12,
			Net_12, Net_12, Net_12, Net_12),
		po=>open);
\UART_OEM:BUART:sRX:RxBitCounter\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1110110",
		cy_init_value=>"0000000",
		cy_route_ld=>'1',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>\UART_OEM:BUART:clock_op\,
		reset=>\UART_OEM:BUART:reset_reg\,
		load=>\UART_OEM:BUART:rx_counter_load\,
		enable=>tmpOE__TX_OEM_net_0,
		count=>(MODIN6_6, MODIN6_5, MODIN6_4, \UART_OEM:BUART:rx_count_3\,
			\UART_OEM:BUART:rx_count_2\, \UART_OEM:BUART:rx_count_1\, \UART_OEM:BUART:rx_count_0\),
		tc=>\UART_OEM:BUART:rx_count7_tc\);
\UART_OEM:BUART:sRX:RxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"1011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\UART_OEM:BUART:reset_reg\,
		clock=>\UART_OEM:BUART:clock_op\,
		status=>(Net_12, \UART_OEM:BUART:rx_status_5\, \UART_OEM:BUART:rx_status_4\, \UART_OEM:BUART:rx_status_3\,
			\UART_OEM:BUART:rx_status_2\, Net_12, Net_12),
		interrupt=>\UART_OEM:BUART:rx_interrupt_out\);
TX_RPI:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"0b5321eb-dce1-4593-82b0-f3e8c91310e8",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"1",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__TX_OEM_net_0),
		y=>Net_158,
		fb=>(tmpFB_0__TX_RPI_net_0),
		analog=>(open),
		io=>(tmpIO_0__TX_RPI_net_0),
		siovref=>(tmpSIOVREF__TX_RPI_net_0),
		annotation=>(open),
		in_clock=>Net_12,
		in_clock_en=>tmpOE__TX_OEM_net_0,
		in_reset=>Net_12,
		out_clock=>Net_12,
		out_clock_en=>tmpOE__TX_OEM_net_0,
		out_reset=>Net_12,
		interrupt=>tmpINTERRUPT_0__TX_RPI_net_0);
\UART_RPI:IntClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"de80b45f-e467-49b7-b57f-ec8d7f13bc71/be0a0e37-ad17-42ca-b5a1-1a654d736358",
		source_clock_id=>"",
		divisor=>0,
		period=>"542534722.222222",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\UART_RPI:Net_9\,
		dig_domain_out=>open);
\UART_RPI:BUART:ClkSync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\UART_RPI:Net_9\,
		enable=>tmpOE__TX_OEM_net_0,
		clock_out=>\UART_RPI:BUART:clock_op\);
\UART_RPI:BUART:sTX:TxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\UART_RPI:BUART:reset_reg\,
		clk=>\UART_RPI:BUART:clock_op\,
		cs_addr=>(\UART_RPI:BUART:tx_state_1\, \UART_RPI:BUART:tx_state_0\, \UART_RPI:BUART:tx_bitclk_enable_pre\),
		route_si=>Net_12,
		route_ci=>Net_12,
		f0_load=>Net_12,
		f1_load=>Net_12,
		d0_load=>Net_12,
		d1_load=>Net_12,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\UART_RPI:BUART:tx_shift_out\,
		f0_bus_stat=>\UART_RPI:BUART:tx_fifo_notfull\,
		f0_blk_stat=>\UART_RPI:BUART:tx_fifo_empty\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>Net_12,
		co=>open,
		sir=>Net_12,
		sor=>open,
		sil=>Net_12,
		sol=>open,
		msbi=>Net_12,
		msbo=>open,
		cei=>(Net_12, Net_12),
		ceo=>open,
		cli=>(Net_12, Net_12),
		clo=>open,
		zi=>(Net_12, Net_12),
		zo=>open,
		fi=>(Net_12, Net_12),
		fo=>open,
		capi=>(Net_12, Net_12),
		capo=>open,
		cfbi=>Net_12,
		cfbo=>open,
		pi=>(Net_12, Net_12, Net_12, Net_12,
			Net_12, Net_12, Net_12, Net_12),
		po=>open);
\UART_RPI:BUART:sTX:sCLOCK:TxBitClkGen\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100001111001000000100000000000101111100000000000000001000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\UART_RPI:BUART:reset_reg\,
		clk=>\UART_RPI:BUART:clock_op\,
		cs_addr=>(Net_12, Net_12, \UART_RPI:BUART:counter_load_not\),
		route_si=>Net_12,
		route_ci=>Net_12,
		f0_load=>Net_12,
		f1_load=>Net_12,
		d0_load=>Net_12,
		d1_load=>Net_12,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>open,
		f0_blk_stat=>open,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>\UART_RPI:BUART:tx_bitclk_enable_pre\,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>\UART_RPI:BUART:tx_counter_dp\,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>Net_12,
		co=>open,
		sir=>Net_12,
		sor=>open,
		sil=>Net_12,
		sol=>open,
		msbi=>Net_12,
		msbo=>open,
		cei=>(Net_12, Net_12),
		ceo=>open,
		cli=>(Net_12, Net_12),
		clo=>open,
		zi=>(Net_12, Net_12),
		zo=>open,
		fi=>(Net_12, Net_12),
		fo=>open,
		capi=>(Net_12, Net_12),
		capo=>open,
		cfbi=>Net_12,
		cfbo=>open,
		pi=>(Net_12, Net_12, Net_12, Net_12,
			Net_12, Net_12, Net_12, Net_12),
		po=>(\UART_RPI:BUART:sc_out_7\, \UART_RPI:BUART:sc_out_6\, \UART_RPI:BUART:sc_out_5\, \UART_RPI:BUART:sc_out_4\,
			\UART_RPI:BUART:sc_out_3\, \UART_RPI:BUART:sc_out_2\, \UART_RPI:BUART:sc_out_1\, \UART_RPI:BUART:sc_out_0\));
\UART_RPI:BUART:sTX:TxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0000001",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\UART_RPI:BUART:reset_reg\,
		clock=>\UART_RPI:BUART:clock_op\,
		status=>(Net_12, Net_12, Net_12, \UART_RPI:BUART:tx_fifo_notfull\,
			\UART_RPI:BUART:tx_status_2\, \UART_RPI:BUART:tx_fifo_empty\, \UART_RPI:BUART:tx_status_0\),
		interrupt=>\UART_RPI:BUART:tx_interrupt_out\);
\UART_RPI:BUART:sRX:RxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\UART_RPI:BUART:reset_reg\,
		clk=>\UART_RPI:BUART:clock_op\,
		cs_addr=>(\UART_RPI:BUART:rx_state_1\, \UART_RPI:BUART:rx_state_0\, \UART_RPI:BUART:rx_bitclk_enable\),
		route_si=>\UART_RPI:BUART:rx_postpoll\,
		route_ci=>Net_12,
		f0_load=>\UART_RPI:BUART:rx_load_fifo\,
		f1_load=>Net_12,
		d0_load=>Net_12,
		d1_load=>Net_12,
		ce0=>\UART_RPI:BUART:rx_addressmatch1\,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>\UART_RPI:BUART:rx_addressmatch2\,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\UART_RPI:BUART:hd_shift_out\,
		f0_bus_stat=>\UART_RPI:BUART:rx_fifonotempty\,
		f0_blk_stat=>\UART_RPI:BUART:rx_fifofull\,
		f1_bus_stat=>\UART_RPI:BUART:hd_tx_fifo_notfull\,
		f1_blk_stat=>\UART_RPI:BUART:hd_tx_fifo_empty\,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>Net_12,
		co=>open,
		sir=>Net_12,
		sor=>open,
		sil=>Net_12,
		sol=>open,
		msbi=>Net_12,
		msbo=>open,
		cei=>(Net_12, Net_12),
		ceo=>open,
		cli=>(Net_12, Net_12),
		clo=>open,
		zi=>(Net_12, Net_12),
		zo=>open,
		fi=>(Net_12, Net_12),
		fo=>open,
		capi=>(Net_12, Net_12),
		capo=>open,
		cfbi=>Net_12,
		cfbo=>open,
		pi=>(Net_12, Net_12, Net_12, Net_12,
			Net_12, Net_12, Net_12, Net_12),
		po=>open);
\UART_RPI:BUART:sRX:RxBitCounter\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"1110110",
		cy_init_value=>"0000000",
		cy_route_ld=>'1',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>\UART_RPI:BUART:clock_op\,
		reset=>\UART_RPI:BUART:reset_reg\,
		load=>\UART_RPI:BUART:rx_counter_load\,
		enable=>tmpOE__TX_OEM_net_0,
		count=>(MODIN10_6, MODIN10_5, MODIN10_4, \UART_RPI:BUART:rx_count_3\,
			\UART_RPI:BUART:rx_count_2\, \UART_RPI:BUART:rx_count_1\, \UART_RPI:BUART:rx_count_0\),
		tc=>\UART_RPI:BUART:rx_count7_tc\);
\UART_RPI:BUART:sRX:RxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"1011111",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\UART_RPI:BUART:reset_reg\,
		clock=>\UART_RPI:BUART:clock_op\,
		status=>(Net_12, \UART_RPI:BUART:rx_status_5\, \UART_RPI:BUART:rx_status_4\, \UART_RPI:BUART:rx_status_3\,
			\UART_RPI:BUART:rx_status_2\, Net_12, Net_12),
		interrupt=>\UART_RPI:BUART:rx_interrupt_out\);
TX_Debug:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"ed092b9b-d398-4703-be89-cebf998501f6",
		drive_mode=>"110",
		ibuf_enabled=>"1",
		init_dr_st=>"1",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"1",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"O",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__TX_OEM_net_0),
		y=>Net_133,
		fb=>(tmpFB_0__TX_Debug_net_0),
		analog=>(open),
		io=>(tmpIO_0__TX_Debug_net_0),
		siovref=>(tmpSIOVREF__TX_Debug_net_0),
		annotation=>(open),
		in_clock=>Net_12,
		in_clock_en=>tmpOE__TX_OEM_net_0,
		in_reset=>Net_12,
		out_clock=>Net_12,
		out_clock_en=>tmpOE__TX_OEM_net_0,
		out_reset=>Net_12,
		interrupt=>tmpINTERRUPT_0__TX_Debug_net_0);
\UART_Debug:IntClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"b0162966-0060-4af5-82d1-fcb491ad7619/be0a0e37-ad17-42ca-b5a1-1a654d736358",
		source_clock_id=>"",
		divisor=>0,
		period=>"542534722.222222",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\UART_Debug:Net_9\,
		dig_domain_out=>open);
\UART_Debug:BUART:ClkSync\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\UART_Debug:Net_9\,
		enable=>tmpOE__TX_OEM_net_0,
		clock_out=>\UART_Debug:BUART:clock_op\);
\UART_Debug:BUART:sTX:TxShifter:u0\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\UART_Debug:BUART:reset_reg\,
		clk=>\UART_Debug:BUART:clock_op\,
		cs_addr=>(\UART_Debug:BUART:tx_state_1\, \UART_Debug:BUART:tx_state_0\, \UART_Debug:BUART:tx_bitclk_enable_pre\),
		route_si=>Net_12,
		route_ci=>Net_12,
		f0_load=>Net_12,
		f1_load=>Net_12,
		d0_load=>Net_12,
		d1_load=>Net_12,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>\UART_Debug:BUART:tx_shift_out\,
		f0_bus_stat=>\UART_Debug:BUART:tx_fifo_notfull\,
		f0_blk_stat=>\UART_Debug:BUART:tx_fifo_empty\,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>open,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>open,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>Net_12,
		co=>open,
		sir=>Net_12,
		sor=>open,
		sil=>Net_12,
		sol=>open,
		msbi=>Net_12,
		msbo=>open,
		cei=>(Net_12, Net_12),
		ceo=>open,
		cli=>(Net_12, Net_12),
		clo=>open,
		zi=>(Net_12, Net_12),
		zo=>open,
		fi=>(Net_12, Net_12),
		fo=>open,
		capi=>(Net_12, Net_12),
		capo=>open,
		cfbi=>Net_12,
		cfbo=>open,
		pi=>(Net_12, Net_12, Net_12, Net_12,
			Net_12, Net_12, Net_12, Net_12),
		po=>open);
\UART_Debug:BUART:sTX:sCLOCK:TxBitClkGen\:cy_psoc3_dp
	GENERIC MAP(cy_dpconfig=>"1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100001111001000000100000000000101111100000000000000001000",
		d0_init=>"00000000",
		d1_init=>"00000000",
		a0_init=>"00000000",
		a1_init=>"00000000",
		ce0_sync=>'1',
		cl0_sync=>'1',
		z0_sync=>'1',
		ff0_sync=>'1',
		ce1_sync=>'1',
		cl1_sync=>'1',
		z1_sync=>'1',
		ff1_sync=>'1',
		ov_msb_sync=>'1',
		co_msb_sync=>'1',
		cmsb_sync=>'1',
		so_sync=>'1',
		f0_bus_sync=>'1',
		f0_blk_sync=>'1',
		f1_bus_sync=>'1',
		f1_blk_sync=>'1')
	PORT MAP(reset=>\UART_Debug:BUART:reset_reg\,
		clk=>\UART_Debug:BUART:clock_op\,
		cs_addr=>(Net_12, Net_12, \UART_Debug:BUART:counter_load_not\),
		route_si=>Net_12,
		route_ci=>Net_12,
		f0_load=>Net_12,
		f1_load=>Net_12,
		d0_load=>Net_12,
		d1_load=>Net_12,
		ce0=>open,
		cl0=>open,
		z0=>open,
		ff0=>open,
		ce1=>open,
		cl1=>open,
		z1=>open,
		ff1=>open,
		ov_msb=>open,
		co_msb=>open,
		cmsb=>open,
		so=>open,
		f0_bus_stat=>open,
		f0_blk_stat=>open,
		f1_bus_stat=>open,
		f1_blk_stat=>open,
		ce0_reg=>\UART_Debug:BUART:tx_bitclk_enable_pre\,
		cl0_reg=>open,
		z0_reg=>open,
		ff0_reg=>open,
		ce1_reg=>\UART_Debug:BUART:tx_counter_dp\,
		cl1_reg=>open,
		z1_reg=>open,
		ff1_reg=>open,
		ov_msb_reg=>open,
		co_msb_reg=>open,
		cmsb_reg=>open,
		so_reg=>open,
		f0_bus_stat_reg=>open,
		f0_blk_stat_reg=>open,
		f1_bus_stat_reg=>open,
		f1_blk_stat_reg=>open,
		ci=>Net_12,
		co=>open,
		sir=>Net_12,
		sor=>open,
		sil=>Net_12,
		sol=>open,
		msbi=>Net_12,
		msbo=>open,
		cei=>(Net_12, Net_12),
		ceo=>open,
		cli=>(Net_12, Net_12),
		clo=>open,
		zi=>(Net_12, Net_12),
		zo=>open,
		fi=>(Net_12, Net_12),
		fo=>open,
		capi=>(Net_12, Net_12),
		capo=>open,
		cfbi=>Net_12,
		cfbo=>open,
		pi=>(Net_12, Net_12, Net_12, Net_12,
			Net_12, Net_12, Net_12, Net_12),
		po=>(\UART_Debug:BUART:sc_out_7\, \UART_Debug:BUART:sc_out_6\, \UART_Debug:BUART:sc_out_5\, \UART_Debug:BUART:sc_out_4\,
			\UART_Debug:BUART:sc_out_3\, \UART_Debug:BUART:sc_out_2\, \UART_Debug:BUART:sc_out_1\, \UART_Debug:BUART:sc_out_0\));
\UART_Debug:BUART:sTX:TxSts\:cy_psoc3_statusi
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"0000001",
		cy_int_mask=>"1111111")
	PORT MAP(reset=>\UART_Debug:BUART:reset_reg\,
		clock=>\UART_Debug:BUART:clock_op\,
		status=>(Net_12, Net_12, Net_12, \UART_Debug:BUART:tx_fifo_notfull\,
			\UART_Debug:BUART:tx_status_2\, \UART_Debug:BUART:tx_fifo_empty\, \UART_Debug:BUART:tx_status_0\),
		interrupt=>\UART_Debug:BUART:tx_interrupt_out\);
\Timer_ISR:TimerHW\:cy_psoc3_timer_v1_0
	GENERIC MAP(cy_registers=>"")
	PORT MAP(clock=>Net_10,
		kill=>Net_12,
		enable=>tmpOE__TX_OEM_net_0,
		capture=>Net_12,
		timer_reset=>Net_12,
		tc=>\Timer_ISR:Net_51\,
		compare=>\Timer_ISR:Net_261\,
		interrupt=>Net_180);
\ADC_TS410:AMuxHw_2\:cy_psoc3_amux_v1_0
	GENERIC MAP(cy_registers=>"",
		muxin_width=>64,
		hw_control=>'1',
		one_active=>'1',
		init_mux_sel=>"0000000000000000000000000000000000000000000000000000000000000000",
		api_type=>2,
		connect_mode=>1)
	PORT MAP(muxin=>(Net_322, Net_321, Net_320, Net_319,
			Net_318, Net_317, Net_316, Net_315,
			Net_314, Net_313, Net_312, Net_311,
			Net_310, Net_309, Net_308, Net_307,
			Net_306, Net_304, Net_302, Net_301,
			Net_299, Net_297, Net_296, Net_294,
			Net_292, Net_291, Net_289, Net_287,
			Net_286, Net_284, Net_282, Net_281,
			Net_279, Net_277, Net_276, Net_274,
			Net_272, Net_271, Net_269, Net_267,
			Net_266, Net_264, Net_262, Net_261,
			Net_259, Net_257, Net_256, Net_254,
			Net_252, Net_251, Net_249, Net_247,
			Net_246, Net_244, Net_242, Net_241,
			Net_239, Net_237, Net_236, Net_234,
			Net_232, Net_231, Net_229, Net_228),
		hw_ctrl_en=>(\ADC_TS410:AMuxHw_2_Decoder_one_hot_63\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_62\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_61\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_60\,
			\ADC_TS410:AMuxHw_2_Decoder_one_hot_59\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_58\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_57\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_56\,
			\ADC_TS410:AMuxHw_2_Decoder_one_hot_55\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_54\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_53\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_52\,
			\ADC_TS410:AMuxHw_2_Decoder_one_hot_51\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_50\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_49\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_48\,
			\ADC_TS410:AMuxHw_2_Decoder_one_hot_47\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_46\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_45\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_44\,
			\ADC_TS410:AMuxHw_2_Decoder_one_hot_43\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_42\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_41\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_40\,
			\ADC_TS410:AMuxHw_2_Decoder_one_hot_39\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_38\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_37\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_36\,
			\ADC_TS410:AMuxHw_2_Decoder_one_hot_35\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_34\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_33\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_32\,
			\ADC_TS410:AMuxHw_2_Decoder_one_hot_31\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_30\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_29\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_28\,
			\ADC_TS410:AMuxHw_2_Decoder_one_hot_27\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_26\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_25\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_24\,
			\ADC_TS410:AMuxHw_2_Decoder_one_hot_23\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_22\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_21\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_20\,
			\ADC_TS410:AMuxHw_2_Decoder_one_hot_19\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_18\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_17\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_16\,
			\ADC_TS410:AMuxHw_2_Decoder_one_hot_15\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_14\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_13\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_12\,
			\ADC_TS410:AMuxHw_2_Decoder_one_hot_11\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_10\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_9\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_8\,
			\ADC_TS410:AMuxHw_2_Decoder_one_hot_7\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_6\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_5\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_4\,
			\ADC_TS410:AMuxHw_2_Decoder_one_hot_3\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_2\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_1\, \ADC_TS410:AMuxHw_2_Decoder_one_hot_0\),
		vout=>\ADC_TS410:V_single\);
\ADC_TS410:SAR:cy_analog_virtualmux_3_connect\:cy_connect_v1_0
	GENERIC MAP(sig_width=>1,
		is_net_join=>'0')
	PORT MAP(signal1=>\ADC_TS410:SAR:Net_248\,
		signal2=>\ADC_TS410:SAR:Net_235\);
\ADC_TS410:SAR:ADC_SAR\:cy_psoc5_sar_v2_0
	GENERIC MAP(cy_registers=>"")
	PORT MAP(vplus=>\ADC_TS410:Net_2803\,
		vminus=>\ADC_TS410:SAR:Net_126\,
		ext_pin=>\ADC_TS410:SAR:Net_215\,
		vrefhi_out=>\ADC_TS410:SAR:Net_257\,
		vref=>\ADC_TS410:SAR:Net_248\,
		clock=>\ADC_TS410:clock\,
		pump_clock=>\ADC_TS410:clock\,
		sof_udb=>Net_12,
		clk_udb=>Net_12,
		vp_ctl_udb=>(Net_12, Net_12, Net_12, Net_12),
		vn_ctl_udb=>(Net_12, Net_12, Net_12, Net_12),
		irq=>\ADC_TS410:SAR:Net_252\,
		next_out=>Net_226,
		data_out=>(\ADC_TS410:SAR:Net_207_11\, \ADC_TS410:SAR:Net_207_10\, \ADC_TS410:SAR:Net_207_9\, \ADC_TS410:SAR:Net_207_8\,
			\ADC_TS410:SAR:Net_207_7\, \ADC_TS410:SAR:Net_207_6\, \ADC_TS410:SAR:Net_207_5\, \ADC_TS410:SAR:Net_207_4\,
			\ADC_TS410:SAR:Net_207_3\, \ADC_TS410:SAR:Net_207_2\, \ADC_TS410:SAR:Net_207_1\, \ADC_TS410:SAR:Net_207_0\),
		eof_udb=>\ADC_TS410:Net_3830\);
\ADC_TS410:SAR:cy_analog_virtualmux_2_connect\:cy_connect_v1_0
	GENERIC MAP(sig_width=>1,
		is_net_join=>'0')
	PORT MAP(signal1=>\ADC_TS410:SAR:Net_215\,
		signal2=>\ADC_TS410:SAR:Net_209\);
\ADC_TS410:SAR:cy_analog_virtualmux_1_connect\:cy_connect_v1_0
	GENERIC MAP(sig_width=>1,
		is_net_join=>'0')
	PORT MAP(signal1=>\ADC_TS410:SAR:Net_126\,
		signal2=>\ADC_TS410:SAR:Net_149\);
\ADC_TS410:SAR:noconnect\:cy_analog_noconnect_v1_0
	PORT MAP(noconnect=>\ADC_TS410:SAR:Net_209\);
\ADC_TS410:SAR:cy_analog_virtualmux_4_connect\:cy_connect_v1_0
	GENERIC MAP(sig_width=>1,
		is_net_join=>'0')
	PORT MAP(signal1=>\ADC_TS410:SAR:Net_257\,
		signal2=>\ADC_TS410:SAR:Net_149\);
\ADC_TS410:SAR:cy_analog_noconnect_1\:cy_analog_noconnect_v1_0
	PORT MAP(noconnect=>\ADC_TS410:SAR:Net_255\);
\ADC_TS410:SAR:vRef_Vdda_1\:cy_vref_v1_0
	GENERIC MAP(guid=>"4720866E-BC14-478d-B8A0-3E44F38CADAC",
		name=>"Vdda/2",
		autoenable=>'1',
		ignoresleep=>'0')
	PORT MAP(vout=>\ADC_TS410:SAR:Net_235\);
\ADC_TS410:SAR:noconnect_1\:cy_analog_noconnect_v1_0
	PORT MAP(noconnect=>\ADC_TS410:SAR:Net_368\);
\ADC_TS410:cy_analog_virtualmux_1_connect\:cy_connect_v1_0
	GENERIC MAP(sig_width=>1,
		is_net_join=>'0')
	PORT MAP(signal1=>\ADC_TS410:Net_2803\,
		signal2=>\ADC_TS410:V_single\);
\ADC_TS410:bSAR_SEQ:ClkEn\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\ADC_TS410:clock\,
		enable=>\ADC_TS410:bSAR_SEQ:enable\,
		clock_out=>\ADC_TS410:bSAR_SEQ:clk_fin\);
\ADC_TS410:bSAR_SEQ:ClkCtrl\:cy_psoc3_udb_clock_enable_v1_0
	GENERIC MAP(sync_mode=>'1')
	PORT MAP(clock_in=>\ADC_TS410:clock\,
		enable=>tmpOE__TX_OEM_net_0,
		clock_out=>\ADC_TS410:bSAR_SEQ:clk_ctrl\);
\ADC_TS410:bSAR_SEQ:CtrlReg\:cy_psoc3_control
	GENERIC MAP(cy_init_value=>"00000000",
		cy_force_order=>'1',
		cy_ctrl_mode_1=>"00000110",
		cy_ctrl_mode_0=>"00000111",
		cy_ext_reset=>'0')
	PORT MAP(reset=>Net_12,
		clock=>\ADC_TS410:bSAR_SEQ:clk_ctrl\,
		control=>(\ADC_TS410:bSAR_SEQ:control_7\, \ADC_TS410:bSAR_SEQ:control_6\, \ADC_TS410:bSAR_SEQ:control_5\, \ADC_TS410:bSAR_SEQ:control_4\,
			\ADC_TS410:bSAR_SEQ:control_3\, \ADC_TS410:bSAR_SEQ:control_2\, \ADC_TS410:bSAR_SEQ:load_period\, \ADC_TS410:bSAR_SEQ:enable\));
\ADC_TS410:bSAR_SEQ:ChannelCounter\:cy_psoc3_count7
	GENERIC MAP(cy_period=>"0000011",
		cy_init_value=>"0000000",
		cy_route_ld=>'1',
		cy_route_en=>'1',
		cy_alt_mode=>'0')
	PORT MAP(clock=>\ADC_TS410:bSAR_SEQ:clk_fin\,
		reset=>Net_12,
		load=>\ADC_TS410:bSAR_SEQ:load_period\,
		enable=>\ADC_TS410:bSAR_SEQ:cnt_enable\,
		count=>(\ADC_TS410:bSAR_SEQ:count_6\, \ADC_TS410:ch_addr_5\, \ADC_TS410:ch_addr_4\, \ADC_TS410:ch_addr_3\,
			\ADC_TS410:ch_addr_2\, \ADC_TS410:ch_addr_1\, \ADC_TS410:ch_addr_0\),
		tc=>\ADC_TS410:bSAR_SEQ:cnt_tc\);
\ADC_TS410:bSAR_SEQ:EOCSts\:cy_psoc3_status
	GENERIC MAP(cy_force_order=>'1',
		cy_md_select=>"00000001")
	PORT MAP(reset=>Net_12,
		clock=>\ADC_TS410:bSAR_SEQ:clk_fin\,
		status=>(Net_12, Net_12, Net_12, Net_12,
			Net_12, Net_12, Net_12, Net_227));
\ADC_TS410:IntClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"a2d43960-3591-4461-831b-81fa7736e9e2/9725d809-97e7-404e-b621-dfdbe78d0ca9",
		source_clock_id=>"",
		divisor=>0,
		period=>"625000000",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\ADC_TS410:clock\,
		dig_domain_out=>open);
\ADC_TS410:TempBuf\:cy_dma_v1_0
	GENERIC MAP(drq_type=>"00",
		num_tds=>0)
	PORT MAP(drq=>\ADC_TS410:Net_3830\,
		trq=>Net_12,
		nrq=>\ADC_TS410:Net_3698\);
\ADC_TS410:FinalBuf\:cy_dma_v1_0
	GENERIC MAP(drq_type=>"00",
		num_tds=>0)
	PORT MAP(drq=>\ADC_TS410:Net_3698\,
		trq=>Net_12,
		nrq=>\ADC_TS410:nrq\);
\ADC_TS410:BusClock\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"a2d43960-3591-4461-831b-81fa7736e9e2/3d23b625-9a71-4c05-baf4-2f904356009b",
		source_clock_id=>"75C2148C-3656-4d8a-846D-0CAE99AB6FF7",
		divisor=>0,
		period=>"0",
		is_direct=>'1',
		is_digital=>'1')
	PORT MAP(clock_out=>\ADC_TS410:Net_3710\,
		dig_domain_out=>open);
\ADC_TS410:IRQ\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_227);
\ADC_TS410:Sync:genblk1[0]:INST\:cy_psoc3_sync
	PORT MAP(clock=>\ADC_TS410:Net_3710\,
		sc_in=>\ADC_TS410:nrq\,
		sc_out=>\ADC_TS410:Net_3935\);
\ADC_TS410:MODULE_1:g1:a0:gx:u0:gne(1):c4:c6:u1\:cy_buf
	PORT MAP(x=>\ADC_TS410:MODULE_1:g1:a0:gx:u0:lt_5\,
		y=>\ADC_TS410:MODULE_1:g1:a0:gx:u0:lti_1\);
\ADC_TS410:MODULE_1:g1:a0:gx:u0:gne(1):c4:c6:u2\:cy_buf
	PORT MAP(x=>\ADC_TS410:MODULE_1:g1:a0:gx:u0:gt_5\,
		y=>\ADC_TS410:MODULE_1:g1:a0:gx:u0:gti_1\);
\ADC_TS410:MODULE_1:g1:a0:gx:u0:gne(0):c3:u1\:cy_buf
	PORT MAP(x=>\ADC_TS410:MODULE_1:g1:a0:gx:u0:lt_2\,
		y=>\ADC_TS410:MODULE_1:g1:a0:gx:u0:lti_0\);
\ADC_TS410:MODULE_1:g1:a0:gx:u0:gne(0):c3:u2\:cy_buf
	PORT MAP(x=>\ADC_TS410:MODULE_1:g1:a0:gx:u0:gt_2\,
		y=>\ADC_TS410:MODULE_1:g1:a0:gx:u0:gti_0\);
Timer_Interrupt:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_180);
ADC_CH0:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"77715107-f8d5-47e5-a629-0fb83101ac6b",
		drive_mode=>"000",
		ibuf_enabled=>"0",
		init_dr_st=>"1",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"A",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__TX_OEM_net_0),
		y=>(Net_12),
		fb=>(tmpFB_0__ADC_CH0_net_0),
		analog=>Net_228,
		io=>(tmpIO_0__ADC_CH0_net_0),
		siovref=>(tmpSIOVREF__ADC_CH0_net_0),
		annotation=>(open),
		in_clock=>Net_12,
		in_clock_en=>tmpOE__TX_OEM_net_0,
		in_reset=>Net_12,
		out_clock=>Net_12,
		out_clock_en=>tmpOE__TX_OEM_net_0,
		out_reset=>Net_12,
		interrupt=>tmpINTERRUPT_0__ADC_CH0_net_0);
ADC_CH3:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"fc229005-eabd-482c-8a49-898e0523d14e",
		drive_mode=>"000",
		ibuf_enabled=>"0",
		init_dr_st=>"1",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"A",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__TX_OEM_net_0),
		y=>(Net_12),
		fb=>(tmpFB_0__ADC_CH3_net_0),
		analog=>Net_232,
		io=>(tmpIO_0__ADC_CH3_net_0),
		siovref=>(tmpSIOVREF__ADC_CH3_net_0),
		annotation=>(open),
		in_clock=>Net_12,
		in_clock_en=>tmpOE__TX_OEM_net_0,
		in_reset=>Net_12,
		out_clock=>Net_12,
		out_clock_en=>tmpOE__TX_OEM_net_0,
		out_reset=>Net_12,
		interrupt=>tmpINTERRUPT_0__ADC_CH3_net_0);
ADC_CH2:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"5348be0b-764b-46ef-81c3-fa0f2c339409",
		drive_mode=>"000",
		ibuf_enabled=>"0",
		init_dr_st=>"1",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"A",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__TX_OEM_net_0),
		y=>(Net_12),
		fb=>(tmpFB_0__ADC_CH2_net_0),
		analog=>Net_231,
		io=>(tmpIO_0__ADC_CH2_net_0),
		siovref=>(tmpSIOVREF__ADC_CH2_net_0),
		annotation=>(open),
		in_clock=>Net_12,
		in_clock_en=>tmpOE__TX_OEM_net_0,
		in_reset=>Net_12,
		out_clock=>Net_12,
		out_clock_en=>tmpOE__TX_OEM_net_0,
		out_reset=>Net_12,
		interrupt=>tmpINTERRUPT_0__ADC_CH2_net_0);
ADC_CH1:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"525ecf85-5c60-4fa3-b527-812e66ee6aaf",
		drive_mode=>"000",
		ibuf_enabled=>"0",
		init_dr_st=>"1",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"A",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__TX_OEM_net_0),
		y=>(Net_12),
		fb=>(tmpFB_0__ADC_CH1_net_0),
		analog=>Net_229,
		io=>(tmpIO_0__ADC_CH1_net_0),
		siovref=>(tmpSIOVREF__ADC_CH1_net_0),
		annotation=>(open),
		in_clock=>Net_12,
		in_clock_en=>tmpOE__TX_OEM_net_0,
		in_reset=>Net_12,
		out_clock=>Net_12,
		out_clock_en=>tmpOE__TX_OEM_net_0,
		out_reset=>Net_12,
		interrupt=>tmpINTERRUPT_0__ADC_CH1_net_0);
\ADC_DelSig:cy_analog_virtualmux_6_connect\:cy_connect_v1_0
	GENERIC MAP(sig_width=>1,
		is_net_join=>'0')
	PORT MAP(signal1=>\ADC_DelSig:Net_690\,
		signal2=>\ADC_DelSig:Net_35\);
\ADC_DelSig:cy_analog_noconnect_1\:cy_analog_noconnect_v1_0
	PORT MAP(noconnect=>\ADC_DelSig:Net_34\);
\ADC_DelSig:cy_analog_virtualmux_4_connect\:cy_connect_v1_0
	GENERIC MAP(sig_width=>1,
		is_net_join=>'0')
	PORT MAP(signal1=>\ADC_DelSig:Net_677\,
		signal2=>\ADC_DelSig:Net_34\);
\ADC_DelSig:DSM\:cy_psoc3_ds_mod_v4_0
	GENERIC MAP(cy_registers=>"",
		resolution=>16)
	PORT MAP(aclock=>\ADC_DelSig:Net_488\,
		vplus=>Net_339,
		vminus=>\ADC_DelSig:Net_520\,
		modbit=>Net_12,
		reset_udb=>Net_12,
		reset_dec=>\ADC_DelSig:mod_reset\,
		clk_udb=>Net_12,
		extclk_cp_udb=>\ADC_DelSig:Net_93\,
		ext_pin_1=>\ADC_DelSig:Net_573\,
		ext_pin_2=>\ADC_DelSig:Net_41\,
		ext_vssa=>\ADC_DelSig:Net_109\,
		qtz_ref=>\ADC_DelSig:Net_677\,
		dec_clock=>\ADC_DelSig:aclock\,
		mod_dat=>(\ADC_DelSig:mod_dat_3\, \ADC_DelSig:mod_dat_2\, \ADC_DelSig:mod_dat_1\, \ADC_DelSig:mod_dat_0\),
		dout_udb=>(\ADC_DelSig:Net_245_7\, \ADC_DelSig:Net_245_6\, \ADC_DelSig:Net_245_5\, \ADC_DelSig:Net_245_4\,
			\ADC_DelSig:Net_245_3\, \ADC_DelSig:Net_245_2\, \ADC_DelSig:Net_245_1\, \ADC_DelSig:Net_245_0\));
\ADC_DelSig:cy_analog_noconnect_5\:cy_analog_noconnect_v1_0
	PORT MAP(noconnect=>\ADC_DelSig:Net_352\);
\ADC_DelSig:cy_analog_virtualmux_5_connect\:cy_connect_v1_0
	GENERIC MAP(sig_width=>1,
		is_net_join=>'0')
	PORT MAP(signal1=>\ADC_DelSig:Net_109\,
		signal2=>\ADC_DelSig:Net_352\);
\ADC_DelSig:Ext_CP_Clk\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"482c6e1e-6851-4e72-ad39-8cae64079e76/b7604721-db56-4477-98c2-8fae77869066",
		source_clock_id=>"61737EF6-3B74-48f9-8B91-F7473A442AE7",
		divisor=>1,
		period=>"0",
		is_direct=>'0',
		is_digital=>'1')
	PORT MAP(clock_out=>\ADC_DelSig:Net_93\,
		dig_domain_out=>open);
\ADC_DelSig:cy_analog_noconnect_3\:cy_analog_noconnect_v1_0
	PORT MAP(noconnect=>\ADC_DelSig:Net_257\);
\ADC_DelSig:cy_analog_noconnect_2\:cy_analog_noconnect_v1_0
	PORT MAP(noconnect=>\ADC_DelSig:Net_249\);
\ADC_DelSig:cy_analog_virtualmux_3_connect\:cy_connect_v1_0
	GENERIC MAP(sig_width=>1,
		is_net_join=>'0')
	PORT MAP(signal1=>\ADC_DelSig:Net_41\,
		signal2=>\ADC_DelSig:Net_257\);
\ADC_DelSig:cy_analog_virtualmux_2_connect\:cy_connect_v1_0
	GENERIC MAP(sig_width=>1,
		is_net_join=>'0')
	PORT MAP(signal1=>\ADC_DelSig:Net_573\,
		signal2=>\ADC_DelSig:Net_249\);
\ADC_DelSig:cy_analog_virtualmux_1_connect\:cy_connect_v1_0
	GENERIC MAP(sig_width=>1,
		is_net_join=>'0')
	PORT MAP(signal1=>\ADC_DelSig:Net_520\,
		signal2=>Net_340);
\ADC_DelSig:IRQ\:cy_isr_v1_0
	GENERIC MAP(int_type=>"10",
		is_nmi=>'0')
	PORT MAP(int_signal=>Net_342);
\ADC_DelSig:theACLK\:cy_clock_v1_0
	GENERIC MAP(cy_registers=>"",
		id=>"482c6e1e-6851-4e72-ad39-8cae64079e76/edd15f43-b66b-457b-be3a-5342345270c8",
		source_clock_id=>"61737EF6-3B74-48f9-8B91-F7473A442AE7",
		divisor=>0,
		period=>"5208333333.33333",
		is_direct=>'0',
		is_digital=>'0')
	PORT MAP(clock_out=>\ADC_DelSig:Net_488\,
		dig_domain_out=>open);
\ADC_DelSig:DEC\:cy_psoc3_decimator_v1_0
	GENERIC MAP(cy_registers=>"")
	PORT MAP(aclock=>\ADC_DelSig:aclock\,
		mod_dat=>(\ADC_DelSig:mod_dat_3\, \ADC_DelSig:mod_dat_2\, \ADC_DelSig:mod_dat_1\, \ADC_DelSig:mod_dat_0\),
		ext_start=>tmpOE__TX_OEM_net_0,
		mod_reset=>\ADC_DelSig:mod_reset\,
		interrupt=>Net_342);
AMux_CYAMUXSIDE_A:cy_psoc3_amux_v1_0
	GENERIC MAP(cy_registers=>"",
		muxin_width=>2,
		hw_control=>'0',
		one_active=>'0',
		init_mux_sel=>"00",
		api_type=>0,
		connect_mode=>0)
	PORT MAP(muxin=>(Net_354, Net_363),
		hw_ctrl_en=>(others => Net_12),
		vout=>Net_339);
AMux_CYAMUXSIDE_B:cy_psoc3_amux_v1_0
	GENERIC MAP(cy_registers=>"",
		muxin_width=>2,
		hw_control=>'0',
		one_active=>'0',
		init_mux_sel=>"00",
		api_type=>0,
		connect_mode=>0)
	PORT MAP(muxin=>(Net_357, Net_356),
		hw_ctrl_en=>(others => Net_12),
		vout=>Net_340);
Pressure_Before_Pos:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"4daa49eb-a577-49fa-9ca4-c4aae7a36f63",
		drive_mode=>"000",
		ibuf_enabled=>"0",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"A",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__TX_OEM_net_0),
		y=>(Net_12),
		fb=>(tmpFB_0__Pressure_Before_Pos_net_0),
		analog=>Net_363,
		io=>(tmpIO_0__Pressure_Before_Pos_net_0),
		siovref=>(tmpSIOVREF__Pressure_Before_Pos_net_0),
		annotation=>(open),
		in_clock=>Net_12,
		in_clock_en=>tmpOE__TX_OEM_net_0,
		in_reset=>Net_12,
		out_clock=>Net_12,
		out_clock_en=>tmpOE__TX_OEM_net_0,
		out_reset=>Net_12,
		interrupt=>tmpINTERRUPT_0__Pressure_Before_Pos_net_0);
Pressure_Before_Neg:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"2b9a2580-c561-4f5d-b5ec-79134aa32b29",
		drive_mode=>"000",
		ibuf_enabled=>"0",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"A",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__TX_OEM_net_0),
		y=>(Net_12),
		fb=>(tmpFB_0__Pressure_Before_Neg_net_0),
		analog=>Net_356,
		io=>(tmpIO_0__Pressure_Before_Neg_net_0),
		siovref=>(tmpSIOVREF__Pressure_Before_Neg_net_0),
		annotation=>(open),
		in_clock=>Net_12,
		in_clock_en=>tmpOE__TX_OEM_net_0,
		in_reset=>Net_12,
		out_clock=>Net_12,
		out_clock_en=>tmpOE__TX_OEM_net_0,
		out_reset=>Net_12,
		interrupt=>tmpINTERRUPT_0__Pressure_Before_Neg_net_0);
Pressure_After_Pos:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"3bc23e93-5337-4868-ba4c-1d81715fe8d1",
		drive_mode=>"000",
		ibuf_enabled=>"0",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"A",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__TX_OEM_net_0),
		y=>(Net_12),
		fb=>(tmpFB_0__Pressure_After_Pos_net_0),
		analog=>Net_354,
		io=>(tmpIO_0__Pressure_After_Pos_net_0),
		siovref=>(tmpSIOVREF__Pressure_After_Pos_net_0),
		annotation=>(open),
		in_clock=>Net_12,
		in_clock_en=>tmpOE__TX_OEM_net_0,
		in_reset=>Net_12,
		out_clock=>Net_12,
		out_clock_en=>tmpOE__TX_OEM_net_0,
		out_reset=>Net_12,
		interrupt=>tmpINTERRUPT_0__Pressure_After_Pos_net_0);
Pressure_After_Neg:cy_psoc3_pins_v1_10
	GENERIC MAP(id=>"bcbb7be6-781a-4e00-ac93-a107890882d9",
		drive_mode=>"000",
		ibuf_enabled=>"0",
		init_dr_st=>"0",
		input_sync=>"1",
		input_clk_en=>'0',
		input_sync_mode=>"0",
		intr_mode=>"00",
		invert_in_clock=>'0',
		invert_in_clock_en=>'0',
		invert_in_reset=>'0',
		invert_out_clock=>'0',
		invert_out_clock_en=>'0',
		invert_out_reset=>'0',
		io_voltage=>"",
		layout_mode=>"CONTIGUOUS",
		output_conn=>"0",
		output_sync=>"0",
		output_clk_en=>'0',
		output_mode=>"0",
		output_reset=>'0',
		output_clock_mode=>"0",
		oe_sync=>"0",
		oe_conn=>"0",
		oe_reset=>'0',
		pin_aliases=>"",
		pin_mode=>"A",
		por_state=>4,
		sio_group_cnt=>0,
		sio_hifreq=>"00000000",
		sio_hyst=>"1",
		sio_ibuf=>"00000000",
		sio_info=>"00",
		sio_obuf=>"00000000",
		sio_refsel=>"00000000",
		sio_vtrip=>"00000000",
		sio_vohsel=>"00000000",
		slew_rate=>"0",
		spanning=>'0',
		sw_only=>'0',
		vtrip=>"10",
		width=>1,
		port_alias_required=>'0',
		port_alias_group=>"",
		use_annotation=>"0",
		pa_in_clock=>-1,
		pa_in_clock_en=>-1,
		pa_in_reset=>-1,
		pa_out_clock=>-1,
		pa_out_clock_en=>-1,
		pa_out_reset=>-1,
		ovt_needed=>"0",
		ovt_slew_control=>"00",
		ovt_hyst_trim=>"0",
		input_buffer_sel=>"00")
	PORT MAP(oe=>(tmpOE__TX_OEM_net_0),
		y=>(Net_12),
		fb=>(tmpFB_0__Pressure_After_Neg_net_0),
		analog=>Net_357,
		io=>(tmpIO_0__Pressure_After_Neg_net_0),
		siovref=>(tmpSIOVREF__Pressure_After_Neg_net_0),
		annotation=>(open),
		in_clock=>Net_12,
		in_clock_en=>tmpOE__TX_OEM_net_0,
		in_reset=>Net_12,
		out_clock=>Net_12,
		out_clock_en=>tmpOE__TX_OEM_net_0,
		out_reset=>Net_12,
		interrupt=>tmpINTERRUPT_0__Pressure_After_Neg_net_0);
\UART_OEM:BUART:reset_reg\:cy_dff
	PORT MAP(d=>Net_12,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:reset_reg\);
\UART_OEM:BUART:txn\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:txn\\D\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:txn\);
\UART_OEM:BUART:tx_state_1\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:tx_state_1\\D\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:tx_state_1\);
\UART_OEM:BUART:tx_state_0\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:tx_state_0\\D\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:tx_state_0\);
\UART_OEM:BUART:tx_state_2\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:tx_state_2\\D\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:tx_state_2\);
Net_174:cy_dff
	PORT MAP(d=>Net_12,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>Net_174);
\UART_OEM:BUART:tx_bitclk\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:tx_bitclk\\D\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:tx_bitclk\);
\UART_OEM:BUART:tx_ctrl_mark_last\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:tx_ctrl_mark_last\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:tx_ctrl_mark_last\);
\UART_OEM:BUART:tx_mark\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:tx_mark\\D\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:tx_mark\);
\UART_OEM:BUART:tx_parity_bit\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:tx_parity_bit\\D\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:tx_parity_bit\);
\UART_OEM:BUART:rx_state_1\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:rx_state_1\\D\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:rx_state_1\);
\UART_OEM:BUART:rx_state_0\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:rx_state_0\\D\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:rx_state_0\);
\UART_OEM:BUART:rx_load_fifo\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:rx_load_fifo\\D\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:rx_load_fifo\);
\UART_OEM:BUART:rx_state_3\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:rx_state_3\\D\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:rx_state_3\);
\UART_OEM:BUART:rx_state_2\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:rx_state_2\\D\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:rx_state_2\);
\UART_OEM:BUART:rx_count7_bit8\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:rx_count7_bit8\\D\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:rx_count7_bit8_wire\);
\UART_OEM:BUART:rx_bitclk\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:rx_bitclk\\D\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:rx_bitclk_enable\);
\UART_OEM:BUART:rx_state_stop1_reg\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:rx_state_stop1_reg\\D\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:rx_state_stop1_reg\);
\UART_OEM:BUART:pollcount_1\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:pollcount_1\\D\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>MODIN3_1);
\UART_OEM:BUART:pollcount_0\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:pollcount_0\\D\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>MODIN3_0);
\UART_OEM:BUART:rx_markspace_status\:cy_dff
	PORT MAP(d=>Net_12,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:rx_markspace_status\);
\UART_OEM:BUART:rx_parity_error_status\:cy_dff
	PORT MAP(d=>Net_12,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:rx_status_2\);
\UART_OEM:BUART:rx_stop_bit_error\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:rx_stop_bit_error\\D\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:rx_status_3\);
\UART_OEM:BUART:rx_addr_match_status\:cy_dff
	PORT MAP(d=>Net_12,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:rx_addr_match_status\);
\UART_OEM:BUART:rx_markspace_pre\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:rx_markspace_pre\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:rx_markspace_pre\);
\UART_OEM:BUART:rx_parity_error_pre\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:rx_parity_error_pre\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:rx_parity_error_pre\);
\UART_OEM:BUART:rx_break_status\:cy_dff
	PORT MAP(d=>Net_12,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:rx_break_status\);
\UART_OEM:BUART:rx_address_detected\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:rx_address_detected\\D\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:rx_address_detected\);
\UART_OEM:BUART:rx_last\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:rx_last\\D\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:rx_last\);
\UART_OEM:BUART:rx_parity_bit\:cy_dff
	PORT MAP(d=>\UART_OEM:BUART:rx_parity_bit\,
		clk=>\UART_OEM:BUART:clock_op\,
		q=>\UART_OEM:BUART:rx_parity_bit\);
\UART_RPI:BUART:reset_reg\:cy_dff
	PORT MAP(d=>Net_12,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:reset_reg\);
\UART_RPI:BUART:txn\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:txn\\D\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:txn\);
\UART_RPI:BUART:tx_state_1\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:tx_state_1\\D\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:tx_state_1\);
\UART_RPI:BUART:tx_state_0\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:tx_state_0\\D\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:tx_state_0\);
\UART_RPI:BUART:tx_state_2\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:tx_state_2\\D\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:tx_state_2\);
Net_161:cy_dff
	PORT MAP(d=>Net_12,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>Net_161);
\UART_RPI:BUART:tx_bitclk\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:tx_bitclk\\D\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:tx_bitclk\);
\UART_RPI:BUART:tx_ctrl_mark_last\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:tx_ctrl_mark_last\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:tx_ctrl_mark_last\);
\UART_RPI:BUART:tx_mark\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:tx_mark\\D\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:tx_mark\);
\UART_RPI:BUART:tx_parity_bit\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:tx_parity_bit\\D\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:tx_parity_bit\);
\UART_RPI:BUART:rx_state_1\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:rx_state_1\\D\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:rx_state_1\);
\UART_RPI:BUART:rx_state_0\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:rx_state_0\\D\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:rx_state_0\);
\UART_RPI:BUART:rx_load_fifo\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:rx_load_fifo\\D\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:rx_load_fifo\);
\UART_RPI:BUART:rx_state_3\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:rx_state_3\\D\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:rx_state_3\);
\UART_RPI:BUART:rx_state_2\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:rx_state_2\\D\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:rx_state_2\);
\UART_RPI:BUART:rx_count7_bit8\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:rx_count7_bit8\\D\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:rx_count7_bit8_wire\);
\UART_RPI:BUART:rx_bitclk\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:rx_bitclk\\D\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:rx_bitclk_enable\);
\UART_RPI:BUART:rx_state_stop1_reg\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:rx_state_stop1_reg\\D\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:rx_state_stop1_reg\);
\UART_RPI:BUART:pollcount_1\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:pollcount_1\\D\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>MODIN7_1);
\UART_RPI:BUART:pollcount_0\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:pollcount_0\\D\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>MODIN7_0);
\UART_RPI:BUART:rx_markspace_status\:cy_dff
	PORT MAP(d=>Net_12,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:rx_markspace_status\);
\UART_RPI:BUART:rx_parity_error_status\:cy_dff
	PORT MAP(d=>Net_12,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:rx_status_2\);
\UART_RPI:BUART:rx_stop_bit_error\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:rx_stop_bit_error\\D\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:rx_status_3\);
\UART_RPI:BUART:rx_addr_match_status\:cy_dff
	PORT MAP(d=>Net_12,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:rx_addr_match_status\);
\UART_RPI:BUART:rx_markspace_pre\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:rx_markspace_pre\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:rx_markspace_pre\);
\UART_RPI:BUART:rx_parity_error_pre\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:rx_parity_error_pre\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:rx_parity_error_pre\);
\UART_RPI:BUART:rx_break_status\:cy_dff
	PORT MAP(d=>Net_12,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:rx_break_status\);
\UART_RPI:BUART:rx_address_detected\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:rx_address_detected\\D\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:rx_address_detected\);
\UART_RPI:BUART:rx_last\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:rx_last\\D\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:rx_last\);
\UART_RPI:BUART:rx_parity_bit\:cy_dff
	PORT MAP(d=>\UART_RPI:BUART:rx_parity_bit\,
		clk=>\UART_RPI:BUART:clock_op\,
		q=>\UART_RPI:BUART:rx_parity_bit\);
\UART_Debug:BUART:reset_reg\:cy_dff
	PORT MAP(d=>Net_12,
		clk=>\UART_Debug:BUART:clock_op\,
		q=>\UART_Debug:BUART:reset_reg\);
\UART_Debug:BUART:txn\:cy_dff
	PORT MAP(d=>\UART_Debug:BUART:txn\\D\,
		clk=>\UART_Debug:BUART:clock_op\,
		q=>\UART_Debug:BUART:txn\);
\UART_Debug:BUART:tx_state_1\:cy_dff
	PORT MAP(d=>\UART_Debug:BUART:tx_state_1\\D\,
		clk=>\UART_Debug:BUART:clock_op\,
		q=>\UART_Debug:BUART:tx_state_1\);
\UART_Debug:BUART:tx_state_0\:cy_dff
	PORT MAP(d=>\UART_Debug:BUART:tx_state_0\\D\,
		clk=>\UART_Debug:BUART:clock_op\,
		q=>\UART_Debug:BUART:tx_state_0\);
\UART_Debug:BUART:tx_state_2\:cy_dff
	PORT MAP(d=>\UART_Debug:BUART:tx_state_2\\D\,
		clk=>\UART_Debug:BUART:clock_op\,
		q=>\UART_Debug:BUART:tx_state_2\);
Net_148:cy_dff
	PORT MAP(d=>Net_12,
		clk=>\UART_Debug:BUART:clock_op\,
		q=>Net_148);
\UART_Debug:BUART:tx_bitclk\:cy_dff
	PORT MAP(d=>\UART_Debug:BUART:tx_bitclk\\D\,
		clk=>\UART_Debug:BUART:clock_op\,
		q=>\UART_Debug:BUART:tx_bitclk\);
\UART_Debug:BUART:tx_ctrl_mark_last\:cy_dff
	PORT MAP(d=>\UART_Debug:BUART:tx_ctrl_mark_last\,
		clk=>\UART_Debug:BUART:clock_op\,
		q=>\UART_Debug:BUART:tx_ctrl_mark_last\);
\UART_Debug:BUART:tx_mark\:cy_dff
	PORT MAP(d=>\UART_Debug:BUART:tx_mark\\D\,
		clk=>\UART_Debug:BUART:clock_op\,
		q=>\UART_Debug:BUART:tx_mark\);
\UART_Debug:BUART:tx_parity_bit\:cy_dff
	PORT MAP(d=>\UART_Debug:BUART:tx_parity_bit\\D\,
		clk=>\UART_Debug:BUART:clock_op\,
		q=>\UART_Debug:BUART:tx_parity_bit\);
\ADC_TS410:AMuxHw_2_Decoder_old_id_5\:cy_dff
	PORT MAP(d=>\ADC_TS410:ch_addr_5\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_old_id_5\);
\ADC_TS410:AMuxHw_2_Decoder_old_id_4\:cy_dff
	PORT MAP(d=>\ADC_TS410:ch_addr_4\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_old_id_4\);
\ADC_TS410:AMuxHw_2_Decoder_old_id_3\:cy_dff
	PORT MAP(d=>\ADC_TS410:ch_addr_3\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_old_id_3\);
\ADC_TS410:AMuxHw_2_Decoder_old_id_2\:cy_dff
	PORT MAP(d=>\ADC_TS410:ch_addr_2\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_old_id_2\);
\ADC_TS410:AMuxHw_2_Decoder_old_id_1\:cy_dff
	PORT MAP(d=>\ADC_TS410:ch_addr_1\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_old_id_1\);
\ADC_TS410:AMuxHw_2_Decoder_old_id_0\:cy_dff
	PORT MAP(d=>\ADC_TS410:ch_addr_0\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_old_id_0\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_0\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_0\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_0\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_1\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_1\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_1\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_2\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_2\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_2\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_3\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_3\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_3\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_4\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_4\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_4\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_5\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_5\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_5\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_6\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_6\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_6\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_7\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_7\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_7\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_8\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_8\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_8\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_9\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_9\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_9\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_10\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_10\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_10\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_11\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_11\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_11\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_12\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_12\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_12\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_13\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_13\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_13\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_14\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_14\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_14\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_15\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_15\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_15\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_16\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_16\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_16\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_17\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_17\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_17\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_18\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_18\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_18\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_19\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_19\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_19\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_20\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_20\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_20\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_21\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_21\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_21\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_22\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_22\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_22\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_23\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_23\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_23\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_24\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_24\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_24\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_25\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_25\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_25\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_26\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_26\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_26\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_27\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_27\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_27\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_28\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_28\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_28\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_29\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_29\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_29\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_30\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_30\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_30\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_31\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_31\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_31\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_32\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_32\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_32\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_33\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_33\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_33\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_34\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_34\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_34\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_35\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_35\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_35\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_36\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_36\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_36\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_37\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_37\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_37\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_38\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_38\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_38\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_39\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_39\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_39\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_40\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_40\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_40\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_41\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_41\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_41\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_42\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_42\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_42\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_43\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_43\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_43\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_44\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_44\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_44\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_45\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_45\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_45\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_46\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_46\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_46\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_47\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_47\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_47\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_48\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_48\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_48\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_49\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_49\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_49\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_50\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_50\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_50\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_51\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_51\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_51\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_52\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_52\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_52\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_53\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_53\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_53\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_54\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_54\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_54\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_55\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_55\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_55\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_56\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_56\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_56\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_57\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_57\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_57\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_58\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_58\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_58\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_59\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_59\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_59\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_60\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_60\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_60\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_61\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_61\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_61\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_62\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_62\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_62\);
\ADC_TS410:AMuxHw_2_Decoder_one_hot_63\:cy_dff
	PORT MAP(d=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_63\\D\,
		clk=>\ADC_TS410:clock\,
		q=>\ADC_TS410:AMuxHw_2_Decoder_one_hot_63\);
\ADC_TS410:bSAR_SEQ:nrq_edge_detect_reg\:cy_dff
	PORT MAP(d=>\ADC_TS410:bSAR_SEQ:nrq_edge_detect\,
		clk=>\ADC_TS410:bSAR_SEQ:clk_fin\,
		q=>Net_227);
\ADC_TS410:bSAR_SEQ:bus_clk_nrq_reg\:cy_dff
	PORT MAP(d=>\ADC_TS410:bSAR_SEQ:bus_clk_nrq_reg\\D\,
		clk=>\ADC_TS410:Net_3710\,
		q=>\ADC_TS410:bSAR_SEQ:bus_clk_nrq_reg\);
\ADC_TS410:bSAR_SEQ:nrq_reg\:cy_dff
	PORT MAP(d=>\ADC_TS410:bSAR_SEQ:bus_clk_nrq_reg\,
		clk=>\ADC_TS410:bSAR_SEQ:clk_fin\,
		q=>\ADC_TS410:bSAR_SEQ:nrq_reg\);

END R_T_L;
