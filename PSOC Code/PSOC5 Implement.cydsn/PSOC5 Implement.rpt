Loading plugins phase: Elapsed time ==> 0s.133ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -.fdsreffile=referenced_files.txt -p C:\Users\haoen\Desktop\ecmo_psoc5_ws\PSOC Code\PSOC5 Implement.cydsn\PSOC5 Implement.cyprj -d CY8C5888LTI-LP097 -s C:\Users\haoen\Desktop\ecmo_psoc5_ws\PSOC Code\PSOC5 Implement.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE
</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_10 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 1s.332ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.047ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  PSOC5 Implement.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\haoen\Desktop\ecmo_psoc5_ws\PSOC Code\PSOC5 Implement.cydsn\PSOC5 Implement.cyprj -dcpsoc3 PSOC5 Implement.v -verilog
======================================================================

======================================================================
Compiling:  PSOC5 Implement.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\haoen\Desktop\ecmo_psoc5_ws\PSOC Code\PSOC5 Implement.cydsn\PSOC5 Implement.cyprj -dcpsoc3 PSOC5 Implement.v -verilog
======================================================================

======================================================================
Compiling:  PSOC5 Implement.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\haoen\Desktop\ecmo_psoc5_ws\PSOC Code\PSOC5 Implement.cydsn\PSOC5 Implement.cyprj -dcpsoc3 -verilog PSOC5 Implement.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Tue Oct 07 10:12:03 2025


======================================================================
Compiling:  PSOC5 Implement.v
Program  :   vpp
Options  :    -yv2 -q10 PSOC5 Implement.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Tue Oct 07 10:12:03 2025

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\AMux_v1_80\AMux_v1_80.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'PSOC5 Implement.ctl'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1113, col 55):  Note: Substituting module 'add_vv_vv' for '+'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 48):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 77):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1389, col 59):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1424, col 61):  Note: Substituting module 'cmp_vv_vv' for '/='.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1547, col 106):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1603, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1604, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
PSOC5 Implement.v (line 1123, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  PSOC5 Implement.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\haoen\Desktop\ecmo_psoc5_ws\PSOC Code\PSOC5 Implement.cydsn\PSOC5 Implement.cyprj -dcpsoc3 -verilog PSOC5 Implement.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Tue Oct 07 10:12:03 2025

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\haoen\Desktop\ecmo_psoc5_ws\PSOC Code\PSOC5 Implement.cydsn\codegentemp\PSOC5 Implement.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Users\haoen\Desktop\ecmo_psoc5_ws\PSOC Code\PSOC5 Implement.cydsn\codegentemp\PSOC5 Implement.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\AMux_v1_80\AMux_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.

tovif:  No errors.


======================================================================
Compiling:  PSOC5 Implement.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\haoen\Desktop\ecmo_psoc5_ws\PSOC Code\PSOC5 Implement.cydsn\PSOC5 Implement.cyprj -dcpsoc3 -verilog PSOC5 Implement.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Tue Oct 07 10:12:04 2025

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'C:\Users\haoen\Desktop\ecmo_psoc5_ws\PSOC Code\PSOC5 Implement.cydsn\codegentemp\PSOC5 Implement.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Users\haoen\Desktop\ecmo_psoc5_ws\PSOC Code\PSOC5 Implement.cydsn\codegentemp\PSOC5 Implement.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\OneTerminal\OneTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\AMux_v1_80\AMux_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	\UART_OEM:BUART:reset_sr\
	Net_175
	Net_170
	\UART_OEM:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_1\
	\UART_OEM:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_0\
	\UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_0\
	\UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_0\
	Net_166
	\UART_OEM:BUART:sRX:MODULE_5:g2:a0:gta_0\
	\UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_1\
	\UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_1\
	\UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:lt_0\
	\UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:gt_0\
	\UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:lti_0\
	\UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:gti_0\
	\UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_0\
	\UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_0\
	\UART_OEM:BUART:sRX:MODULE_6:g1:a0:xeq\
	\UART_OEM:BUART:sRX:MODULE_6:g1:a0:xlt\
	\UART_OEM:BUART:sRX:MODULE_6:g1:a0:xlte\
	\UART_OEM:BUART:sRX:MODULE_6:g1:a0:xgt\
	\UART_OEM:BUART:sRX:MODULE_6:g1:a0:xgte\
	\UART_OEM:BUART:sRX:MODULE_6:lt\
	\UART_OEM:BUART:sRX:MODULE_6:eq\
	\UART_OEM:BUART:sRX:MODULE_6:gt\
	\UART_OEM:BUART:sRX:MODULE_6:gte\
	\UART_OEM:BUART:sRX:MODULE_6:lte\
	\UART_RPI:BUART:reset_sr\
	Net_162
	Net_157
	\UART_RPI:BUART:sRX:s23Poll:MODULE_7:g2:a0:b_1\
	\UART_RPI:BUART:sRX:s23Poll:MODULE_7:g2:a0:b_0\
	\UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:gta_0\
	\UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:gta_0\
	Net_153
	\UART_RPI:BUART:sRX:MODULE_10:g2:a0:gta_0\
	\UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:albi_1\
	\UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:agbi_1\
	\UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:lt_0\
	\UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:gt_0\
	\UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:lti_0\
	\UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:gti_0\
	\UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:albi_0\
	\UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:agbi_0\
	\UART_RPI:BUART:sRX:MODULE_11:g1:a0:xeq\
	\UART_RPI:BUART:sRX:MODULE_11:g1:a0:xlt\
	\UART_RPI:BUART:sRX:MODULE_11:g1:a0:xlte\
	\UART_RPI:BUART:sRX:MODULE_11:g1:a0:xgt\
	\UART_RPI:BUART:sRX:MODULE_11:g1:a0:xgte\
	\UART_RPI:BUART:sRX:MODULE_11:lt\
	\UART_RPI:BUART:sRX:MODULE_11:eq\
	\UART_RPI:BUART:sRX:MODULE_11:gt\
	\UART_RPI:BUART:sRX:MODULE_11:gte\
	\UART_RPI:BUART:sRX:MODULE_11:lte\
	\UART_Debug:BUART:HalfDuplexSend\
	\UART_Debug:BUART:FinalAddrMode_2\
	\UART_Debug:BUART:FinalAddrMode_1\
	\UART_Debug:BUART:FinalAddrMode_0\
	\UART_Debug:BUART:reset_sr\
	Net_149
	Net_145
	Net_181
	\ADC_TS410:SAR:Net_221\
	\ADC_TS410:SAR:Net_383\
	\ADC_TS410:bSAR_SEQ:sw_soc\
	\ADC_TS410:soc_out\
	\ADC_TS410:Net_3905\
	\ADC_TS410:Net_3867\
	\ADC_TS410:MODULE_1:g1:a0:gx:u0:albi_2\
	\ADC_TS410:MODULE_1:g1:a0:gx:u0:agbi_2\
	\ADC_TS410:MODULE_1:g1:a0:gx:u0:albi_1\
	\ADC_TS410:MODULE_1:g1:a0:gx:u0:agbi_1\
	\ADC_TS410:MODULE_1:g1:a0:gx:u0:albi_0\
	\ADC_TS410:MODULE_1:g1:a0:gx:u0:agbi_0\
	\ADC_TS410:MODULE_1:g1:a0:xneq\
	\ADC_TS410:MODULE_1:g1:a0:xlt\
	\ADC_TS410:MODULE_1:g1:a0:xlte\
	\ADC_TS410:MODULE_1:g1:a0:xgt\
	\ADC_TS410:MODULE_1:g1:a0:xgte\
	\ADC_TS410:MODULE_1:lt\
	\ADC_TS410:MODULE_1:gt\
	\ADC_TS410:MODULE_1:gte\
	\ADC_TS410:MODULE_1:lte\
	\ADC_TS410:MODULE_1:neq\
	\ADC_DelSig:Net_268\
	\ADC_DelSig:Net_270\


Deleted 86 User equations/components.
Deleted 0 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing zero to Net_12
Aliasing one to tmpOE__TX_OEM_net_0
Aliasing tmpOE__USER_LED_net_0 to tmpOE__TX_OEM_net_0
Aliasing tmpOE__RX_OEM_net_0 to tmpOE__TX_OEM_net_0
Aliasing tmpOE__RX_RPI_net_0 to tmpOE__TX_OEM_net_0
Aliasing \UART_OEM:BUART:tx_hd_send_break\ to Net_12
Aliasing \UART_OEM:BUART:HalfDuplexSend\ to Net_12
Aliasing \UART_OEM:BUART:FinalParityType_1\ to Net_12
Aliasing \UART_OEM:BUART:FinalParityType_0\ to Net_12
Aliasing \UART_OEM:BUART:FinalAddrMode_2\ to Net_12
Aliasing \UART_OEM:BUART:FinalAddrMode_1\ to Net_12
Aliasing \UART_OEM:BUART:FinalAddrMode_0\ to Net_12
Aliasing \UART_OEM:BUART:tx_ctrl_mark\ to Net_12
Aliasing \UART_OEM:BUART:tx_status_6\ to Net_12
Aliasing \UART_OEM:BUART:tx_status_5\ to Net_12
Aliasing \UART_OEM:BUART:tx_status_4\ to Net_12
Aliasing \UART_OEM:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to tmpOE__TX_OEM_net_0
Aliasing MODIN4_1 to MODIN3_1
Aliasing MODIN4_0 to MODIN3_0
Aliasing \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\ to Net_12
Aliasing \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\ to tmpOE__TX_OEM_net_0
Aliasing MODIN5_1 to MODIN3_1
Aliasing MODIN5_0 to MODIN3_0
Aliasing \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\ to tmpOE__TX_OEM_net_0
Aliasing \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\ to Net_12
Aliasing \UART_OEM:BUART:rx_status_1\ to Net_12
Aliasing \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newa_6\ to Net_12
Aliasing \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newa_5\ to Net_12
Aliasing \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newa_4\ to Net_12
Aliasing \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newa_3\ to Net_12
Aliasing \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_6\ to Net_12
Aliasing \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_5\ to Net_12
Aliasing \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_4\ to Net_12
Aliasing \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_3\ to Net_12
Aliasing \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_2\ to tmpOE__TX_OEM_net_0
Aliasing \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_1\ to tmpOE__TX_OEM_net_0
Aliasing \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_0\ to Net_12
Aliasing \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_0\ to tmpOE__TX_OEM_net_0
Aliasing tmpOE__TX_RPI_net_0 to tmpOE__TX_OEM_net_0
Aliasing \UART_RPI:BUART:tx_hd_send_break\ to Net_12
Aliasing \UART_RPI:BUART:HalfDuplexSend\ to Net_12
Aliasing \UART_RPI:BUART:FinalParityType_1\ to Net_12
Aliasing \UART_RPI:BUART:FinalParityType_0\ to Net_12
Aliasing \UART_RPI:BUART:FinalAddrMode_2\ to Net_12
Aliasing \UART_RPI:BUART:FinalAddrMode_1\ to Net_12
Aliasing \UART_RPI:BUART:FinalAddrMode_0\ to Net_12
Aliasing \UART_RPI:BUART:tx_ctrl_mark\ to Net_12
Aliasing \UART_RPI:BUART:tx_status_6\ to Net_12
Aliasing \UART_RPI:BUART:tx_status_5\ to Net_12
Aliasing \UART_RPI:BUART:tx_status_4\ to Net_12
Aliasing \UART_RPI:BUART:sRX:s23Poll:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_0\ to tmpOE__TX_OEM_net_0
Aliasing MODIN8_1 to MODIN7_1
Aliasing MODIN8_0 to MODIN7_0
Aliasing \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:newb_1\ to Net_12
Aliasing \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:newb_0\ to tmpOE__TX_OEM_net_0
Aliasing MODIN9_1 to MODIN7_1
Aliasing MODIN9_0 to MODIN7_0
Aliasing \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:newb_1\ to tmpOE__TX_OEM_net_0
Aliasing \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:newb_0\ to Net_12
Aliasing \UART_RPI:BUART:rx_status_1\ to Net_12
Aliasing \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newa_6\ to Net_12
Aliasing \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newa_5\ to Net_12
Aliasing \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newa_4\ to Net_12
Aliasing \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newa_3\ to Net_12
Aliasing \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_6\ to Net_12
Aliasing \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_5\ to Net_12
Aliasing \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_4\ to Net_12
Aliasing \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_3\ to Net_12
Aliasing \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_2\ to tmpOE__TX_OEM_net_0
Aliasing \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_1\ to tmpOE__TX_OEM_net_0
Aliasing \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_0\ to Net_12
Aliasing \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:aeqb_0\ to tmpOE__TX_OEM_net_0
Aliasing tmpOE__TX_Debug_net_0 to tmpOE__TX_OEM_net_0
Aliasing \UART_Debug:BUART:tx_hd_send_break\ to Net_12
Aliasing \UART_Debug:BUART:FinalParityType_1\ to Net_12
Aliasing \UART_Debug:BUART:FinalParityType_0\ to Net_12
Aliasing \UART_Debug:BUART:tx_ctrl_mark\ to Net_12
Aliasing \UART_Debug:BUART:tx_status_6\ to Net_12
Aliasing \UART_Debug:BUART:tx_status_5\ to Net_12
Aliasing \UART_Debug:BUART:tx_status_4\ to Net_12
Aliasing \Timer_ISR:Net_260\ to Net_12
Aliasing \Timer_ISR:Net_102\ to tmpOE__TX_OEM_net_0
Aliasing \ADC_TS410:AMuxHw_2_Decoder_enable\ to tmpOE__TX_OEM_net_0
Aliasing \ADC_TS410:SAR:vp_ctl_0\ to Net_12
Aliasing \ADC_TS410:SAR:vp_ctl_2\ to Net_12
Aliasing \ADC_TS410:SAR:vn_ctl_1\ to Net_12
Aliasing \ADC_TS410:SAR:vn_ctl_3\ to Net_12
Aliasing \ADC_TS410:SAR:vp_ctl_1\ to Net_12
Aliasing \ADC_TS410:SAR:vp_ctl_3\ to Net_12
Aliasing \ADC_TS410:SAR:vn_ctl_0\ to Net_12
Aliasing \ADC_TS410:SAR:vn_ctl_2\ to Net_12
Aliasing \ADC_TS410:SAR:soc\ to Net_12
Aliasing \ADC_TS410:bSAR_SEQ:status_7\ to Net_12
Aliasing \ADC_TS410:bSAR_SEQ:status_6\ to Net_12
Aliasing \ADC_TS410:bSAR_SEQ:status_5\ to Net_12
Aliasing \ADC_TS410:bSAR_SEQ:status_4\ to Net_12
Aliasing \ADC_TS410:bSAR_SEQ:status_3\ to Net_12
Aliasing \ADC_TS410:bSAR_SEQ:status_2\ to Net_12
Aliasing \ADC_TS410:bSAR_SEQ:status_1\ to Net_12
Aliasing Net_227 to \ADC_TS410:bSAR_SEQ:status_0\
Aliasing \ADC_TS410:MODULE_1:g1:a0:gx:u0:aeqb_0\ to tmpOE__TX_OEM_net_0
Aliasing tmpOE__ADC_CH0_net_0 to tmpOE__TX_OEM_net_0
Aliasing tmpOE__ADC_CH3_net_0 to tmpOE__TX_OEM_net_0
Aliasing tmpOE__ADC_CH2_net_0 to tmpOE__TX_OEM_net_0
Aliasing tmpOE__ADC_CH1_net_0 to tmpOE__TX_OEM_net_0
Aliasing \ADC_DelSig:Net_482\ to Net_12
Aliasing \ADC_DelSig:Net_252\ to Net_12
Aliasing \ADC_DelSig:soc\ to tmpOE__TX_OEM_net_0
Aliasing tmpOE__Pressure_Before_Pos_net_0 to tmpOE__TX_OEM_net_0
Aliasing tmpOE__Pressure_Before_Neg_net_0 to tmpOE__TX_OEM_net_0
Aliasing tmpOE__Pressure_After_Pos_net_0 to tmpOE__TX_OEM_net_0
Aliasing tmpOE__Pressure_After_Neg_net_0 to tmpOE__TX_OEM_net_0
Aliasing \UART_OEM:BUART:reset_reg\\D\ to Net_12
Aliasing Net_174D to Net_12
Aliasing \UART_OEM:BUART:rx_break_status\\D\ to Net_12
Aliasing \UART_RPI:BUART:reset_reg\\D\ to Net_12
Aliasing Net_161D to Net_12
Aliasing \UART_RPI:BUART:rx_break_status\\D\ to Net_12
Aliasing \UART_Debug:BUART:reset_reg\\D\ to Net_12
Aliasing Net_148D to Net_12
Aliasing \ADC_TS410:AMuxHw_2_Decoder_old_id_5\\D\ to \ADC_TS410:MODIN1_5\
Aliasing \ADC_TS410:AMuxHw_2_Decoder_old_id_4\\D\ to \ADC_TS410:MODIN1_4\
Aliasing \ADC_TS410:AMuxHw_2_Decoder_old_id_3\\D\ to \ADC_TS410:MODIN1_3\
Aliasing \ADC_TS410:AMuxHw_2_Decoder_old_id_2\\D\ to \ADC_TS410:MODIN1_2\
Aliasing \ADC_TS410:AMuxHw_2_Decoder_old_id_1\\D\ to \ADC_TS410:MODIN1_1\
Aliasing \ADC_TS410:AMuxHw_2_Decoder_old_id_0\\D\ to \ADC_TS410:MODIN1_0\
Removing Lhs of wire zero[9] = Net_12[0]
Removing Lhs of wire one[10] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire tmpOE__USER_LED_net_0[13] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire tmpOE__RX_OEM_net_0[19] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire tmpOE__RX_RPI_net_0[25] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_OEM:Net_61\[32] = \UART_OEM:Net_9\[31]
Removing Lhs of wire \UART_OEM:BUART:tx_hd_send_break\[36] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:HalfDuplexSend\[37] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:FinalParityType_1\[38] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:FinalParityType_0\[39] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:FinalAddrMode_2\[40] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:FinalAddrMode_1\[41] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:FinalAddrMode_0\[42] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:tx_ctrl_mark\[43] = Net_12[0]
Removing Rhs of wire \UART_OEM:BUART:tx_bitclk_enable_pre\[54] = \UART_OEM:BUART:tx_bitclk_dp\[90]
Removing Lhs of wire \UART_OEM:BUART:tx_counter_tc\[100] = \UART_OEM:BUART:tx_counter_dp\[91]
Removing Lhs of wire \UART_OEM:BUART:tx_status_6\[101] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:tx_status_5\[102] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:tx_status_4\[103] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:tx_status_1\[105] = \UART_OEM:BUART:tx_fifo_empty\[68]
Removing Lhs of wire \UART_OEM:BUART:tx_status_3\[107] = \UART_OEM:BUART:tx_fifo_notfull\[67]
Removing Rhs of wire \UART_OEM:BUART:rx_count7_bit8_wire\[167] = \UART_OEM:BUART:rx_count7_bit8\[168]
Removing Rhs of wire add_vv_vv_MODGEN_2_1[175] = \UART_OEM:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\[186]
Removing Rhs of wire add_vv_vv_MODGEN_2_0[177] = \UART_OEM:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\[187]
Removing Lhs of wire cmp_vv_vv_MODGEN_3[178] = \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\[203]
Removing Lhs of wire cmp_vv_vv_MODGEN_4[179] = \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\[217]
Removing Lhs of wire \UART_OEM:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_1\[180] = MODIN3_1[181]
Removing Rhs of wire MODIN3_1[181] = \UART_OEM:BUART:pollcount_1\[174]
Removing Lhs of wire \UART_OEM:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_0\[182] = MODIN3_0[183]
Removing Rhs of wire MODIN3_0[183] = \UART_OEM:BUART:pollcount_0\[176]
Removing Lhs of wire \UART_OEM:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[189] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_OEM:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[190] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_1\[191] = MODIN3_1[181]
Removing Lhs of wire MODIN4_1[192] = MODIN3_1[181]
Removing Lhs of wire \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_0\[193] = MODIN3_0[183]
Removing Lhs of wire MODIN4_0[194] = MODIN3_0[183]
Removing Lhs of wire \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\[195] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\[196] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_1\[197] = MODIN3_1[181]
Removing Lhs of wire \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_0\[198] = MODIN3_0[183]
Removing Lhs of wire \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_1\[199] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_0\[200] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_1\[205] = MODIN3_1[181]
Removing Lhs of wire MODIN5_1[206] = MODIN3_1[181]
Removing Lhs of wire \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_0\[207] = MODIN3_0[183]
Removing Lhs of wire MODIN5_0[208] = MODIN3_0[183]
Removing Lhs of wire \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\[209] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\[210] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_1\[211] = MODIN3_1[181]
Removing Lhs of wire \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_0\[212] = MODIN3_0[183]
Removing Lhs of wire \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_1\[213] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_0\[214] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:rx_status_1\[221] = Net_12[0]
Removing Rhs of wire \UART_OEM:BUART:rx_status_2\[222] = \UART_OEM:BUART:rx_parity_error_status\[223]
Removing Rhs of wire \UART_OEM:BUART:rx_status_3\[224] = \UART_OEM:BUART:rx_stop_bit_error\[225]
Removing Lhs of wire cmp_vv_vv_MODGEN_5[235] = \UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_0\[283]
Removing Lhs of wire cmp_vv_vv_MODGEN_6[239] = \UART_OEM:BUART:sRX:MODULE_6:g1:a0:xneq\[305]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newa_6\[240] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newa_5\[241] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newa_4\[242] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newa_3\[243] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newa_2\[244] = MODIN6_6[245]
Removing Rhs of wire MODIN6_6[245] = \UART_OEM:BUART:rx_count_6\[163]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newa_1\[246] = MODIN6_5[247]
Removing Rhs of wire MODIN6_5[247] = \UART_OEM:BUART:rx_count_5\[164]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newa_0\[248] = MODIN6_4[249]
Removing Rhs of wire MODIN6_4[249] = \UART_OEM:BUART:rx_count_4\[165]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_6\[250] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_5\[251] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_4\[252] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_3\[253] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_2\[254] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_1\[255] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:newb_0\[256] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:dataa_6\[257] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:dataa_5\[258] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:dataa_4\[259] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:dataa_3\[260] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:dataa_2\[261] = MODIN6_6[245]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:dataa_1\[262] = MODIN6_5[247]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:dataa_0\[263] = MODIN6_4[249]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:datab_6\[264] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:datab_5\[265] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:datab_4\[266] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:datab_3\[267] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:datab_2\[268] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:datab_1\[269] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_5:g2:a0:datab_0\[270] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_6:g1:a0:newa_0\[285] = \UART_OEM:BUART:rx_postpoll\[121]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_6:g1:a0:newb_0\[286] = \UART_OEM:BUART:rx_parity_bit\[238]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_6:g1:a0:dataa_0\[287] = \UART_OEM:BUART:rx_postpoll\[121]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_6:g1:a0:datab_0\[288] = \UART_OEM:BUART:rx_parity_bit\[238]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:a_0\[289] = \UART_OEM:BUART:rx_postpoll\[121]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:b_0\[290] = \UART_OEM:BUART:rx_parity_bit\[238]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_0\[292] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:eq_0\[293] = \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\[291]
Removing Lhs of wire \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:eqi_0\[294] = \UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\[291]
Removing Lhs of wire tmpOE__TX_RPI_net_0[316] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_RPI:Net_61\[324] = \UART_RPI:Net_9\[323]
Removing Lhs of wire \UART_RPI:BUART:tx_hd_send_break\[328] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:HalfDuplexSend\[329] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:FinalParityType_1\[330] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:FinalParityType_0\[331] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:FinalAddrMode_2\[332] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:FinalAddrMode_1\[333] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:FinalAddrMode_0\[334] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:tx_ctrl_mark\[335] = Net_12[0]
Removing Rhs of wire \UART_RPI:BUART:tx_bitclk_enable_pre\[346] = \UART_RPI:BUART:tx_bitclk_dp\[382]
Removing Lhs of wire \UART_RPI:BUART:tx_counter_tc\[392] = \UART_RPI:BUART:tx_counter_dp\[383]
Removing Lhs of wire \UART_RPI:BUART:tx_status_6\[393] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:tx_status_5\[394] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:tx_status_4\[395] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:tx_status_1\[397] = \UART_RPI:BUART:tx_fifo_empty\[360]
Removing Lhs of wire \UART_RPI:BUART:tx_status_3\[399] = \UART_RPI:BUART:tx_fifo_notfull\[359]
Removing Rhs of wire \UART_RPI:BUART:rx_count7_bit8_wire\[459] = \UART_RPI:BUART:rx_count7_bit8\[460]
Removing Rhs of wire add_vv_vv_MODGEN_7_1[467] = \UART_RPI:BUART:sRX:s23Poll:MODULE_7:g2:a0:s_1\[478]
Removing Rhs of wire add_vv_vv_MODGEN_7_0[469] = \UART_RPI:BUART:sRX:s23Poll:MODULE_7:g2:a0:s_0\[479]
Removing Lhs of wire cmp_vv_vv_MODGEN_8[470] = \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:lta_0\[495]
Removing Lhs of wire cmp_vv_vv_MODGEN_9[471] = \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:lta_0\[509]
Removing Lhs of wire \UART_RPI:BUART:sRX:s23Poll:MODULE_7:g2:a0:a_1\[472] = MODIN7_1[473]
Removing Rhs of wire MODIN7_1[473] = \UART_RPI:BUART:pollcount_1\[466]
Removing Lhs of wire \UART_RPI:BUART:sRX:s23Poll:MODULE_7:g2:a0:a_0\[474] = MODIN7_0[475]
Removing Rhs of wire MODIN7_0[475] = \UART_RPI:BUART:pollcount_0\[468]
Removing Lhs of wire \UART_RPI:BUART:sRX:s23Poll:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_0\[481] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_RPI:BUART:sRX:s23Poll:MODULE_7:g2:a0:g1:z1:s0:g1:u0:b_0\[482] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:newa_1\[483] = MODIN7_1[473]
Removing Lhs of wire MODIN8_1[484] = MODIN7_1[473]
Removing Lhs of wire \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:newa_0\[485] = MODIN7_0[475]
Removing Lhs of wire MODIN8_0[486] = MODIN7_0[475]
Removing Lhs of wire \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:newb_1\[487] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:newb_0\[488] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:dataa_1\[489] = MODIN7_1[473]
Removing Lhs of wire \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:dataa_0\[490] = MODIN7_0[475]
Removing Lhs of wire \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:datab_1\[491] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:datab_0\[492] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:newa_1\[497] = MODIN7_1[473]
Removing Lhs of wire MODIN9_1[498] = MODIN7_1[473]
Removing Lhs of wire \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:newa_0\[499] = MODIN7_0[475]
Removing Lhs of wire MODIN9_0[500] = MODIN7_0[475]
Removing Lhs of wire \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:newb_1\[501] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:newb_0\[502] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:dataa_1\[503] = MODIN7_1[473]
Removing Lhs of wire \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:dataa_0\[504] = MODIN7_0[475]
Removing Lhs of wire \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:datab_1\[505] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:datab_0\[506] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:rx_status_1\[513] = Net_12[0]
Removing Rhs of wire \UART_RPI:BUART:rx_status_2\[514] = \UART_RPI:BUART:rx_parity_error_status\[515]
Removing Rhs of wire \UART_RPI:BUART:rx_status_3\[516] = \UART_RPI:BUART:rx_stop_bit_error\[517]
Removing Lhs of wire cmp_vv_vv_MODGEN_10[527] = \UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_0\[575]
Removing Lhs of wire cmp_vv_vv_MODGEN_11[531] = \UART_RPI:BUART:sRX:MODULE_11:g1:a0:xneq\[597]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newa_6\[532] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newa_5\[533] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newa_4\[534] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newa_3\[535] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newa_2\[536] = MODIN10_6[537]
Removing Rhs of wire MODIN10_6[537] = \UART_RPI:BUART:rx_count_6\[455]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newa_1\[538] = MODIN10_5[539]
Removing Rhs of wire MODIN10_5[539] = \UART_RPI:BUART:rx_count_5\[456]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newa_0\[540] = MODIN10_4[541]
Removing Rhs of wire MODIN10_4[541] = \UART_RPI:BUART:rx_count_4\[457]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_6\[542] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_5\[543] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_4\[544] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_3\[545] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_2\[546] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_1\[547] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:newb_0\[548] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:dataa_6\[549] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:dataa_5\[550] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:dataa_4\[551] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:dataa_3\[552] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:dataa_2\[553] = MODIN10_6[537]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:dataa_1\[554] = MODIN10_5[539]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:dataa_0\[555] = MODIN10_4[541]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:datab_6\[556] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:datab_5\[557] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:datab_4\[558] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:datab_3\[559] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:datab_2\[560] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:datab_1\[561] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_10:g2:a0:datab_0\[562] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_11:g1:a0:newa_0\[577] = \UART_RPI:BUART:rx_postpoll\[413]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_11:g1:a0:newb_0\[578] = \UART_RPI:BUART:rx_parity_bit\[530]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_11:g1:a0:dataa_0\[579] = \UART_RPI:BUART:rx_postpoll\[413]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_11:g1:a0:datab_0\[580] = \UART_RPI:BUART:rx_parity_bit\[530]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:a_0\[581] = \UART_RPI:BUART:rx_postpoll\[413]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:b_0\[582] = \UART_RPI:BUART:rx_parity_bit\[530]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:aeqb_0\[584] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:eq_0\[585] = \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:xnor_array_0\[583]
Removing Lhs of wire \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:eqi_0\[586] = \UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:xnor_array_0\[583]
Removing Lhs of wire tmpOE__TX_Debug_net_0[608] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_Debug:Net_61\[616] = \UART_Debug:Net_9\[615]
Removing Lhs of wire \UART_Debug:BUART:tx_hd_send_break\[620] = Net_12[0]
Removing Lhs of wire \UART_Debug:BUART:FinalParityType_1\[622] = Net_12[0]
Removing Lhs of wire \UART_Debug:BUART:FinalParityType_0\[623] = Net_12[0]
Removing Lhs of wire \UART_Debug:BUART:tx_ctrl_mark\[627] = Net_12[0]
Removing Rhs of wire \UART_Debug:BUART:tx_bitclk_enable_pre\[637] = \UART_Debug:BUART:tx_bitclk_dp\[673]
Removing Lhs of wire \UART_Debug:BUART:tx_counter_tc\[683] = \UART_Debug:BUART:tx_counter_dp\[674]
Removing Lhs of wire \UART_Debug:BUART:tx_status_6\[684] = Net_12[0]
Removing Lhs of wire \UART_Debug:BUART:tx_status_5\[685] = Net_12[0]
Removing Lhs of wire \UART_Debug:BUART:tx_status_4\[686] = Net_12[0]
Removing Lhs of wire \UART_Debug:BUART:tx_status_1\[688] = \UART_Debug:BUART:tx_fifo_empty\[651]
Removing Lhs of wire \UART_Debug:BUART:tx_status_3\[690] = \UART_Debug:BUART:tx_fifo_notfull\[650]
Removing Lhs of wire \Timer_ISR:Net_260\[698] = Net_12[0]
Removing Lhs of wire \Timer_ISR:Net_266\[699] = tmpOE__TX_OEM_net_0[4]
Removing Rhs of wire Net_180[703] = \Timer_ISR:Net_57\[702]
Removing Lhs of wire \Timer_ISR:Net_102\[705] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \ADC_TS410:AMuxHw_2_Decoder_enable\[706] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \ADC_TS410:cmp_vv_vv_MODGEN_1\[708] = \ADC_TS410:MODULE_1:g1:a0:xeq\[1043]
Removing Rhs of wire \ADC_TS410:clock\[709] = \ADC_TS410:Net_3874\[943]
Removing Rhs of wire \ADC_TS410:ch_addr_5\[711] = \ADC_TS410:bSAR_SEQ:count_5\[910]
Removing Rhs of wire \ADC_TS410:ch_addr_4\[713] = \ADC_TS410:bSAR_SEQ:count_4\[911]
Removing Rhs of wire \ADC_TS410:ch_addr_3\[715] = \ADC_TS410:bSAR_SEQ:count_3\[912]
Removing Rhs of wire \ADC_TS410:ch_addr_2\[717] = \ADC_TS410:bSAR_SEQ:count_2\[913]
Removing Rhs of wire \ADC_TS410:ch_addr_1\[719] = \ADC_TS410:bSAR_SEQ:count_1\[914]
Removing Rhs of wire \ADC_TS410:ch_addr_0\[721] = \ADC_TS410:bSAR_SEQ:count_0\[915]
Removing Lhs of wire \ADC_TS410:SAR:vp_ctl_0\[855] = Net_12[0]
Removing Lhs of wire \ADC_TS410:SAR:vp_ctl_2\[856] = Net_12[0]
Removing Lhs of wire \ADC_TS410:SAR:vn_ctl_1\[857] = Net_12[0]
Removing Lhs of wire \ADC_TS410:SAR:vn_ctl_3\[858] = Net_12[0]
Removing Lhs of wire \ADC_TS410:SAR:vp_ctl_1\[859] = Net_12[0]
Removing Lhs of wire \ADC_TS410:SAR:vp_ctl_3\[860] = Net_12[0]
Removing Lhs of wire \ADC_TS410:SAR:vn_ctl_0\[861] = Net_12[0]
Removing Lhs of wire \ADC_TS410:SAR:vn_ctl_2\[862] = Net_12[0]
Removing Lhs of wire \ADC_TS410:SAR:Net_188\[863] = \ADC_TS410:clock\[709]
Removing Lhs of wire \ADC_TS410:SAR:soc\[869] = Net_12[0]
Removing Rhs of wire \ADC_TS410:bSAR_SEQ:enable\[900] = \ADC_TS410:bSAR_SEQ:control_0\[901]
Removing Rhs of wire \ADC_TS410:bSAR_SEQ:load_period\[902] = \ADC_TS410:bSAR_SEQ:control_1\[903]
Removing Lhs of wire \ADC_TS410:bSAR_SEQ:status_7\[916] = Net_12[0]
Removing Lhs of wire \ADC_TS410:bSAR_SEQ:status_6\[917] = Net_12[0]
Removing Lhs of wire \ADC_TS410:bSAR_SEQ:status_5\[918] = Net_12[0]
Removing Lhs of wire \ADC_TS410:bSAR_SEQ:status_4\[919] = Net_12[0]
Removing Lhs of wire \ADC_TS410:bSAR_SEQ:status_3\[920] = Net_12[0]
Removing Lhs of wire \ADC_TS410:bSAR_SEQ:status_2\[921] = Net_12[0]
Removing Lhs of wire \ADC_TS410:bSAR_SEQ:status_1\[922] = Net_12[0]
Removing Rhs of wire \ADC_TS410:bSAR_SEQ:status_0\[923] = \ADC_TS410:bSAR_SEQ:nrq_edge_detect_reg\[924]
Removing Rhs of wire Net_227[931] = \ADC_TS410:bSAR_SEQ:status_0\[923]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:newa_5\[954] = \ADC_TS410:MODIN1_5\[955]
Removing Lhs of wire \ADC_TS410:MODIN1_5\[955] = \ADC_TS410:ch_addr_5\[711]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:newa_4\[956] = \ADC_TS410:MODIN1_4\[957]
Removing Lhs of wire \ADC_TS410:MODIN1_4\[957] = \ADC_TS410:ch_addr_4\[713]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:newa_3\[958] = \ADC_TS410:MODIN1_3\[959]
Removing Lhs of wire \ADC_TS410:MODIN1_3\[959] = \ADC_TS410:ch_addr_3\[715]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:newa_2\[960] = \ADC_TS410:MODIN1_2\[961]
Removing Lhs of wire \ADC_TS410:MODIN1_2\[961] = \ADC_TS410:ch_addr_2\[717]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:newa_1\[962] = \ADC_TS410:MODIN1_1\[963]
Removing Lhs of wire \ADC_TS410:MODIN1_1\[963] = \ADC_TS410:ch_addr_1\[719]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:newa_0\[964] = \ADC_TS410:MODIN1_0\[965]
Removing Lhs of wire \ADC_TS410:MODIN1_0\[965] = \ADC_TS410:ch_addr_0\[721]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:newb_5\[966] = \ADC_TS410:MODIN2_5\[967]
Removing Lhs of wire \ADC_TS410:MODIN2_5\[967] = \ADC_TS410:AMuxHw_2_Decoder_old_id_5\[710]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:newb_4\[968] = \ADC_TS410:MODIN2_4\[969]
Removing Lhs of wire \ADC_TS410:MODIN2_4\[969] = \ADC_TS410:AMuxHw_2_Decoder_old_id_4\[712]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:newb_3\[970] = \ADC_TS410:MODIN2_3\[971]
Removing Lhs of wire \ADC_TS410:MODIN2_3\[971] = \ADC_TS410:AMuxHw_2_Decoder_old_id_3\[714]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:newb_2\[972] = \ADC_TS410:MODIN2_2\[973]
Removing Lhs of wire \ADC_TS410:MODIN2_2\[973] = \ADC_TS410:AMuxHw_2_Decoder_old_id_2\[716]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:newb_1\[974] = \ADC_TS410:MODIN2_1\[975]
Removing Lhs of wire \ADC_TS410:MODIN2_1\[975] = \ADC_TS410:AMuxHw_2_Decoder_old_id_1\[718]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:newb_0\[976] = \ADC_TS410:MODIN2_0\[977]
Removing Lhs of wire \ADC_TS410:MODIN2_0\[977] = \ADC_TS410:AMuxHw_2_Decoder_old_id_0\[720]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:dataa_5\[978] = \ADC_TS410:ch_addr_5\[711]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:dataa_4\[979] = \ADC_TS410:ch_addr_4\[713]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:dataa_3\[980] = \ADC_TS410:ch_addr_3\[715]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:dataa_2\[981] = \ADC_TS410:ch_addr_2\[717]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:dataa_1\[982] = \ADC_TS410:ch_addr_1\[719]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:dataa_0\[983] = \ADC_TS410:ch_addr_0\[721]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:datab_5\[984] = \ADC_TS410:AMuxHw_2_Decoder_old_id_5\[710]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:datab_4\[985] = \ADC_TS410:AMuxHw_2_Decoder_old_id_4\[712]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:datab_3\[986] = \ADC_TS410:AMuxHw_2_Decoder_old_id_3\[714]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:datab_2\[987] = \ADC_TS410:AMuxHw_2_Decoder_old_id_2\[716]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:datab_1\[988] = \ADC_TS410:AMuxHw_2_Decoder_old_id_1\[718]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:datab_0\[989] = \ADC_TS410:AMuxHw_2_Decoder_old_id_0\[720]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:gx:u0:a_5\[990] = \ADC_TS410:ch_addr_5\[711]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:gx:u0:a_4\[991] = \ADC_TS410:ch_addr_4\[713]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:gx:u0:a_3\[992] = \ADC_TS410:ch_addr_3\[715]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:gx:u0:a_2\[993] = \ADC_TS410:ch_addr_2\[717]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:gx:u0:a_1\[994] = \ADC_TS410:ch_addr_1\[719]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:gx:u0:a_0\[995] = \ADC_TS410:ch_addr_0\[721]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:gx:u0:b_5\[996] = \ADC_TS410:AMuxHw_2_Decoder_old_id_5\[710]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:gx:u0:b_4\[997] = \ADC_TS410:AMuxHw_2_Decoder_old_id_4\[712]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:gx:u0:b_3\[998] = \ADC_TS410:AMuxHw_2_Decoder_old_id_3\[714]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:gx:u0:b_2\[999] = \ADC_TS410:AMuxHw_2_Decoder_old_id_2\[716]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:gx:u0:b_1\[1000] = \ADC_TS410:AMuxHw_2_Decoder_old_id_1\[718]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:gx:u0:b_0\[1001] = \ADC_TS410:AMuxHw_2_Decoder_old_id_0\[720]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:gx:u0:aeqb_0\[1008] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:gx:u0:eq_0\[1009] = \ADC_TS410:MODULE_1:g1:a0:gx:u0:xnor_array_0\[1007]
Removing Lhs of wire \ADC_TS410:MODULE_1:g1:a0:gx:u0:eqi_0\[1015] = \ADC_TS410:MODULE_1:g1:a0:gx:u0:eq_5\[1014]
Removing Rhs of wire \ADC_TS410:MODULE_1:g1:a0:xeq\[1043] = \ADC_TS410:MODULE_1:g1:a0:gx:u0:aeqb_1\[1016]
Removing Lhs of wire tmpOE__ADC_CH0_net_0[1056] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire tmpOE__ADC_CH3_net_0[1062] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire tmpOE__ADC_CH2_net_0[1068] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire tmpOE__ADC_CH1_net_0[1074] = tmpOE__TX_OEM_net_0[4]
Removing Rhs of wire \ADC_DelSig:Net_488\[1087] = \ADC_DelSig:Net_250\[1124]
Removing Lhs of wire \ADC_DelSig:Net_481\[1090] = Net_12[0]
Removing Lhs of wire \ADC_DelSig:Net_482\[1091] = Net_12[0]
Removing Lhs of wire \ADC_DelSig:Net_252\[1126] = Net_12[0]
Removing Lhs of wire \ADC_DelSig:soc\[1128] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire tmpOE__Pressure_Before_Pos_net_0[1138] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire tmpOE__Pressure_Before_Neg_net_0[1144] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire tmpOE__Pressure_After_Pos_net_0[1150] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire tmpOE__Pressure_After_Neg_net_0[1156] = tmpOE__TX_OEM_net_0[4]
Removing Lhs of wire \UART_OEM:BUART:reset_reg\\D\[1161] = Net_12[0]
Removing Lhs of wire Net_174D[1166] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:rx_parity_error_pre\\D\[1186] = \UART_OEM:BUART:rx_parity_error_pre\[233]
Removing Lhs of wire \UART_OEM:BUART:rx_break_status\\D\[1187] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:reset_reg\\D\[1191] = Net_12[0]
Removing Lhs of wire Net_161D[1196] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:rx_parity_error_pre\\D\[1216] = \UART_RPI:BUART:rx_parity_error_pre\[525]
Removing Lhs of wire \UART_RPI:BUART:rx_break_status\\D\[1217] = Net_12[0]
Removing Lhs of wire \UART_Debug:BUART:reset_reg\\D\[1221] = Net_12[0]
Removing Lhs of wire Net_148D[1226] = Net_12[0]
Removing Lhs of wire \ADC_TS410:AMuxHw_2_Decoder_old_id_5\\D\[1231] = \ADC_TS410:ch_addr_5\[711]
Removing Lhs of wire \ADC_TS410:AMuxHw_2_Decoder_old_id_4\\D\[1232] = \ADC_TS410:ch_addr_4\[713]
Removing Lhs of wire \ADC_TS410:AMuxHw_2_Decoder_old_id_3\\D\[1233] = \ADC_TS410:ch_addr_3\[715]
Removing Lhs of wire \ADC_TS410:AMuxHw_2_Decoder_old_id_2\\D\[1234] = \ADC_TS410:ch_addr_2\[717]
Removing Lhs of wire \ADC_TS410:AMuxHw_2_Decoder_old_id_1\\D\[1235] = \ADC_TS410:ch_addr_1\[719]
Removing Lhs of wire \ADC_TS410:AMuxHw_2_Decoder_old_id_0\\D\[1236] = \ADC_TS410:ch_addr_0\[721]
Removing Lhs of wire \ADC_TS410:bSAR_SEQ:nrq_edge_detect_reg\\D\[1301] = \ADC_TS410:bSAR_SEQ:nrq_edge_detect\[930]
Removing Lhs of wire \ADC_TS410:bSAR_SEQ:nrq_reg\\D\[1303] = \ADC_TS410:bSAR_SEQ:bus_clk_nrq_reg\[927]

------------------------------------------------------
Aliased 0 equations, 320 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'Net_12' (cost = 0):
Net_12 <=  ('0') ;

Note:  Expanding virtual equation for 'tmpOE__TX_OEM_net_0' (cost = 0):
tmpOE__TX_OEM_net_0 <=  ('1') ;

Note:  Expanding virtual equation for '\UART_OEM:BUART:rx_addressmatch\' (cost = 0):
\UART_OEM:BUART:rx_addressmatch\ <= (\UART_OEM:BUART:rx_addressmatch2\
	OR \UART_OEM:BUART:rx_addressmatch1\);

Note:  Expanding virtual equation for '\UART_OEM:BUART:rx_bitclk_pre\' (cost = 2):
\UART_OEM:BUART:rx_bitclk_pre\ <= ((not \UART_OEM:BUART:rx_count_3\ and not \UART_OEM:BUART:rx_count_2\ and not \UART_OEM:BUART:rx_count_1\ and not \UART_OEM:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_OEM:BUART:rx_bitclk_pre16x\' (cost = 2):
\UART_OEM:BUART:rx_bitclk_pre16x\ <= ((not \UART_OEM:BUART:rx_count_3\ and \UART_OEM:BUART:rx_count_2\ and \UART_OEM:BUART:rx_count_1\ and \UART_OEM:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_OEM:BUART:rx_poll_bit1\' (cost = 2):
\UART_OEM:BUART:rx_poll_bit1\ <= ((not \UART_OEM:BUART:rx_count_3\ and not \UART_OEM:BUART:rx_count_2\ and not \UART_OEM:BUART:rx_count_1\ and not \UART_OEM:BUART:rx_count7_bit8_wire\ and \UART_OEM:BUART:rx_count_0\)
	OR (not \UART_OEM:BUART:rx_count_2\ and not \UART_OEM:BUART:rx_count_1\ and not \UART_OEM:BUART:rx_count_0\ and \UART_OEM:BUART:rx_count_3\ and \UART_OEM:BUART:rx_count7_bit8_wire\));

Note:  Expanding virtual equation for '\UART_OEM:BUART:rx_poll_bit2\' (cost = 2):
\UART_OEM:BUART:rx_poll_bit2\ <= ((not \UART_OEM:BUART:rx_count_3\ and not \UART_OEM:BUART:rx_count_2\ and not \UART_OEM:BUART:rx_count_1\ and not \UART_OEM:BUART:rx_count_0\ and not \UART_OEM:BUART:rx_count7_bit8_wire\)
	OR (not \UART_OEM:BUART:rx_count_3\ and \UART_OEM:BUART:rx_count_2\ and \UART_OEM:BUART:rx_count_1\ and \UART_OEM:BUART:rx_count_0\ and \UART_OEM:BUART:rx_count7_bit8_wire\));

Note:  Expanding virtual equation for '\UART_OEM:BUART:pollingrange\' (cost = 24):
\UART_OEM:BUART:pollingrange\ <= ((not \UART_OEM:BUART:rx_count_3\ and not \UART_OEM:BUART:rx_count_2\ and not \UART_OEM:BUART:rx_count_1\ and not \UART_OEM:BUART:rx_count7_bit8_wire\)
	OR (not \UART_OEM:BUART:rx_count_3\ and \UART_OEM:BUART:rx_count_2\ and \UART_OEM:BUART:rx_count_1\ and \UART_OEM:BUART:rx_count_0\ and \UART_OEM:BUART:rx_count7_bit8_wire\)
	OR (not \UART_OEM:BUART:rx_count_2\ and not \UART_OEM:BUART:rx_count_1\ and not \UART_OEM:BUART:rx_count_0\ and \UART_OEM:BUART:rx_count_3\ and \UART_OEM:BUART:rx_count7_bit8_wire\));

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\UART_OEM:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (MODIN3_0);

Note:  Expanding virtual equation for 'add_vv_vv_MODGEN_2_0' (cost = 0):
add_vv_vv_MODGEN_2_0 <= (not MODIN3_0);

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\' (cost = 0):
\UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\' (cost = 0):
\UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\ <= (MODIN3_1);

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\' (cost = 0):
\UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\ <= (not MODIN3_1);

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\' (cost = 0):
\UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_6\' (cost = 0):
\UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:MODULE_5:g2:a0:gta_6\' (cost = 0):
\UART_OEM:BUART:sRX:MODULE_5:g2:a0:gta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_5\' (cost = 0):
\UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:MODULE_5:g2:a0:gta_5\' (cost = 0):
\UART_OEM:BUART:sRX:MODULE_5:g2:a0:gta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_4\' (cost = 0):
\UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:MODULE_5:g2:a0:gta_4\' (cost = 0):
\UART_OEM:BUART:sRX:MODULE_5:g2:a0:gta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_3\' (cost = 0):
\UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:MODULE_5:g2:a0:gta_3\' (cost = 0):
\UART_OEM:BUART:sRX:MODULE_5:g2:a0:gta_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_2\' (cost = 0):
\UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_2\ <= (not MODIN6_6);

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:MODULE_5:g2:a0:gta_2\' (cost = 0):
\UART_OEM:BUART:sRX:MODULE_5:g2:a0:gta_2\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_1\' (cost = 2):
\UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_1\ <= (not MODIN6_5
	OR not MODIN6_6);

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:MODULE_5:g2:a0:gta_1\' (cost = 0):
\UART_OEM:BUART:sRX:MODULE_5:g2:a0:gta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_0\' (cost = 7):
\UART_OEM:BUART:sRX:MODULE_5:g2:a0:lta_0\ <= (not MODIN6_5
	OR not MODIN6_6);

Note:  Expanding virtual equation for '\UART_RPI:BUART:rx_addressmatch\' (cost = 0):
\UART_RPI:BUART:rx_addressmatch\ <= (\UART_RPI:BUART:rx_addressmatch2\
	OR \UART_RPI:BUART:rx_addressmatch1\);

Note:  Expanding virtual equation for '\UART_RPI:BUART:rx_bitclk_pre\' (cost = 2):
\UART_RPI:BUART:rx_bitclk_pre\ <= ((not \UART_RPI:BUART:rx_count_3\ and not \UART_RPI:BUART:rx_count_2\ and not \UART_RPI:BUART:rx_count_1\ and not \UART_RPI:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_RPI:BUART:rx_bitclk_pre16x\' (cost = 2):
\UART_RPI:BUART:rx_bitclk_pre16x\ <= ((not \UART_RPI:BUART:rx_count_3\ and \UART_RPI:BUART:rx_count_2\ and \UART_RPI:BUART:rx_count_1\ and \UART_RPI:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\UART_RPI:BUART:rx_poll_bit1\' (cost = 2):
\UART_RPI:BUART:rx_poll_bit1\ <= ((not \UART_RPI:BUART:rx_count_3\ and not \UART_RPI:BUART:rx_count_2\ and not \UART_RPI:BUART:rx_count_1\ and not \UART_RPI:BUART:rx_count7_bit8_wire\ and \UART_RPI:BUART:rx_count_0\)
	OR (not \UART_RPI:BUART:rx_count_2\ and not \UART_RPI:BUART:rx_count_1\ and not \UART_RPI:BUART:rx_count_0\ and \UART_RPI:BUART:rx_count_3\ and \UART_RPI:BUART:rx_count7_bit8_wire\));

Note:  Expanding virtual equation for '\UART_RPI:BUART:rx_poll_bit2\' (cost = 2):
\UART_RPI:BUART:rx_poll_bit2\ <= ((not \UART_RPI:BUART:rx_count_3\ and not \UART_RPI:BUART:rx_count_2\ and not \UART_RPI:BUART:rx_count_1\ and not \UART_RPI:BUART:rx_count_0\ and not \UART_RPI:BUART:rx_count7_bit8_wire\)
	OR (not \UART_RPI:BUART:rx_count_3\ and \UART_RPI:BUART:rx_count_2\ and \UART_RPI:BUART:rx_count_1\ and \UART_RPI:BUART:rx_count_0\ and \UART_RPI:BUART:rx_count7_bit8_wire\));

Note:  Expanding virtual equation for '\UART_RPI:BUART:pollingrange\' (cost = 24):
\UART_RPI:BUART:pollingrange\ <= ((not \UART_RPI:BUART:rx_count_3\ and not \UART_RPI:BUART:rx_count_2\ and not \UART_RPI:BUART:rx_count_1\ and not \UART_RPI:BUART:rx_count7_bit8_wire\)
	OR (not \UART_RPI:BUART:rx_count_3\ and \UART_RPI:BUART:rx_count_2\ and \UART_RPI:BUART:rx_count_1\ and \UART_RPI:BUART:rx_count_0\ and \UART_RPI:BUART:rx_count7_bit8_wire\)
	OR (not \UART_RPI:BUART:rx_count_2\ and not \UART_RPI:BUART:rx_count_1\ and not \UART_RPI:BUART:rx_count_0\ and \UART_RPI:BUART:rx_count_3\ and \UART_RPI:BUART:rx_count7_bit8_wire\));

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:s23Poll:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\UART_RPI:BUART:sRX:s23Poll:MODULE_7:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (MODIN7_0);

Note:  Expanding virtual equation for 'add_vv_vv_MODGEN_7_0' (cost = 0):
add_vv_vv_MODGEN_7_0 <= (not MODIN7_0);

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:lta_1\' (cost = 0):
\UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:lta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:gta_1\' (cost = 0):
\UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:gta_1\ <= (MODIN7_1);

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:lta_1\' (cost = 0):
\UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:lta_1\ <= (not MODIN7_1);

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:gta_1\' (cost = 0):
\UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:gta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_6\' (cost = 0):
\UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:MODULE_10:g2:a0:gta_6\' (cost = 0):
\UART_RPI:BUART:sRX:MODULE_10:g2:a0:gta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_5\' (cost = 0):
\UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:MODULE_10:g2:a0:gta_5\' (cost = 0):
\UART_RPI:BUART:sRX:MODULE_10:g2:a0:gta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_4\' (cost = 0):
\UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:MODULE_10:g2:a0:gta_4\' (cost = 0):
\UART_RPI:BUART:sRX:MODULE_10:g2:a0:gta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_3\' (cost = 0):
\UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:MODULE_10:g2:a0:gta_3\' (cost = 0):
\UART_RPI:BUART:sRX:MODULE_10:g2:a0:gta_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_2\' (cost = 0):
\UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_2\ <= (not MODIN10_6);

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:MODULE_10:g2:a0:gta_2\' (cost = 0):
\UART_RPI:BUART:sRX:MODULE_10:g2:a0:gta_2\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_1\' (cost = 2):
\UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_1\ <= (not MODIN10_5
	OR not MODIN10_6);

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:MODULE_10:g2:a0:gta_1\' (cost = 0):
\UART_RPI:BUART:sRX:MODULE_10:g2:a0:gta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_0\' (cost = 7):
\UART_RPI:BUART:sRX:MODULE_10:g2:a0:lta_0\ <= (not MODIN10_5
	OR not MODIN10_6);

Note:  Expanding virtual equation for '\ADC_TS410:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\ADC_TS410:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\)
	OR (\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\));

Note:  Expanding virtual equation for '\ADC_TS410:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\ADC_TS410:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\)
	OR (\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_TS410:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\ADC_TS410:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\)
	OR (\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_TS410:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\ADC_TS410:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\)
	OR (\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\));

Note:  Expanding virtual equation for '\ADC_TS410:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\ADC_TS410:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\)
	OR (\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\));

Note:  Expanding virtual equation for '\ADC_TS410:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ADC_TS410:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\)
	OR (\ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_TS410:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\ADC_TS410:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_TS410:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\ADC_TS410:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_TS410:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\ADC_TS410:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_TS410:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\ADC_TS410:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_TS410:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\ADC_TS410:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_TS410:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\ADC_TS410:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\ADC_TS410:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\ADC_TS410:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_TS410:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\ADC_TS410:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\ADC_TS410:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\ADC_TS410:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_TS410:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\ADC_TS410:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\ADC_TS410:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\ADC_TS410:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_TS410:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\ADC_TS410:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\ADC_TS410:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\ADC_TS410:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\' (cost = 4):
\UART_OEM:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\ <= ((not MODIN3_1 and not MODIN3_0));

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\' (cost = 0):
\UART_OEM:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\ <= (not MODIN3_1);

Note:  Expanding virtual equation for 'add_vv_vv_MODGEN_2_1' (cost = 6):
add_vv_vv_MODGEN_2_1 <= ((not MODIN3_0 and MODIN3_1)
	OR (not MODIN3_1 and MODIN3_0));

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:lta_0\' (cost = 4):
\UART_RPI:BUART:sRX:s23Poll:MODULE_8:g2:a0:lta_0\ <= ((not MODIN7_1 and not MODIN7_0));

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:lta_0\' (cost = 0):
\UART_RPI:BUART:sRX:s23Poll:MODULE_9:g2:a0:lta_0\ <= (not MODIN7_1);

Note:  Expanding virtual equation for 'add_vv_vv_MODGEN_7_1' (cost = 6):
add_vv_vv_MODGEN_7_1 <= ((not MODIN7_0 and MODIN7_1)
	OR (not MODIN7_1 and MODIN7_0));

Note:  Expanding virtual equation for '\ADC_TS410:MODULE_1:g1:a0:xeq\' (cost = 64):
\ADC_TS410:MODULE_1:g1:a0:xeq\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\));


Substituting virtuals - pass 3:

Note:  Expanding virtual equation for '\UART_OEM:BUART:rx_postpoll\' (cost = 72):
\UART_OEM:BUART:rx_postpoll\ <= (MODIN3_1
	OR (Net_167 and MODIN3_0));

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\ <= ((not Net_167 and not MODIN3_1 and not \UART_OEM:BUART:rx_parity_bit\)
	OR (not MODIN3_1 and not MODIN3_0 and not \UART_OEM:BUART:rx_parity_bit\)
	OR (MODIN3_1 and \UART_OEM:BUART:rx_parity_bit\)
	OR (Net_167 and MODIN3_0 and \UART_OEM:BUART:rx_parity_bit\));

Note:  Expanding virtual equation for '\UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_1\' (cost = 4):
\UART_OEM:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_1\ <= ((not Net_167 and not MODIN3_1 and not \UART_OEM:BUART:rx_parity_bit\)
	OR (not MODIN3_1 and not MODIN3_0 and not \UART_OEM:BUART:rx_parity_bit\)
	OR (MODIN3_1 and \UART_OEM:BUART:rx_parity_bit\)
	OR (Net_167 and MODIN3_0 and \UART_OEM:BUART:rx_parity_bit\));

Note:  Expanding virtual equation for '\UART_RPI:BUART:rx_postpoll\' (cost = 72):
\UART_RPI:BUART:rx_postpoll\ <= (MODIN7_1
	OR (Net_154 and MODIN7_0));

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:xnor_array_0\ <= ((not Net_154 and not MODIN7_1 and not \UART_RPI:BUART:rx_parity_bit\)
	OR (not MODIN7_1 and not MODIN7_0 and not \UART_RPI:BUART:rx_parity_bit\)
	OR (MODIN7_1 and \UART_RPI:BUART:rx_parity_bit\)
	OR (Net_154 and MODIN7_0 and \UART_RPI:BUART:rx_parity_bit\));

Note:  Expanding virtual equation for '\UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:aeqb_1\' (cost = 4):
\UART_RPI:BUART:sRX:MODULE_11:g1:a0:gx:u0:aeqb_1\ <= ((not Net_154 and not MODIN7_1 and not \UART_RPI:BUART:rx_parity_bit\)
	OR (not MODIN7_1 and not MODIN7_0 and not \UART_RPI:BUART:rx_parity_bit\)
	OR (MODIN7_1 and \UART_RPI:BUART:rx_parity_bit\)
	OR (Net_154 and MODIN7_0 and \UART_RPI:BUART:rx_parity_bit\));

Note:  Virtual signal \ADC_TS410:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\ADC_TS410:AMuxHw_2_Decoder_is_active\ <= ((not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and not \ADC_TS410:ch_addr_0\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and not \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and not \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and not \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and not \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (not \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and not \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\)
	OR (\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ and \ADC_TS410:ch_addr_5\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ and \ADC_TS410:ch_addr_4\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ and \ADC_TS410:ch_addr_3\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ and \ADC_TS410:ch_addr_2\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ and \ADC_TS410:ch_addr_1\ and \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ and \ADC_TS410:ch_addr_0\));


Substituting virtuals - pass 4:


----------------------------------------------------------
Circuit simplification results:

	Expanded 84 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \UART_OEM:BUART:rx_status_0\ to Net_12
Aliasing \UART_OEM:BUART:rx_status_6\ to Net_12
Aliasing \UART_RPI:BUART:rx_status_0\ to Net_12
Aliasing \UART_RPI:BUART:rx_status_6\ to Net_12
Aliasing \UART_OEM:BUART:rx_markspace_status\\D\ to Net_12
Aliasing \UART_OEM:BUART:rx_parity_error_status\\D\ to Net_12
Aliasing \UART_OEM:BUART:rx_addr_match_status\\D\ to Net_12
Aliasing \UART_RPI:BUART:rx_markspace_status\\D\ to Net_12
Aliasing \UART_RPI:BUART:rx_parity_error_status\\D\ to Net_12
Aliasing \UART_RPI:BUART:rx_addr_match_status\\D\ to Net_12
Removing Rhs of wire \UART_OEM:BUART:rx_bitclk_enable\[120] = \UART_OEM:BUART:rx_bitclk\[169]
Removing Lhs of wire \UART_OEM:BUART:rx_status_0\[219] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:rx_status_6\[228] = Net_12[0]
Removing Rhs of wire \UART_RPI:BUART:rx_bitclk_enable\[412] = \UART_RPI:BUART:rx_bitclk\[461]
Removing Lhs of wire \UART_RPI:BUART:rx_status_0\[511] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:rx_status_6\[520] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:tx_ctrl_mark_last\\D\[1168] = \UART_OEM:BUART:tx_ctrl_mark_last\[111]
Removing Lhs of wire \UART_OEM:BUART:rx_markspace_status\\D\[1181] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:rx_parity_error_status\\D\[1182] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:rx_addr_match_status\\D\[1184] = Net_12[0]
Removing Lhs of wire \UART_OEM:BUART:rx_markspace_pre\\D\[1185] = \UART_OEM:BUART:rx_markspace_pre\[232]
Removing Lhs of wire \UART_OEM:BUART:rx_parity_bit\\D\[1190] = \UART_OEM:BUART:rx_parity_bit\[238]
Removing Lhs of wire \UART_RPI:BUART:tx_ctrl_mark_last\\D\[1198] = \UART_RPI:BUART:tx_ctrl_mark_last\[403]
Removing Lhs of wire \UART_RPI:BUART:rx_markspace_status\\D\[1211] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:rx_parity_error_status\\D\[1212] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:rx_addr_match_status\\D\[1214] = Net_12[0]
Removing Lhs of wire \UART_RPI:BUART:rx_markspace_pre\\D\[1215] = \UART_RPI:BUART:rx_markspace_pre\[524]
Removing Lhs of wire \UART_RPI:BUART:rx_parity_bit\\D\[1220] = \UART_RPI:BUART:rx_parity_bit\[530]
Removing Lhs of wire \UART_Debug:BUART:tx_ctrl_mark_last\\D\[1228] = \UART_Debug:BUART:tx_ctrl_mark_last\[694]

------------------------------------------------------
Aliased 0 equations, 19 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:

Note:  Deleted unused equation:
\UART_OEM:BUART:sRX:MODULE_6:g1:a0:xneq\ <= ((not \UART_OEM:BUART:rx_parity_bit\ and Net_167 and MODIN3_0)
	OR (not MODIN3_1 and not MODIN3_0 and \UART_OEM:BUART:rx_parity_bit\)
	OR (not Net_167 and not MODIN3_1 and \UART_OEM:BUART:rx_parity_bit\)
	OR (not \UART_OEM:BUART:rx_parity_bit\ and MODIN3_1));

Note:  Deleted unused equation:
\UART_RPI:BUART:sRX:MODULE_11:g1:a0:xneq\ <= ((not \UART_RPI:BUART:rx_parity_bit\ and Net_154 and MODIN7_0)
	OR (not MODIN7_1 and not MODIN7_0 and \UART_RPI:BUART:rx_parity_bit\)
	OR (not Net_154 and not MODIN7_1 and \UART_RPI:BUART:rx_parity_bit\)
	OR (not \UART_RPI:BUART:rx_parity_bit\ and MODIN7_1));


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\bin\warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya "-.fftprj=C:\Users\haoen\Desktop\ecmo_psoc5_ws\PSOC Code\PSOC5 Implement.cydsn\PSOC5 Implement.cyprj" -dcpsoc3 "PSOC5 Implement.v" -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 1s.079ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V4.4.0.80, Family: PSoC3, Started at: Tuesday, 07 October 2025 10:12:04
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=C:\Users\haoen\Desktop\ecmo_psoc5_ws\PSOC Code\PSOC5 Implement.cydsn\PSOC5 Implement.cyprj -d CY8C5888LTI-LP097 PSOC5 Implement.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.017ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech Mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \ADC_TS410:MODULE_1:g1:a0:gx:u0:lti_1\ kept \ADC_TS410:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \ADC_TS410:MODULE_1:g1:a0:gx:u0:gti_1\ kept \ADC_TS410:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \ADC_TS410:MODULE_1:g1:a0:gx:u0:lti_0\ kept \ADC_TS410:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \ADC_TS410:MODULE_1:g1:a0:gx:u0:gti_0\ kept \ADC_TS410:MODULE_1:g1:a0:gx:u0:gt_2\
    Converted constant MacroCell: \UART_OEM:BUART:reset_reg\ from registered to combinatorial
    Converted constant MacroCell: Net_174 from registered to combinatorial
    Converted constant MacroCell: \UART_OEM:BUART:rx_markspace_status\ from registered to combinatorial
    Converted constant MacroCell: \UART_OEM:BUART:rx_status_2\ from registered to combinatorial
    Converted constant MacroCell: \UART_OEM:BUART:rx_addr_match_status\ from registered to combinatorial
    Converted constant MacroCell: \UART_OEM:BUART:rx_break_status\ from registered to combinatorial
    Converted constant MacroCell: \UART_RPI:BUART:reset_reg\ from registered to combinatorial
    Converted constant MacroCell: Net_161 from registered to combinatorial
    Converted constant MacroCell: \UART_RPI:BUART:rx_markspace_status\ from registered to combinatorial
    Converted constant MacroCell: \UART_RPI:BUART:rx_status_2\ from registered to combinatorial
    Converted constant MacroCell: \UART_RPI:BUART:rx_addr_match_status\ from registered to combinatorial
    Converted constant MacroCell: \UART_RPI:BUART:rx_break_status\ from registered to combinatorial
    Converted constant MacroCell: \UART_Debug:BUART:reset_reg\ from registered to combinatorial
    Converted constant MacroCell: Net_148 from registered to combinatorial
Assigning clock ADC_TS410_BusClock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'ADC_DelSig_Ext_CP_Clk'. Fanout=1, Signal=\ADC_DelSig:Net_93\
    Digital Clock 1: Automatic-assigning  clock 'UART_Debug_IntClock'. Fanout=1, Signal=\UART_Debug:Net_9\
    Digital Clock 2: Automatic-assigning  clock 'UART_RPI_IntClock'. Fanout=1, Signal=\UART_RPI:Net_9\
    Digital Clock 3: Automatic-assigning  clock 'ADC_TS410_IntClock'. Fanout=73, Signal=\ADC_TS410:clock\
    Digital Clock 4: Automatic-assigning  clock 'Clock_ISR'. Fanout=1, Signal=Net_10
    Digital Clock 5: Automatic-assigning  clock 'UART_OEM_IntClock'. Fanout=1, Signal=\UART_OEM:Net_9\
    Analog  Clock 0: Automatic-assigning  clock 'ADC_DelSig_theACLK'. Fanout=1, Signal=\ADC_DelSig:Net_488\
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \UART_OEM:BUART:ClkSync\: with output requested to be synchronous
        ClockIn: UART_OEM_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: UART_OEM_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \UART_RPI:BUART:ClkSync\: with output requested to be synchronous
        ClockIn: UART_RPI_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: UART_RPI_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \UART_Debug:BUART:ClkSync\: with output requested to be synchronous
        ClockIn: UART_Debug_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: UART_Debug_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \ADC_TS410:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: ADC_TS410_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \ADC_TS410:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: ADC_TS410_IntClock, EnableOut: \ADC_TS410:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \ADC_TS410:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: ADC_TS410_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_TS410_IntClock, EnableOut: Constant 1
</CYPRESSTAG>
ADD: pft.M0040: information: The following 4 pin(s) will be assigned a location by the fitter: ADC_CH0(0), ADC_CH1(0), ADC_CH2(0), ADC_CH3(0)


Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing duplicate macrocells
    Removing \UART_Debug:BUART:tx_parity_bit\, Duplicate of \UART_Debug:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_Debug:BUART:tx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_Debug:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_Debug:BUART:tx_parity_bit\ (fanout=0)

    Removing \UART_Debug:BUART:tx_mark\, Duplicate of \UART_Debug:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_Debug:BUART:tx_mark\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_Debug:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_Debug:BUART:tx_mark\ (fanout=0)

    Removing \UART_RPI:BUART:rx_parity_bit\, Duplicate of \UART_RPI:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_RPI:BUART:rx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_RPI:BUART:rx_parity_bit\ (fanout=0)

    Removing \UART_RPI:BUART:rx_address_detected\, Duplicate of \UART_RPI:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_RPI:BUART:rx_address_detected\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_RPI:BUART:rx_address_detected\ (fanout=0)

    Removing \UART_RPI:BUART:rx_parity_error_pre\, Duplicate of \UART_RPI:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_RPI:BUART:rx_parity_error_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_RPI:BUART:rx_parity_error_pre\ (fanout=0)

    Removing \UART_RPI:BUART:rx_markspace_pre\, Duplicate of \UART_RPI:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_RPI:BUART:rx_markspace_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_RPI:BUART:rx_markspace_pre\ (fanout=0)

    Removing \UART_RPI:BUART:rx_state_1\, Duplicate of \UART_RPI:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_RPI:BUART:rx_state_1\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_RPI:BUART:rx_state_1\ (fanout=9)

    Removing \UART_RPI:BUART:tx_parity_bit\, Duplicate of \UART_RPI:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_RPI:BUART:tx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_RPI:BUART:tx_parity_bit\ (fanout=0)

    Removing \UART_RPI:BUART:tx_mark\, Duplicate of \UART_RPI:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_RPI:BUART:tx_mark\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_RPI:BUART:tx_mark\ (fanout=0)

    Removing \UART_OEM:BUART:rx_parity_bit\, Duplicate of \UART_OEM:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_OEM:BUART:rx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_OEM:BUART:rx_parity_bit\ (fanout=0)

    Removing \UART_OEM:BUART:rx_address_detected\, Duplicate of \UART_OEM:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_OEM:BUART:rx_address_detected\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_OEM:BUART:rx_address_detected\ (fanout=0)

    Removing \UART_OEM:BUART:rx_parity_error_pre\, Duplicate of \UART_OEM:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_OEM:BUART:rx_parity_error_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_OEM:BUART:rx_parity_error_pre\ (fanout=0)

    Removing \UART_OEM:BUART:rx_markspace_pre\, Duplicate of \UART_OEM:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_OEM:BUART:rx_markspace_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_OEM:BUART:rx_markspace_pre\ (fanout=0)

    Removing \UART_OEM:BUART:rx_state_1\, Duplicate of \UART_OEM:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_OEM:BUART:rx_state_1\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_OEM:BUART:rx_state_1\ (fanout=9)

    Removing \UART_OEM:BUART:tx_parity_bit\, Duplicate of \UART_OEM:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_OEM:BUART:tx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_OEM:BUART:tx_parity_bit\ (fanout=0)

    Removing \UART_OEM:BUART:tx_mark\, Duplicate of \UART_OEM:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\UART_OEM:BUART:tx_mark\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_OEM:BUART:tx_mark\ (fanout=0)


Removing unused cells resulting from optimization
Done removing unused cells.
End removing duplicate macrocells: used 1 pass
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = TX_OEM(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => TX_OEM(0)__PA ,
            pin_input => Net_171 ,
            pad => TX_OEM(0)_PAD );
        Properties:
        {
        }

    Pin : Name = USER_LED(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => USER_LED(0)__PA ,
            pad => USER_LED(0)_PAD );
        Properties:
        {
        }

    Pin : Name = RX_OEM(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => RX_OEM(0)__PA ,
            fb => Net_167 ,
            pad => RX_OEM(0)_PAD );
        Properties:
        {
        }

    Pin : Name = RX_RPI(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => RX_RPI(0)__PA ,
            fb => Net_154 ,
            pad => RX_RPI(0)_PAD );
        Properties:
        {
        }

    Pin : Name = TX_RPI(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => TX_RPI(0)__PA ,
            pin_input => Net_158 ,
            pad => TX_RPI(0)_PAD );
        Properties:
        {
        }

    Pin : Name = TX_Debug(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => TX_Debug(0)__PA ,
            pin_input => Net_133 ,
            pad => TX_Debug(0)_PAD );
        Properties:
        {
        }

    Pin : Name = ADC_CH0(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => ADC_CH0(0)__PA ,
            analog_term => Net_228 ,
            pad => ADC_CH0(0)_PAD ,
            pin_input => \ADC_TS410:AMuxHw_2_Decoder_one_hot_0\ );

    Pin : Name = ADC_CH3(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => ADC_CH3(0)__PA ,
            analog_term => Net_232 ,
            pad => ADC_CH3(0)_PAD ,
            pin_input => \ADC_TS410:AMuxHw_2_Decoder_one_hot_3\ );

    Pin : Name = ADC_CH2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => ADC_CH2(0)__PA ,
            analog_term => Net_231 ,
            pad => ADC_CH2(0)_PAD ,
            pin_input => \ADC_TS410:AMuxHw_2_Decoder_one_hot_2\ );

    Pin : Name = ADC_CH1(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => ADC_CH1(0)__PA ,
            analog_term => Net_229 ,
            pad => ADC_CH1(0)_PAD ,
            pin_input => \ADC_TS410:AMuxHw_2_Decoder_one_hot_1\ );

    Pin : Name = Pressure_Before_Pos(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pressure_Before_Pos(0)__PA ,
            analog_term => Net_363 ,
            pad => Pressure_Before_Pos(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Pressure_Before_Neg(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pressure_Before_Neg(0)__PA ,
            analog_term => Net_356 ,
            pad => Pressure_Before_Neg(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Pressure_After_Pos(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pressure_After_Pos(0)__PA ,
            analog_term => Net_354 ,
            pad => Pressure_After_Pos(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Pressure_After_Neg(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pressure_After_Neg(0)__PA ,
            analog_term => Net_357 ,
            pad => Pressure_After_Neg(0)_PAD );
        Properties:
        {
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * !\ADC_TS410:ch_addr_5\
            + \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * !\ADC_TS410:ch_addr_4\
            + \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * !\ADC_TS410:ch_addr_3\
            + \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * !\ADC_TS410:ch_addr_2\
            + !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * \ADC_TS410:ch_addr_1\
            + \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * !\ADC_TS410:ch_addr_1\
            + !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\ * \ADC_TS410:ch_addr_0\
            + \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ * !\ADC_TS410:ch_addr_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=Net_171, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_OEM:BUART:txn\
        );
        Output = Net_171 (fanout=1)

    MacroCell: Name=\UART_OEM:BUART:counter_load_not\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_OEM:BUART:tx_state_1\ * !\UART_OEM:BUART:tx_state_0\ * 
              \UART_OEM:BUART:tx_bitclk_enable_pre\
            + !\UART_OEM:BUART:tx_state_1\ * !\UART_OEM:BUART:tx_state_0\ * 
              !\UART_OEM:BUART:tx_state_2\
        );
        Output = \UART_OEM:BUART:counter_load_not\ (fanout=1)

    MacroCell: Name=\UART_OEM:BUART:tx_status_0\, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_OEM:BUART:tx_state_1\ * !\UART_OEM:BUART:tx_state_0\ * 
              \UART_OEM:BUART:tx_bitclk_enable_pre\ * 
              \UART_OEM:BUART:tx_fifo_empty\ * \UART_OEM:BUART:tx_state_2\
        );
        Output = \UART_OEM:BUART:tx_status_0\ (fanout=1)

    MacroCell: Name=\UART_OEM:BUART:tx_status_2\, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_OEM:BUART:tx_fifo_notfull\
        );
        Output = \UART_OEM:BUART:tx_status_2\ (fanout=1)

    MacroCell: Name=\UART_OEM:BUART:rx_counter_load\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\
        );
        Output = \UART_OEM:BUART:rx_counter_load\ (fanout=1)

    MacroCell: Name=\UART_OEM:BUART:rx_postpoll\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              Net_167 * MODIN3_0
            + MODIN3_1
        );
        Output = \UART_OEM:BUART:rx_postpoll\ (fanout=1)

    MacroCell: Name=\UART_OEM:BUART:rx_status_4\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_OEM:BUART:rx_load_fifo\ * \UART_OEM:BUART:rx_fifofull\
        );
        Output = \UART_OEM:BUART:rx_status_4\ (fanout=1)

    MacroCell: Name=\UART_OEM:BUART:rx_status_5\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_OEM:BUART:rx_fifonotempty\ * 
              \UART_OEM:BUART:rx_state_stop1_reg\
        );
        Output = \UART_OEM:BUART:rx_status_5\ (fanout=1)

    MacroCell: Name=Net_158, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_RPI:BUART:txn\
        );
        Output = Net_158 (fanout=1)

    MacroCell: Name=\UART_RPI:BUART:counter_load_not\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_RPI:BUART:tx_state_1\ * !\UART_RPI:BUART:tx_state_0\ * 
              \UART_RPI:BUART:tx_bitclk_enable_pre\
            + !\UART_RPI:BUART:tx_state_1\ * !\UART_RPI:BUART:tx_state_0\ * 
              !\UART_RPI:BUART:tx_state_2\
        );
        Output = \UART_RPI:BUART:counter_load_not\ (fanout=1)

    MacroCell: Name=\UART_RPI:BUART:tx_status_0\, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_RPI:BUART:tx_state_1\ * !\UART_RPI:BUART:tx_state_0\ * 
              \UART_RPI:BUART:tx_bitclk_enable_pre\ * 
              \UART_RPI:BUART:tx_fifo_empty\ * \UART_RPI:BUART:tx_state_2\
        );
        Output = \UART_RPI:BUART:tx_status_0\ (fanout=1)

    MacroCell: Name=\UART_RPI:BUART:tx_status_2\, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_RPI:BUART:tx_fifo_notfull\
        );
        Output = \UART_RPI:BUART:tx_status_2\ (fanout=1)

    MacroCell: Name=\UART_RPI:BUART:rx_counter_load\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\
        );
        Output = \UART_RPI:BUART:rx_counter_load\ (fanout=1)

    MacroCell: Name=\UART_RPI:BUART:rx_postpoll\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              Net_154 * MODIN7_0
            + MODIN7_1
        );
        Output = \UART_RPI:BUART:rx_postpoll\ (fanout=1)

    MacroCell: Name=\UART_RPI:BUART:rx_status_4\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_RPI:BUART:rx_load_fifo\ * \UART_RPI:BUART:rx_fifofull\
        );
        Output = \UART_RPI:BUART:rx_status_4\ (fanout=1)

    MacroCell: Name=\UART_RPI:BUART:rx_status_5\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_RPI:BUART:rx_fifonotempty\ * 
              \UART_RPI:BUART:rx_state_stop1_reg\
        );
        Output = \UART_RPI:BUART:rx_status_5\ (fanout=1)

    MacroCell: Name=Net_133, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_Debug:BUART:txn\
        );
        Output = Net_133 (fanout=1)

    MacroCell: Name=\UART_Debug:BUART:counter_load_not\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_Debug:BUART:tx_state_1\ * !\UART_Debug:BUART:tx_state_0\ * 
              \UART_Debug:BUART:tx_bitclk_enable_pre\
            + !\UART_Debug:BUART:tx_state_1\ * !\UART_Debug:BUART:tx_state_0\ * 
              !\UART_Debug:BUART:tx_state_2\
        );
        Output = \UART_Debug:BUART:counter_load_not\ (fanout=1)

    MacroCell: Name=\UART_Debug:BUART:tx_status_0\, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_Debug:BUART:tx_state_1\ * !\UART_Debug:BUART:tx_state_0\ * 
              \UART_Debug:BUART:tx_bitclk_enable_pre\ * 
              \UART_Debug:BUART:tx_fifo_empty\ * 
              \UART_Debug:BUART:tx_state_2\
        );
        Output = \UART_Debug:BUART:tx_status_0\ (fanout=1)

    MacroCell: Name=\UART_Debug:BUART:tx_status_2\, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_Debug:BUART:tx_fifo_notfull\
        );
        Output = \UART_Debug:BUART:tx_status_2\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * \ADC_TS410:ch_addr_5\
            + !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * \ADC_TS410:ch_addr_4\
            + !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * \ADC_TS410:ch_addr_3\
            + !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * \ADC_TS410:ch_addr_2\
            + \ADC_TS410:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\ADC_TS410:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_226 * !\ADC_TS410:bSAR_SEQ:load_period\
        );
        Output = \ADC_TS410:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=__ONE__, Mode=(Combinatorial)
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=2)

    MacroCell: Name=\UART_OEM:BUART:txn\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART_OEM:BUART:txn\ * \UART_OEM:BUART:tx_state_1\ * 
              !\UART_OEM:BUART:tx_bitclk\
            + \UART_OEM:BUART:txn\ * \UART_OEM:BUART:tx_state_2\
            + !\UART_OEM:BUART:tx_state_1\ * \UART_OEM:BUART:tx_state_0\ * 
              !\UART_OEM:BUART:tx_shift_out\ * !\UART_OEM:BUART:tx_state_2\
            + !\UART_OEM:BUART:tx_state_1\ * \UART_OEM:BUART:tx_state_0\ * 
              !\UART_OEM:BUART:tx_state_2\ * !\UART_OEM:BUART:tx_bitclk\
            + \UART_OEM:BUART:tx_state_1\ * !\UART_OEM:BUART:tx_state_0\ * 
              !\UART_OEM:BUART:tx_shift_out\ * !\UART_OEM:BUART:tx_state_2\ * 
              !\UART_OEM:BUART:tx_counter_dp\ * \UART_OEM:BUART:tx_bitclk\
        );
        Output = \UART_OEM:BUART:txn\ (fanout=2)

    MacroCell: Name=\UART_OEM:BUART:tx_state_1\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART_OEM:BUART:tx_state_1\ * \UART_OEM:BUART:tx_state_0\ * 
              \UART_OEM:BUART:tx_bitclk_enable_pre\ * 
              \UART_OEM:BUART:tx_state_2\
            + \UART_OEM:BUART:tx_state_1\ * !\UART_OEM:BUART:tx_state_2\ * 
              \UART_OEM:BUART:tx_counter_dp\ * \UART_OEM:BUART:tx_bitclk\
            + \UART_OEM:BUART:tx_state_0\ * !\UART_OEM:BUART:tx_state_2\ * 
              \UART_OEM:BUART:tx_bitclk\
        );
        Output = \UART_OEM:BUART:tx_state_1\ (fanout=8)

    MacroCell: Name=\UART_OEM:BUART:tx_state_0\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_OEM:BUART:tx_state_1\ * !\UART_OEM:BUART:tx_state_0\ * 
              \UART_OEM:BUART:tx_bitclk_enable_pre\ * 
              !\UART_OEM:BUART:tx_fifo_empty\
            + !\UART_OEM:BUART:tx_state_1\ * !\UART_OEM:BUART:tx_state_0\ * 
              !\UART_OEM:BUART:tx_fifo_empty\ * !\UART_OEM:BUART:tx_state_2\
            + \UART_OEM:BUART:tx_state_1\ * \UART_OEM:BUART:tx_state_0\ * 
              \UART_OEM:BUART:tx_bitclk_enable_pre\ * 
              \UART_OEM:BUART:tx_fifo_empty\ * \UART_OEM:BUART:tx_state_2\
            + \UART_OEM:BUART:tx_state_0\ * !\UART_OEM:BUART:tx_state_2\ * 
              \UART_OEM:BUART:tx_bitclk\
        );
        Output = \UART_OEM:BUART:tx_state_0\ (fanout=8)

    MacroCell: Name=\UART_OEM:BUART:tx_state_2\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_OEM:BUART:tx_state_1\ * !\UART_OEM:BUART:tx_state_0\ * 
              \UART_OEM:BUART:tx_bitclk_enable_pre\ * 
              \UART_OEM:BUART:tx_state_2\
            + \UART_OEM:BUART:tx_state_1\ * \UART_OEM:BUART:tx_state_0\ * 
              \UART_OEM:BUART:tx_bitclk_enable_pre\ * 
              \UART_OEM:BUART:tx_state_2\
            + \UART_OEM:BUART:tx_state_1\ * \UART_OEM:BUART:tx_state_0\ * 
              !\UART_OEM:BUART:tx_state_2\ * \UART_OEM:BUART:tx_bitclk\
            + \UART_OEM:BUART:tx_state_1\ * !\UART_OEM:BUART:tx_state_2\ * 
              \UART_OEM:BUART:tx_counter_dp\ * \UART_OEM:BUART:tx_bitclk\
        );
        Output = \UART_OEM:BUART:tx_state_2\ (fanout=7)

    MacroCell: Name=\UART_OEM:BUART:tx_bitclk\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_OEM:BUART:tx_state_1\ * !\UART_OEM:BUART:tx_state_0\ * 
              \UART_OEM:BUART:tx_state_2\
            + !\UART_OEM:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART_OEM:BUART:tx_bitclk\ (fanout=4)

    MacroCell: Name=\UART_OEM:BUART:tx_ctrl_mark_last\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_OEM:BUART:tx_ctrl_mark_last\ (fanout=9)

    MacroCell: Name=\UART_OEM:BUART:rx_state_0\, Mode=(T-Register)
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !Net_167 * !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * 
              \UART_OEM:BUART:rx_bitclk_enable\ * 
              !\UART_OEM:BUART:rx_state_3\ * \UART_OEM:BUART:rx_state_2\ * 
              !MODIN3_1
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * 
              \UART_OEM:BUART:rx_bitclk_enable\ * 
              !\UART_OEM:BUART:rx_state_3\ * \UART_OEM:BUART:rx_state_2\ * 
              !MODIN3_1 * !MODIN3_0
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              \UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN6_6
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              \UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN6_5
        );
        Output = \UART_OEM:BUART:rx_state_0\ (fanout=9)

    MacroCell: Name=\UART_OEM:BUART:rx_load_fifo\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * 
              \UART_OEM:BUART:rx_bitclk_enable\ * \UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              \UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN6_6
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              \UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN6_5
        );
        Output = \UART_OEM:BUART:rx_load_fifo\ (fanout=2)

    MacroCell: Name=\UART_OEM:BUART:rx_state_3\, Mode=(T-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * 
              \UART_OEM:BUART:rx_bitclk_enable\ * \UART_OEM:BUART:rx_state_3\ * 
              \UART_OEM:BUART:rx_state_2\
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              \UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN6_6
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              \UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN6_5
        );
        Output = \UART_OEM:BUART:rx_state_3\ (fanout=8)

    MacroCell: Name=\UART_OEM:BUART:rx_state_2\, Mode=(T-Register)
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !Net_167 * !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\ * \UART_OEM:BUART:rx_last\
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * 
              \UART_OEM:BUART:rx_bitclk_enable\ * \UART_OEM:BUART:rx_state_3\
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * 
              \UART_OEM:BUART:rx_bitclk_enable\ * \UART_OEM:BUART:rx_state_2\
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              \UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN6_6
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              \UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN6_5
        );
        Output = \UART_OEM:BUART:rx_state_2\ (fanout=8)

    MacroCell: Name=\UART_OEM:BUART:rx_count7_bit8_wire\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\
            + !\UART_OEM:BUART:rx_count7_tc\ * 
              !\UART_OEM:BUART:rx_count7_bit8_wire\
        );
        Output = \UART_OEM:BUART:rx_count7_bit8_wire\ (fanout=9)

    MacroCell: Name=\UART_OEM:BUART:rx_bitclk_enable\, Mode=(D-Register)
        Total # of inputs        : 5
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART_OEM:BUART:rx_count_3\ * !\UART_OEM:BUART:rx_count_2\ * 
              !\UART_OEM:BUART:rx_count_1\ * !\UART_OEM:BUART:rx_count_0\ * 
              !\UART_OEM:BUART:rx_count7_bit8_wire\
            + !\UART_OEM:BUART:rx_count_3\ * \UART_OEM:BUART:rx_count_2\ * 
              \UART_OEM:BUART:rx_count_1\ * \UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\
        );
        Output = \UART_OEM:BUART:rx_bitclk_enable\ (fanout=6)

    MacroCell: Name=\UART_OEM:BUART:rx_state_stop1_reg\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * \UART_OEM:BUART:rx_state_3\ * 
              \UART_OEM:BUART:rx_state_2\
        );
        Output = \UART_OEM:BUART:rx_state_stop1_reg\ (fanout=1)

    MacroCell: Name=MODIN3_1, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_167 * !\UART_OEM:BUART:rx_count_3\ * 
              !\UART_OEM:BUART:rx_count_2\ * !\UART_OEM:BUART:rx_count_1\ * 
              !\UART_OEM:BUART:rx_count7_bit8_wire\ * MODIN3_1
            + MODIN3_1_split
        );
        Output = MODIN3_1 (fanout=5)

    MacroCell: Name=MODIN3_0, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 6
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 6 pterms
        (
              !Net_167 * !\UART_OEM:BUART:rx_count_3\ * 
              !\UART_OEM:BUART:rx_count_2\ * !\UART_OEM:BUART:rx_count_1\ * 
              !\UART_OEM:BUART:rx_count7_bit8_wire\ * MODIN3_0
            + !Net_167 * !\UART_OEM:BUART:rx_count_3\ * 
              \UART_OEM:BUART:rx_count_2\ * \UART_OEM:BUART:rx_count_1\ * 
              \UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * MODIN3_0
            + !Net_167 * \UART_OEM:BUART:rx_count_3\ * 
              !\UART_OEM:BUART:rx_count_2\ * !\UART_OEM:BUART:rx_count_1\ * 
              !\UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * MODIN3_0
            + Net_167 * !\UART_OEM:BUART:rx_count_3\ * 
              !\UART_OEM:BUART:rx_count_2\ * !\UART_OEM:BUART:rx_count_1\ * 
              !\UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN3_0
            + Net_167 * !\UART_OEM:BUART:rx_count_3\ * 
              \UART_OEM:BUART:rx_count_2\ * \UART_OEM:BUART:rx_count_1\ * 
              \UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN3_0
            + Net_167 * \UART_OEM:BUART:rx_count_3\ * 
              !\UART_OEM:BUART:rx_count_2\ * !\UART_OEM:BUART:rx_count_1\ * 
              !\UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN3_0
        );
        Output = MODIN3_0 (fanout=5)

    MacroCell: Name=\UART_OEM:BUART:rx_status_3\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_167 * !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * 
              \UART_OEM:BUART:rx_bitclk_enable\ * \UART_OEM:BUART:rx_state_3\ * 
              \UART_OEM:BUART:rx_state_2\ * !MODIN3_1
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * 
              \UART_OEM:BUART:rx_bitclk_enable\ * \UART_OEM:BUART:rx_state_3\ * 
              \UART_OEM:BUART:rx_state_2\ * !MODIN3_1 * !MODIN3_0
        );
        Output = \UART_OEM:BUART:rx_status_3\ (fanout=1)

    MacroCell: Name=\UART_OEM:BUART:rx_last\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_167
        );
        Output = \UART_OEM:BUART:rx_last\ (fanout=1)

    MacroCell: Name=\UART_RPI:BUART:txn\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART_RPI:BUART:txn\ * \UART_RPI:BUART:tx_state_1\ * 
              !\UART_RPI:BUART:tx_bitclk\
            + \UART_RPI:BUART:txn\ * \UART_RPI:BUART:tx_state_2\
            + !\UART_RPI:BUART:tx_state_1\ * \UART_RPI:BUART:tx_state_0\ * 
              !\UART_RPI:BUART:tx_shift_out\ * !\UART_RPI:BUART:tx_state_2\
            + !\UART_RPI:BUART:tx_state_1\ * \UART_RPI:BUART:tx_state_0\ * 
              !\UART_RPI:BUART:tx_state_2\ * !\UART_RPI:BUART:tx_bitclk\
            + \UART_RPI:BUART:tx_state_1\ * !\UART_RPI:BUART:tx_state_0\ * 
              !\UART_RPI:BUART:tx_shift_out\ * !\UART_RPI:BUART:tx_state_2\ * 
              !\UART_RPI:BUART:tx_counter_dp\ * \UART_RPI:BUART:tx_bitclk\
        );
        Output = \UART_RPI:BUART:txn\ (fanout=2)

    MacroCell: Name=\UART_RPI:BUART:tx_state_1\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART_RPI:BUART:tx_state_1\ * \UART_RPI:BUART:tx_state_0\ * 
              \UART_RPI:BUART:tx_bitclk_enable_pre\ * 
              \UART_RPI:BUART:tx_state_2\
            + \UART_RPI:BUART:tx_state_1\ * !\UART_RPI:BUART:tx_state_2\ * 
              \UART_RPI:BUART:tx_counter_dp\ * \UART_RPI:BUART:tx_bitclk\
            + \UART_RPI:BUART:tx_state_0\ * !\UART_RPI:BUART:tx_state_2\ * 
              \UART_RPI:BUART:tx_bitclk\
        );
        Output = \UART_RPI:BUART:tx_state_1\ (fanout=8)

    MacroCell: Name=\UART_RPI:BUART:tx_state_0\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_RPI:BUART:tx_state_1\ * !\UART_RPI:BUART:tx_state_0\ * 
              \UART_RPI:BUART:tx_bitclk_enable_pre\ * 
              !\UART_RPI:BUART:tx_fifo_empty\
            + !\UART_RPI:BUART:tx_state_1\ * !\UART_RPI:BUART:tx_state_0\ * 
              !\UART_RPI:BUART:tx_fifo_empty\ * !\UART_RPI:BUART:tx_state_2\
            + \UART_RPI:BUART:tx_state_1\ * \UART_RPI:BUART:tx_state_0\ * 
              \UART_RPI:BUART:tx_bitclk_enable_pre\ * 
              \UART_RPI:BUART:tx_fifo_empty\ * \UART_RPI:BUART:tx_state_2\
            + \UART_RPI:BUART:tx_state_0\ * !\UART_RPI:BUART:tx_state_2\ * 
              \UART_RPI:BUART:tx_bitclk\
        );
        Output = \UART_RPI:BUART:tx_state_0\ (fanout=8)

    MacroCell: Name=\UART_RPI:BUART:tx_state_2\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_RPI:BUART:tx_state_1\ * !\UART_RPI:BUART:tx_state_0\ * 
              \UART_RPI:BUART:tx_bitclk_enable_pre\ * 
              \UART_RPI:BUART:tx_state_2\
            + \UART_RPI:BUART:tx_state_1\ * \UART_RPI:BUART:tx_state_0\ * 
              \UART_RPI:BUART:tx_bitclk_enable_pre\ * 
              \UART_RPI:BUART:tx_state_2\
            + \UART_RPI:BUART:tx_state_1\ * \UART_RPI:BUART:tx_state_0\ * 
              !\UART_RPI:BUART:tx_state_2\ * \UART_RPI:BUART:tx_bitclk\
            + \UART_RPI:BUART:tx_state_1\ * !\UART_RPI:BUART:tx_state_2\ * 
              \UART_RPI:BUART:tx_counter_dp\ * \UART_RPI:BUART:tx_bitclk\
        );
        Output = \UART_RPI:BUART:tx_state_2\ (fanout=7)

    MacroCell: Name=\UART_RPI:BUART:tx_bitclk\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_RPI:BUART:tx_state_1\ * !\UART_RPI:BUART:tx_state_0\ * 
              \UART_RPI:BUART:tx_state_2\
            + !\UART_RPI:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART_RPI:BUART:tx_bitclk\ (fanout=4)

    MacroCell: Name=\UART_RPI:BUART:tx_ctrl_mark_last\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_RPI:BUART:tx_ctrl_mark_last\ (fanout=9)

    MacroCell: Name=\UART_RPI:BUART:rx_state_0\, Mode=(T-Register)
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !Net_154 * !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * 
              \UART_RPI:BUART:rx_bitclk_enable\ * 
              !\UART_RPI:BUART:rx_state_3\ * \UART_RPI:BUART:rx_state_2\ * 
              !MODIN7_1
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * 
              \UART_RPI:BUART:rx_bitclk_enable\ * 
              !\UART_RPI:BUART:rx_state_3\ * \UART_RPI:BUART:rx_state_2\ * 
              !MODIN7_1 * !MODIN7_0
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              \UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN10_6
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              \UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN10_5
        );
        Output = \UART_RPI:BUART:rx_state_0\ (fanout=9)

    MacroCell: Name=\UART_RPI:BUART:rx_load_fifo\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * 
              \UART_RPI:BUART:rx_bitclk_enable\ * \UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              \UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN10_6
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              \UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN10_5
        );
        Output = \UART_RPI:BUART:rx_load_fifo\ (fanout=2)

    MacroCell: Name=\UART_RPI:BUART:rx_state_3\, Mode=(T-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * 
              \UART_RPI:BUART:rx_bitclk_enable\ * \UART_RPI:BUART:rx_state_3\ * 
              \UART_RPI:BUART:rx_state_2\
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              \UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN10_6
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              \UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN10_5
        );
        Output = \UART_RPI:BUART:rx_state_3\ (fanout=8)

    MacroCell: Name=\UART_RPI:BUART:rx_state_2\, Mode=(T-Register)
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !Net_154 * !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\ * \UART_RPI:BUART:rx_last\
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * 
              \UART_RPI:BUART:rx_bitclk_enable\ * \UART_RPI:BUART:rx_state_3\
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * 
              \UART_RPI:BUART:rx_bitclk_enable\ * \UART_RPI:BUART:rx_state_2\
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              \UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN10_6
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              \UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN10_5
        );
        Output = \UART_RPI:BUART:rx_state_2\ (fanout=8)

    MacroCell: Name=\UART_RPI:BUART:rx_count7_bit8_wire\, Mode=(D-Register)
        Total # of inputs        : 6
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\
            + !\UART_RPI:BUART:rx_count7_tc\ * 
              !\UART_RPI:BUART:rx_count7_bit8_wire\
        );
        Output = \UART_RPI:BUART:rx_count7_bit8_wire\ (fanout=9)

    MacroCell: Name=\UART_RPI:BUART:rx_bitclk_enable\, Mode=(D-Register)
        Total # of inputs        : 5
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART_RPI:BUART:rx_count_3\ * !\UART_RPI:BUART:rx_count_2\ * 
              !\UART_RPI:BUART:rx_count_1\ * !\UART_RPI:BUART:rx_count_0\ * 
              !\UART_RPI:BUART:rx_count7_bit8_wire\
            + !\UART_RPI:BUART:rx_count_3\ * \UART_RPI:BUART:rx_count_2\ * 
              \UART_RPI:BUART:rx_count_1\ * \UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\
        );
        Output = \UART_RPI:BUART:rx_bitclk_enable\ (fanout=6)

    MacroCell: Name=\UART_RPI:BUART:rx_state_stop1_reg\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * \UART_RPI:BUART:rx_state_3\ * 
              \UART_RPI:BUART:rx_state_2\
        );
        Output = \UART_RPI:BUART:rx_state_stop1_reg\ (fanout=1)

    MacroCell: Name=MODIN7_1, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_154 * !\UART_RPI:BUART:rx_count_3\ * 
              !\UART_RPI:BUART:rx_count_2\ * !\UART_RPI:BUART:rx_count_1\ * 
              !\UART_RPI:BUART:rx_count7_bit8_wire\ * MODIN7_1
            + MODIN7_1_split
        );
        Output = MODIN7_1 (fanout=5)

    MacroCell: Name=MODIN7_0, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 6
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 6 pterms
        (
              !Net_154 * !\UART_RPI:BUART:rx_count_3\ * 
              !\UART_RPI:BUART:rx_count_2\ * !\UART_RPI:BUART:rx_count_1\ * 
              !\UART_RPI:BUART:rx_count7_bit8_wire\ * MODIN7_0
            + !Net_154 * !\UART_RPI:BUART:rx_count_3\ * 
              \UART_RPI:BUART:rx_count_2\ * \UART_RPI:BUART:rx_count_1\ * 
              \UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * MODIN7_0
            + !Net_154 * \UART_RPI:BUART:rx_count_3\ * 
              !\UART_RPI:BUART:rx_count_2\ * !\UART_RPI:BUART:rx_count_1\ * 
              !\UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * MODIN7_0
            + Net_154 * !\UART_RPI:BUART:rx_count_3\ * 
              !\UART_RPI:BUART:rx_count_2\ * !\UART_RPI:BUART:rx_count_1\ * 
              !\UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN7_0
            + Net_154 * !\UART_RPI:BUART:rx_count_3\ * 
              \UART_RPI:BUART:rx_count_2\ * \UART_RPI:BUART:rx_count_1\ * 
              \UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN7_0
            + Net_154 * \UART_RPI:BUART:rx_count_3\ * 
              !\UART_RPI:BUART:rx_count_2\ * !\UART_RPI:BUART:rx_count_1\ * 
              !\UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN7_0
        );
        Output = MODIN7_0 (fanout=5)

    MacroCell: Name=MODIN7_1_split, Mode=(Combinatorial)
        Total # of inputs        : 8
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              !Net_154 * !\UART_RPI:BUART:rx_count_3\ * 
              \UART_RPI:BUART:rx_count_2\ * \UART_RPI:BUART:rx_count_1\ * 
              \UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * MODIN7_1
            + !Net_154 * \UART_RPI:BUART:rx_count_3\ * 
              !\UART_RPI:BUART:rx_count_2\ * !\UART_RPI:BUART:rx_count_1\ * 
              !\UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * MODIN7_1
            + Net_154 * !\UART_RPI:BUART:rx_count_3\ * 
              !\UART_RPI:BUART:rx_count_2\ * !\UART_RPI:BUART:rx_count_1\ * 
              !\UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN7_1 * MODIN7_0
            + Net_154 * !\UART_RPI:BUART:rx_count_3\ * 
              \UART_RPI:BUART:rx_count_2\ * \UART_RPI:BUART:rx_count_1\ * 
              \UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN7_1 * MODIN7_0
            + Net_154 * \UART_RPI:BUART:rx_count_3\ * 
              !\UART_RPI:BUART:rx_count_2\ * !\UART_RPI:BUART:rx_count_1\ * 
              !\UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN7_1 * MODIN7_0
            + !\UART_RPI:BUART:rx_count_3\ * !\UART_RPI:BUART:rx_count_2\ * 
              !\UART_RPI:BUART:rx_count_1\ * 
              !\UART_RPI:BUART:rx_count7_bit8_wire\ * MODIN7_1 * !MODIN7_0
            + !\UART_RPI:BUART:rx_count_3\ * \UART_RPI:BUART:rx_count_2\ * 
              \UART_RPI:BUART:rx_count_1\ * \UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * MODIN7_1 * !MODIN7_0
            + \UART_RPI:BUART:rx_count_3\ * !\UART_RPI:BUART:rx_count_2\ * 
              !\UART_RPI:BUART:rx_count_1\ * !\UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * MODIN7_1 * !MODIN7_0
        );
        Output = MODIN7_1_split (fanout=1)

    MacroCell: Name=\UART_RPI:BUART:rx_status_3\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_154 * !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * 
              \UART_RPI:BUART:rx_bitclk_enable\ * \UART_RPI:BUART:rx_state_3\ * 
              \UART_RPI:BUART:rx_state_2\ * !MODIN7_1
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * 
              \UART_RPI:BUART:rx_bitclk_enable\ * \UART_RPI:BUART:rx_state_3\ * 
              \UART_RPI:BUART:rx_state_2\ * !MODIN7_1 * !MODIN7_0
        );
        Output = \UART_RPI:BUART:rx_status_3\ (fanout=1)

    MacroCell: Name=\UART_RPI:BUART:rx_last\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_154
        );
        Output = \UART_RPI:BUART:rx_last\ (fanout=1)

    MacroCell: Name=MODIN3_1_split, Mode=(Combinatorial)
        Total # of inputs        : 8
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              !Net_167 * !\UART_OEM:BUART:rx_count_3\ * 
              \UART_OEM:BUART:rx_count_2\ * \UART_OEM:BUART:rx_count_1\ * 
              \UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * MODIN3_1
            + !Net_167 * \UART_OEM:BUART:rx_count_3\ * 
              !\UART_OEM:BUART:rx_count_2\ * !\UART_OEM:BUART:rx_count_1\ * 
              !\UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * MODIN3_1
            + Net_167 * !\UART_OEM:BUART:rx_count_3\ * 
              !\UART_OEM:BUART:rx_count_2\ * !\UART_OEM:BUART:rx_count_1\ * 
              !\UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN3_1 * MODIN3_0
            + Net_167 * !\UART_OEM:BUART:rx_count_3\ * 
              \UART_OEM:BUART:rx_count_2\ * \UART_OEM:BUART:rx_count_1\ * 
              \UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN3_1 * MODIN3_0
            + Net_167 * \UART_OEM:BUART:rx_count_3\ * 
              !\UART_OEM:BUART:rx_count_2\ * !\UART_OEM:BUART:rx_count_1\ * 
              !\UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN3_1 * MODIN3_0
            + !\UART_OEM:BUART:rx_count_3\ * !\UART_OEM:BUART:rx_count_2\ * 
              !\UART_OEM:BUART:rx_count_1\ * 
              !\UART_OEM:BUART:rx_count7_bit8_wire\ * MODIN3_1 * !MODIN3_0
            + !\UART_OEM:BUART:rx_count_3\ * \UART_OEM:BUART:rx_count_2\ * 
              \UART_OEM:BUART:rx_count_1\ * \UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * MODIN3_1 * !MODIN3_0
            + \UART_OEM:BUART:rx_count_3\ * !\UART_OEM:BUART:rx_count_2\ * 
              !\UART_OEM:BUART:rx_count_1\ * !\UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * MODIN3_1 * !MODIN3_0
        );
        Output = MODIN3_1_split (fanout=1)

    MacroCell: Name=\UART_Debug:BUART:txn\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_Debug:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART_Debug:BUART:txn\ * \UART_Debug:BUART:tx_state_1\ * 
              !\UART_Debug:BUART:tx_bitclk\
            + \UART_Debug:BUART:txn\ * \UART_Debug:BUART:tx_state_2\
            + !\UART_Debug:BUART:tx_state_1\ * \UART_Debug:BUART:tx_state_0\ * 
              !\UART_Debug:BUART:tx_shift_out\ * 
              !\UART_Debug:BUART:tx_state_2\
            + !\UART_Debug:BUART:tx_state_1\ * \UART_Debug:BUART:tx_state_0\ * 
              !\UART_Debug:BUART:tx_state_2\ * !\UART_Debug:BUART:tx_bitclk\
            + \UART_Debug:BUART:tx_state_1\ * !\UART_Debug:BUART:tx_state_0\ * 
              !\UART_Debug:BUART:tx_shift_out\ * 
              !\UART_Debug:BUART:tx_state_2\ * 
              !\UART_Debug:BUART:tx_counter_dp\ * 
              \UART_Debug:BUART:tx_bitclk\
        );
        Output = \UART_Debug:BUART:txn\ (fanout=2)

    MacroCell: Name=\UART_Debug:BUART:tx_state_1\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_Debug:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART_Debug:BUART:tx_state_1\ * \UART_Debug:BUART:tx_state_0\ * 
              \UART_Debug:BUART:tx_bitclk_enable_pre\ * 
              \UART_Debug:BUART:tx_state_2\
            + \UART_Debug:BUART:tx_state_1\ * !\UART_Debug:BUART:tx_state_2\ * 
              \UART_Debug:BUART:tx_counter_dp\ * \UART_Debug:BUART:tx_bitclk\
            + \UART_Debug:BUART:tx_state_0\ * !\UART_Debug:BUART:tx_state_2\ * 
              \UART_Debug:BUART:tx_bitclk\
        );
        Output = \UART_Debug:BUART:tx_state_1\ (fanout=8)

    MacroCell: Name=\UART_Debug:BUART:tx_state_0\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_Debug:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_Debug:BUART:tx_state_1\ * !\UART_Debug:BUART:tx_state_0\ * 
              \UART_Debug:BUART:tx_bitclk_enable_pre\ * 
              !\UART_Debug:BUART:tx_fifo_empty\
            + !\UART_Debug:BUART:tx_state_1\ * !\UART_Debug:BUART:tx_state_0\ * 
              !\UART_Debug:BUART:tx_fifo_empty\ * 
              !\UART_Debug:BUART:tx_state_2\
            + \UART_Debug:BUART:tx_state_1\ * \UART_Debug:BUART:tx_state_0\ * 
              \UART_Debug:BUART:tx_bitclk_enable_pre\ * 
              \UART_Debug:BUART:tx_fifo_empty\ * 
              \UART_Debug:BUART:tx_state_2\
            + \UART_Debug:BUART:tx_state_0\ * !\UART_Debug:BUART:tx_state_2\ * 
              \UART_Debug:BUART:tx_bitclk\
        );
        Output = \UART_Debug:BUART:tx_state_0\ (fanout=8)

    MacroCell: Name=\UART_Debug:BUART:tx_state_2\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_Debug:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_Debug:BUART:tx_state_1\ * !\UART_Debug:BUART:tx_state_0\ * 
              \UART_Debug:BUART:tx_bitclk_enable_pre\ * 
              \UART_Debug:BUART:tx_state_2\
            + \UART_Debug:BUART:tx_state_1\ * \UART_Debug:BUART:tx_state_0\ * 
              \UART_Debug:BUART:tx_bitclk_enable_pre\ * 
              \UART_Debug:BUART:tx_state_2\
            + \UART_Debug:BUART:tx_state_1\ * \UART_Debug:BUART:tx_state_0\ * 
              !\UART_Debug:BUART:tx_state_2\ * \UART_Debug:BUART:tx_bitclk\
            + \UART_Debug:BUART:tx_state_1\ * !\UART_Debug:BUART:tx_state_2\ * 
              \UART_Debug:BUART:tx_counter_dp\ * \UART_Debug:BUART:tx_bitclk\
        );
        Output = \UART_Debug:BUART:tx_state_2\ (fanout=7)

    MacroCell: Name=\UART_Debug:BUART:tx_bitclk\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_Debug:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_Debug:BUART:tx_state_1\ * !\UART_Debug:BUART:tx_state_0\ * 
              \UART_Debug:BUART:tx_state_2\
            + !\UART_Debug:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART_Debug:BUART:tx_bitclk\ (fanout=4)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:ch_addr_5\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:ch_addr_4\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:ch_addr_3\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:ch_addr_2\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:ch_addr_1\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:ch_addr_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_227, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: PosEdge(\ADC_TS410:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_TS410:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_TS410:bSAR_SEQ:nrq_reg\
        );
        Output = Net_227 (fanout=3)

    MacroCell: Name=\ADC_TS410:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_TS410:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_227
            + \ADC_TS410:Net_3935\
        );
        Output = \ADC_TS410:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\ADC_TS410:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: PosEdge(\ADC_TS410:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_TS410:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_TS410:bSAR_SEQ:nrq_reg\ (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\UART_OEM:BUART:sTX:TxShifter:u0\
        PORT MAP (
            clock => \UART_OEM:Net_9\ ,
            cs_addr_2 => \UART_OEM:BUART:tx_state_1\ ,
            cs_addr_1 => \UART_OEM:BUART:tx_state_0\ ,
            cs_addr_0 => \UART_OEM:BUART:tx_bitclk_enable_pre\ ,
            so_comb => \UART_OEM:BUART:tx_shift_out\ ,
            f0_bus_stat_comb => \UART_OEM:BUART:tx_fifo_notfull\ ,
            f0_blk_stat_comb => \UART_OEM:BUART:tx_fifo_empty\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART_OEM:BUART:sTX:sCLOCK:TxBitClkGen\
        PORT MAP (
            clock => \UART_OEM:Net_9\ ,
            cs_addr_0 => \UART_OEM:BUART:counter_load_not\ ,
            ce0_reg => \UART_OEM:BUART:tx_bitclk_enable_pre\ ,
            ce1_reg => \UART_OEM:BUART:tx_counter_dp\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100001111001000000100000000000101111100000000000000001000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART_OEM:BUART:sRX:RxShifter:u0\
        PORT MAP (
            clock => \UART_OEM:Net_9\ ,
            cs_addr_2 => \UART_OEM:BUART:tx_ctrl_mark_last\ ,
            cs_addr_1 => \UART_OEM:BUART:rx_state_0\ ,
            cs_addr_0 => \UART_OEM:BUART:rx_bitclk_enable\ ,
            route_si => \UART_OEM:BUART:rx_postpoll\ ,
            f0_load => \UART_OEM:BUART:rx_load_fifo\ ,
            f0_bus_stat_comb => \UART_OEM:BUART:rx_fifonotempty\ ,
            f0_blk_stat_comb => \UART_OEM:BUART:rx_fifofull\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART_RPI:BUART:sTX:TxShifter:u0\
        PORT MAP (
            clock => \UART_RPI:Net_9\ ,
            cs_addr_2 => \UART_RPI:BUART:tx_state_1\ ,
            cs_addr_1 => \UART_RPI:BUART:tx_state_0\ ,
            cs_addr_0 => \UART_RPI:BUART:tx_bitclk_enable_pre\ ,
            so_comb => \UART_RPI:BUART:tx_shift_out\ ,
            f0_bus_stat_comb => \UART_RPI:BUART:tx_fifo_notfull\ ,
            f0_blk_stat_comb => \UART_RPI:BUART:tx_fifo_empty\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART_RPI:BUART:sTX:sCLOCK:TxBitClkGen\
        PORT MAP (
            clock => \UART_RPI:Net_9\ ,
            cs_addr_0 => \UART_RPI:BUART:counter_load_not\ ,
            ce0_reg => \UART_RPI:BUART:tx_bitclk_enable_pre\ ,
            ce1_reg => \UART_RPI:BUART:tx_counter_dp\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100001111001000000100000000000101111100000000000000001000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART_RPI:BUART:sRX:RxShifter:u0\
        PORT MAP (
            clock => \UART_RPI:Net_9\ ,
            cs_addr_2 => \UART_RPI:BUART:tx_ctrl_mark_last\ ,
            cs_addr_1 => \UART_RPI:BUART:rx_state_0\ ,
            cs_addr_0 => \UART_RPI:BUART:rx_bitclk_enable\ ,
            route_si => \UART_RPI:BUART:rx_postpoll\ ,
            f0_load => \UART_RPI:BUART:rx_load_fifo\ ,
            f0_bus_stat_comb => \UART_RPI:BUART:rx_fifonotempty\ ,
            f0_blk_stat_comb => \UART_RPI:BUART:rx_fifofull\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART_Debug:BUART:sTX:TxShifter:u0\
        PORT MAP (
            clock => \UART_Debug:Net_9\ ,
            cs_addr_2 => \UART_Debug:BUART:tx_state_1\ ,
            cs_addr_1 => \UART_Debug:BUART:tx_state_0\ ,
            cs_addr_0 => \UART_Debug:BUART:tx_bitclk_enable_pre\ ,
            so_comb => \UART_Debug:BUART:tx_shift_out\ ,
            f0_bus_stat_comb => \UART_Debug:BUART:tx_fifo_notfull\ ,
            f0_blk_stat_comb => \UART_Debug:BUART:tx_fifo_empty\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\UART_Debug:BUART:sTX:sCLOCK:TxBitClkGen\
        PORT MAP (
            clock => \UART_Debug:Net_9\ ,
            cs_addr_0 => \UART_Debug:BUART:counter_load_not\ ,
            ce0_reg => \UART_Debug:BUART:tx_bitclk_enable_pre\ ,
            ce1_reg => \UART_Debug:BUART:tx_counter_dp\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100001111001000000100000000000101111100000000000000001000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\ADC_TS410:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \ADC_TS410:clock\ ,
            status_0 => Net_227 ,
            clk_en => \ADC_TS410:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_TS410:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\UART_OEM:BUART:sTX:TxSts\
        PORT MAP (
            clock => \UART_OEM:Net_9\ ,
            status_3 => \UART_OEM:BUART:tx_fifo_notfull\ ,
            status_2 => \UART_OEM:BUART:tx_status_2\ ,
            status_1 => \UART_OEM:BUART:tx_fifo_empty\ ,
            status_0 => \UART_OEM:BUART:tx_status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0000001"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\UART_OEM:BUART:sRX:RxSts\
        PORT MAP (
            clock => \UART_OEM:Net_9\ ,
            status_5 => \UART_OEM:BUART:rx_status_5\ ,
            status_4 => \UART_OEM:BUART:rx_status_4\ ,
            status_3 => \UART_OEM:BUART:rx_status_3\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "1011111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\UART_RPI:BUART:sTX:TxSts\
        PORT MAP (
            clock => \UART_RPI:Net_9\ ,
            status_3 => \UART_RPI:BUART:tx_fifo_notfull\ ,
            status_2 => \UART_RPI:BUART:tx_status_2\ ,
            status_1 => \UART_RPI:BUART:tx_fifo_empty\ ,
            status_0 => \UART_RPI:BUART:tx_status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0000001"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\UART_RPI:BUART:sRX:RxSts\
        PORT MAP (
            clock => \UART_RPI:Net_9\ ,
            status_5 => \UART_RPI:BUART:rx_status_5\ ,
            status_4 => \UART_RPI:BUART:rx_status_4\ ,
            status_3 => \UART_RPI:BUART:rx_status_3\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "1011111"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\UART_Debug:BUART:sTX:TxSts\
        PORT MAP (
            clock => \UART_Debug:Net_9\ ,
            status_3 => \UART_Debug:BUART:tx_fifo_notfull\ ,
            status_2 => \UART_Debug:BUART:tx_status_2\ ,
            status_1 => \UART_Debug:BUART:tx_fifo_empty\ ,
            status_0 => \UART_Debug:BUART:tx_status_0\ );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0000001"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\ADC_TS410:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \ADC_TS410:nrq\ ,
            out => \ADC_TS410:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\ADC_TS410:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \ADC_TS410:clock\ ,
            control_7 => \ADC_TS410:bSAR_SEQ:control_7\ ,
            control_6 => \ADC_TS410:bSAR_SEQ:control_6\ ,
            control_5 => \ADC_TS410:bSAR_SEQ:control_5\ ,
            control_4 => \ADC_TS410:bSAR_SEQ:control_4\ ,
            control_3 => \ADC_TS410:bSAR_SEQ:control_3\ ,
            control_2 => \ADC_TS410:bSAR_SEQ:control_2\ ,
            control_1 => \ADC_TS410:bSAR_SEQ:load_period\ ,
            control_0 => \ADC_TS410:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\UART_OEM:BUART:sRX:RxBitCounter\
        PORT MAP (
            clock => \UART_OEM:Net_9\ ,
            load => \UART_OEM:BUART:rx_counter_load\ ,
            count_6 => MODIN6_6 ,
            count_5 => MODIN6_5 ,
            count_4 => MODIN6_4 ,
            count_3 => \UART_OEM:BUART:rx_count_3\ ,
            count_2 => \UART_OEM:BUART:rx_count_2\ ,
            count_1 => \UART_OEM:BUART:rx_count_1\ ,
            count_0 => \UART_OEM:BUART:rx_count_0\ ,
            tc => \UART_OEM:BUART:rx_count7_tc\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "1110110"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    count7cell: Name =\UART_RPI:BUART:sRX:RxBitCounter\
        PORT MAP (
            clock => \UART_RPI:Net_9\ ,
            load => \UART_RPI:BUART:rx_counter_load\ ,
            count_6 => MODIN10_6 ,
            count_5 => MODIN10_5 ,
            count_4 => MODIN10_4 ,
            count_3 => \UART_RPI:BUART:rx_count_3\ ,
            count_2 => \UART_RPI:BUART:rx_count_2\ ,
            count_1 => \UART_RPI:BUART:rx_count_1\ ,
            count_0 => \UART_RPI:BUART:rx_count_0\ ,
            tc => \UART_RPI:BUART:rx_count7_tc\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "1110110"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    count7cell: Name =\ADC_TS410:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \ADC_TS410:clock\ ,
            load => \ADC_TS410:bSAR_SEQ:load_period\ ,
            enable => \ADC_TS410:bSAR_SEQ:cnt_enable\ ,
            count_6 => \ADC_TS410:bSAR_SEQ:count_6\ ,
            count_5 => \ADC_TS410:ch_addr_5\ ,
            count_4 => \ADC_TS410:ch_addr_4\ ,
            count_3 => \ADC_TS410:ch_addr_3\ ,
            count_2 => \ADC_TS410:ch_addr_2\ ,
            count_1 => \ADC_TS410:ch_addr_1\ ,
            count_0 => \ADC_TS410:ch_addr_0\ ,
            tc => \ADC_TS410:bSAR_SEQ:cnt_tc\ ,
            clk_en => \ADC_TS410:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000011"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_TS410:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\ADC_TS410:TempBuf\
        PORT MAP (
            dmareq => \ADC_TS410:Net_3830\ ,
            termin => Net_12 ,
            termout => \ADC_TS410:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\ADC_TS410:FinalBuf\
        PORT MAP (
            dmareq => \ADC_TS410:Net_3698\ ,
            termin => Net_12 ,
            termout => \ADC_TS410:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =\ADC_TS410:IRQ\
        PORT MAP (
            interrupt => Net_227 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =Timer_Interrupt
        PORT MAP (
            interrupt => Net_180 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\ADC_DelSig:IRQ\
        PORT MAP (
            interrupt => Net_342 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    6 :    2 :    8 : 75.00 %
Analog Clocks                 :    1 :    3 :    4 : 25.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    0 :    1 :    1 :  0.00 %
Interrupts                    :    3 :   29 :   32 :  9.38 %
IO                            :   17 :   31 :   48 : 35.42 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
CAN 2.0b                      :    0 :    1 :    1 :  0.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    0 :    1 :    1 :  0.00 %
DMA Channels                  :    2 :   22 :   24 :  8.33 %
Timer                         :    1 :    3 :    4 : 25.00 %
UDB                           :      :      :      :        
  Macrocells                  :  138 :   54 :  192 : 71.88 %
  Unique P-terms              :  222 :  162 :  384 : 57.81 %
  Total P-terms               :  245 :      :      :        
  Datapath Cells              :    8 :   16 :   24 : 33.33 %
  Status Cells                :   10 :   14 :   24 : 41.67 %
    Status Registers          :    1 :      :      :        
    StatusI Registers         :    5 :      :      :        
    Sync Cells (x1)           :    1 :      :      :        
    Routed Count7 Load/Enable :    3 :      :      :        
  Control Cells               :    4 :   20 :   24 : 16.67 %
    Control Registers         :    1 :      :      :        
    Count7 Cells              :    3 :      :      :        
Opamp                         :    0 :    4 :    4 :  0.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    1 :    0 :    1 : 100.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    1 :    1 :    2 : 50.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    0 :    4 :    4 :  0.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.230ms
Tech Mapping phase: Elapsed time ==> 0s.288ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_234" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_236" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_237" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_239" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_241" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_242" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_244" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_246" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_247" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_249" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_251" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_252" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_254" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_256" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_257" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_259" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_261" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_262" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_264" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_266" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_267" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_269" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_271" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_272" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_274" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_276" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_277" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_279" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_281" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_282" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_284" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_286" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_287" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_289" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_291" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_292" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_294" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_296" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_297" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_299" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_301" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_302" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_304" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_306" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_307" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_308" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_309" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_310" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_311" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_312" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_313" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_314" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_315" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_316" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_317" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_318" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_319" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_320" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_321" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_322" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_5@[IOP=(0)][IoId=(5)] : Pressure_After_Neg(0) (fixed)
IO_4@[IOP=(0)][IoId=(4)] : Pressure_After_Pos(0) (fixed)
IO_4@[IOP=(3)][IoId=(4)] : Pressure_Before_Neg(0) (fixed)
IO_5@[IOP=(3)][IoId=(5)] : Pressure_Before_Pos(0) (fixed)
IO_6@[IOP=(1)][IoId=(6)] : RX_OEM(0) (fixed)
IO_4@[IOP=(15)][IoId=(4)] : RX_RPI(0) (fixed)
IO_7@[IOP=(12)][IoId=(7)] : TX_Debug(0) (fixed)
IO_7@[IOP=(1)][IoId=(7)] : TX_OEM(0) (fixed)
IO_5@[IOP=(15)][IoId=(5)] : TX_RPI(0) (fixed)
IO_1@[IOP=(2)][IoId=(1)] : USER_LED(0) (fixed)
IO_3@[IOP=(0)][IoId=(3)] : ADC_CH0(0)
IO_0@[IOP=(0)][IoId=(0)] : ADC_CH1(0)
IO_1@[IOP=(0)][IoId=(1)] : ADC_CH2(0)
IO_6@[IOP=(3)][IoId=(6)] : ADC_CH3(0)
DSM[0]@[FFB(DSM,0)] : \ADC_DelSig:DSM\
SAR[1]@[FFB(SAR,1)] : \ADC_TS410:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_TS410:SAR:vRef_Vdda_1\
Log: apr.M0058: The analog placement iterative improvement is 31% done. (App=cydsfit)
Log: apr.M0058: The analog placement iterative improvement is 56% done. (App=cydsfit)
Log: apr.M0058: The analog placement iterative improvement is 81% done. (App=cydsfit)
Analog Placement Results:
IO_5@[IOP=(0)][IoId=(5)] : Pressure_After_Neg(0) (fixed)
IO_4@[IOP=(0)][IoId=(4)] : Pressure_After_Pos(0) (fixed)
IO_4@[IOP=(3)][IoId=(4)] : Pressure_Before_Neg(0) (fixed)
IO_5@[IOP=(3)][IoId=(5)] : Pressure_Before_Pos(0) (fixed)
IO_6@[IOP=(1)][IoId=(6)] : RX_OEM(0) (fixed)
IO_4@[IOP=(15)][IoId=(4)] : RX_RPI(0) (fixed)
IO_7@[IOP=(12)][IoId=(7)] : TX_Debug(0) (fixed)
IO_7@[IOP=(1)][IoId=(7)] : TX_OEM(0) (fixed)
IO_5@[IOP=(15)][IoId=(5)] : TX_RPI(0) (fixed)
IO_1@[IOP=(2)][IoId=(1)] : USER_LED(0) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : ADC_CH0(0)
IO_3@[IOP=(3)][IoId=(3)] : ADC_CH1(0)
IO_0@[IOP=(2)][IoId=(0)] : ADC_CH2(0)
IO_1@[IOP=(3)][IoId=(1)] : ADC_CH3(0)
DSM[0]@[FFB(DSM,0)] : \ADC_DelSig:DSM\
SAR[0]@[FFB(SAR,0)] : \ADC_TS410:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_TS410:SAR:vRef_Vdda_1\

Analog Placement phase: Elapsed time ==> 6s.490ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Net "AmuxEye::AMux_CYAMUXSIDE_A" overuses wire "AGL[5]"
Net "AmuxEye::AMux_CYAMUXSIDE_A" overuses wire "AGL[4]"
Net "AmuxEye::AMux_CYAMUXSIDE_B" overuses wire "SAR vplus wire L"
Net "AmuxEye::AMux_CYAMUXSIDE_B" overuses wire "AGL[4]"
Net "AmuxEye::AMux_CYAMUXSIDE_B" overuses wire "AGL[5]"
Net "AmuxEye::\ADC_TS410:AMuxHw_2\" overuses wire "SAR vplus wire L"
Net "AmuxEye::AMux_CYAMUXSIDE_A" overuses wire "AGL[5]"
Net "AmuxEye::AMux_CYAMUXSIDE_B" overuses wire "AGL[7]"
Net "AmuxEye::AMux_CYAMUXSIDE_B" overuses wire "AGL[5]"
Net "AmuxEye::\ADC_TS410:AMuxHw_2\" overuses wire "AGL[7]"
Net "AmuxEye::AMux_CYAMUXSIDE_A" overuses wire "AGL[5]"
Net "AmuxEye::AMux_CYAMUXSIDE_B" overuses wire "AGL[5]"
Net "AmuxEye::AMux_CYAMUXSIDE_A" overuses wire "SIO Ref[0] Sw__0b"
Net "AmuxEye::AMux_CYAMUXSIDE_A" overuses wire "SIO Ref[0] Sw__1b"
Analog Routing phase: Elapsed time ==> 0s.026ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: Net_339 {
    dsm_0_vplus
  }
  Net: Net_363 {
    p3_5
  }
  Net: Net_354 {
    p0_4
  }
  Net: Net_340 {
    dsm_0_vminus
  }
  Net: Net_356 {
    p3_4
  }
  Net: Net_357 {
    p0_5
  }
  Net: \ADC_TS410:Net_2803\ {
    sar_0_vplus
  }
  Net: Net_228 {
    p15_3
  }
  Net: Net_229 {
    p3_3
  }
  Net: Net_231 {
    p3_7
  }
  Net: Net_232 {
    p0_7
  }
  Net: Net_234 {
  }
  Net: Net_236 {
  }
  Net: Net_237 {
  }
  Net: Net_239 {
  }
  Net: Net_241 {
  }
  Net: Net_242 {
  }
  Net: Net_244 {
  }
  Net: Net_246 {
  }
  Net: Net_247 {
  }
  Net: Net_249 {
  }
  Net: Net_251 {
  }
  Net: Net_252 {
  }
  Net: Net_254 {
  }
  Net: Net_256 {
  }
  Net: Net_257 {
  }
  Net: Net_259 {
  }
  Net: Net_261 {
  }
  Net: Net_262 {
  }
  Net: Net_264 {
  }
  Net: Net_266 {
  }
  Net: Net_267 {
  }
  Net: Net_269 {
  }
  Net: Net_271 {
  }
  Net: Net_272 {
  }
  Net: Net_274 {
  }
  Net: Net_276 {
  }
  Net: Net_277 {
  }
  Net: Net_279 {
  }
  Net: Net_281 {
  }
  Net: Net_282 {
  }
  Net: Net_284 {
  }
  Net: Net_286 {
  }
  Net: Net_287 {
  }
  Net: Net_289 {
  }
  Net: Net_291 {
  }
  Net: Net_292 {
  }
  Net: Net_294 {
  }
  Net: Net_296 {
  }
  Net: Net_297 {
  }
  Net: Net_299 {
  }
  Net: Net_301 {
  }
  Net: Net_302 {
  }
  Net: Net_304 {
  }
  Net: Net_306 {
  }
  Net: Net_307 {
  }
  Net: Net_308 {
  }
  Net: Net_309 {
  }
  Net: Net_310 {
  }
  Net: Net_311 {
  }
  Net: Net_312 {
  }
  Net: Net_313 {
  }
  Net: Net_314 {
  }
  Net: Net_315 {
  }
  Net: Net_316 {
  }
  Net: Net_317 {
  }
  Net: Net_318 {
  }
  Net: Net_319 {
  }
  Net: Net_320 {
  }
  Net: Net_321 {
  }
  Net: Net_322 {
  }
  Net: \ADC_DelSig:Net_249\ {
  }
  Net: \ADC_DelSig:Net_257\ {
  }
  Net: \ADC_DelSig:Net_109\ {
  }
  Net: \ADC_DelSig:Net_34\ {
  }
  Net: \ADC_TS410:SAR:Net_126\ {
    sar_0_vrefhi
    sar_0_vminus_x_sar_0_vrefhi
    sar_0_vminus
  }
  Net: \ADC_TS410:SAR:Net_209\ {
  }
  Net: \ADC_TS410:SAR:Net_235\ {
    common_sar_vref_vdda/2
    common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2
    sar_0_vref_vdda_vdda_2
    sar_0_vref_x_sar_0_vref_vdda_vdda_2
    sar_0_vref
  }
  Net: AmuxNet::AMux_CYAMUXSIDE_A {
    dsm_0_vplus
    agl4_x_dsm_0_vplus
    agl4
    agl4_x_agr4
    agr4
    agr4_x_vidac_3_vout
    vidac_3_vout
    agr5_x_vidac_3_vout
    agr5
    agr5_x_p3_5
    agl4_x_p0_4
    p3_5
    p0_4
  }
  Net: AmuxNet::AMux_CYAMUXSIDE_B {
    dsm_0_vminus
    agl1_x_dsm_0_vminus
    agl1
    agl1_x_agr1
    agr1
    agr1_x_p5_5
    p5_5
    amuxbusr_x_p5_5
    amuxbusr
    amuxbusr_x_p3_4
    agl5_x_dsm_0_vminus
    agl5
    agl5_x_p0_5
    p3_4
    p0_5
  }
  Net: AmuxNet::\ADC_TS410:AMuxHw_2\ {
    sar_0_vplus
    agl7_x_sar_0_vplus
    agl7
    agl7_x_p0_7
    agl7_x_agr7
    agr7
    agr7_x_p3_7
    agr7_x_p3_3
    agr7_x_p15_3
    p0_7
    p3_7
    p3_3
    p15_3
  }
}
Map of item to net {
  sar_0_vrefhi                                     -> \ADC_TS410:SAR:Net_126\
  sar_0_vminus_x_sar_0_vrefhi                      -> \ADC_TS410:SAR:Net_126\
  sar_0_vminus                                     -> \ADC_TS410:SAR:Net_126\
  common_sar_vref_vdda/2                           -> \ADC_TS410:SAR:Net_235\
  common_sar_vref_vdda/2_x_sar_0_vref_vdda_vdda_2  -> \ADC_TS410:SAR:Net_235\
  sar_0_vref_vdda_vdda_2                           -> \ADC_TS410:SAR:Net_235\
  sar_0_vref_x_sar_0_vref_vdda_vdda_2              -> \ADC_TS410:SAR:Net_235\
  sar_0_vref                                       -> \ADC_TS410:SAR:Net_235\
  dsm_0_vplus                                      -> Net_339
  p3_5                                             -> Net_363
  p0_4                                             -> Net_354
  dsm_0_vminus                                     -> Net_340
  p3_4                                             -> Net_356
  p0_5                                             -> Net_357
  sar_0_vplus                                      -> \ADC_TS410:Net_2803\
  p15_3                                            -> Net_228
  p3_3                                             -> Net_229
  p3_7                                             -> Net_231
  p0_7                                             -> Net_232
  agl4_x_dsm_0_vplus                               -> AmuxNet::AMux_CYAMUXSIDE_A
  agl4                                             -> AmuxNet::AMux_CYAMUXSIDE_A
  agl4_x_agr4                                      -> AmuxNet::AMux_CYAMUXSIDE_A
  agr4                                             -> AmuxNet::AMux_CYAMUXSIDE_A
  agr4_x_vidac_3_vout                              -> AmuxNet::AMux_CYAMUXSIDE_A
  vidac_3_vout                                     -> AmuxNet::AMux_CYAMUXSIDE_A
  agr5_x_vidac_3_vout                              -> AmuxNet::AMux_CYAMUXSIDE_A
  agr5                                             -> AmuxNet::AMux_CYAMUXSIDE_A
  agr5_x_p3_5                                      -> AmuxNet::AMux_CYAMUXSIDE_A
  agl4_x_p0_4                                      -> AmuxNet::AMux_CYAMUXSIDE_A
  agl1_x_dsm_0_vminus                              -> AmuxNet::AMux_CYAMUXSIDE_B
  agl1                                             -> AmuxNet::AMux_CYAMUXSIDE_B
  agl1_x_agr1                                      -> AmuxNet::AMux_CYAMUXSIDE_B
  agr1                                             -> AmuxNet::AMux_CYAMUXSIDE_B
  agr1_x_p5_5                                      -> AmuxNet::AMux_CYAMUXSIDE_B
  p5_5                                             -> AmuxNet::AMux_CYAMUXSIDE_B
  amuxbusr_x_p5_5                                  -> AmuxNet::AMux_CYAMUXSIDE_B
  amuxbusr                                         -> AmuxNet::AMux_CYAMUXSIDE_B
  amuxbusr_x_p3_4                                  -> AmuxNet::AMux_CYAMUXSIDE_B
  agl5_x_dsm_0_vminus                              -> AmuxNet::AMux_CYAMUXSIDE_B
  agl5                                             -> AmuxNet::AMux_CYAMUXSIDE_B
  agl5_x_p0_5                                      -> AmuxNet::AMux_CYAMUXSIDE_B
  agl7_x_sar_0_vplus                               -> AmuxNet::\ADC_TS410:AMuxHw_2\
  agl7                                             -> AmuxNet::\ADC_TS410:AMuxHw_2\
  agl7_x_p0_7                                      -> AmuxNet::\ADC_TS410:AMuxHw_2\
  agl7_x_agr7                                      -> AmuxNet::\ADC_TS410:AMuxHw_2\
  agr7                                             -> AmuxNet::\ADC_TS410:AMuxHw_2\
  agr7_x_p3_7                                      -> AmuxNet::\ADC_TS410:AMuxHw_2\
  agr7_x_p3_3                                      -> AmuxNet::\ADC_TS410:AMuxHw_2\
  agr7_x_p15_3                                     -> AmuxNet::\ADC_TS410:AMuxHw_2\
}
Mux Info {
  Mux: AMux_CYAMUXSIDE_A {
     Mouth: Net_339
     Guts:  AmuxNet::AMux_CYAMUXSIDE_A
     IsSingleSwitching: True
     IsStaticSwitching: True
     IsAtMostOneSwitch: False
    Arm: 0 {
      Net:   Net_363
      Outer: agr5_x_p3_5
      Inner: agl4_x_agr4
      Path {
        p3_5
        agr5_x_p3_5
        agr5
        agr5_x_vidac_3_vout
        vidac_3_vout
        agr4_x_vidac_3_vout
        agr4
        agl4_x_agr4
        agl4
        agl4_x_dsm_0_vplus
        dsm_0_vplus
      }
    }
    Arm: 1 {
      Net:   Net_354
      Outer: agl4_x_p0_4
      Inner: __open__
      Path {
        p0_4
        agl4_x_p0_4
        agl4
        agl4_x_dsm_0_vplus
        dsm_0_vplus
      }
    }
  }
  Mux: AMux_CYAMUXSIDE_B {
     Mouth: Net_340
     Guts:  AmuxNet::AMux_CYAMUXSIDE_B
     IsSingleSwitching: True
     IsStaticSwitching: True
     IsAtMostOneSwitch: False
    Arm: 0 {
      Net:   Net_356
      Outer: amuxbusr_x_p3_4
      Inner: agl1_x_dsm_0_vminus
      Path {
        p3_4
        amuxbusr_x_p3_4
        amuxbusr
        amuxbusr_x_p5_5
        p5_5
        agr1_x_p5_5
        agr1
        agl1_x_agr1
        agl1
        agl1_x_dsm_0_vminus
        dsm_0_vminus
      }
    }
    Arm: 1 {
      Net:   Net_357
      Outer: agl5_x_p0_5
      Inner: agl5_x_dsm_0_vminus
      Path {
        p0_5
        agl5_x_p0_5
        agl5
        agl5_x_dsm_0_vminus
        dsm_0_vminus
      }
    }
  }
  Mux: \ADC_TS410:AMuxHw_2\ {
     Mouth: \ADC_TS410:Net_2803\
     Guts:  AmuxNet::\ADC_TS410:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_228
      Outer: agr7_x_p15_3
      Inner: __open__
      Path {
        p15_3
        agr7_x_p15_3
        agr7
        agl7_x_agr7
        agl7
        agl7_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 1 {
      Net:   Net_229
      Outer: agr7_x_p3_3
      Inner: __open__
      Path {
        p3_3
        agr7_x_p3_3
        agr7
        agl7_x_agr7
        agl7
        agl7_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 2 {
      Net:   Net_231
      Outer: agr7_x_p3_7
      Inner: __open__
      Path {
        p3_7
        agr7_x_p3_7
        agr7
        agl7_x_agr7
        agl7
        agl7_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 3 {
      Net:   Net_232
      Outer: agl7_x_p0_7
      Inner: __open__
      Path {
        p0_7
        agl7_x_p0_7
        agl7
        agl7_x_sar_0_vplus
        sar_0_vplus
      }
    }
    Arm: 4 {
      Net:   Net_234
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_236
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_237
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_239
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_241
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_242
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_244
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_246
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_247
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_249
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_251
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_252
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_254
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_256
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_257
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_259
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_261
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_262
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_264
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_266
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_267
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_269
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_271
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_272
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_274
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_276
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_277
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_279
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_281
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_282
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_284
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_286
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_287
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_289
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_291
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_292
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_294
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_296
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_297
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_299
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_301
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_302
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_304
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_306
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_307
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_308
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_309
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_310
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_311
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_312
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_313
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_314
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_315
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_316
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_317
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_318
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_319
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_320
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_321
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_322
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = True
IsVddaHalfUsedForSar1 = False
Analog Code Generation phase: Elapsed time ==> 0s.166ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 3.3 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   43 :    5 :   48 :  89.58%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            8.58
                   Pterms :            5.40
               Macrocells :            3.21
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.003ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.077ms
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         22 :      13.14 :       6.27
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] contents:
LAB@[UDB=(0,0)][LB=0] #macrocells=2, #inputs=12, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(0,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\UART_RPI:BUART:tx_status_0\, Mode=(Combinatorial) @ [UDB=(0,0)][LB=0][MC=2]
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_RPI:BUART:tx_state_1\ * !\UART_RPI:BUART:tx_state_0\ * 
              \UART_RPI:BUART:tx_bitclk_enable_pre\ * 
              \UART_RPI:BUART:tx_fifo_empty\ * \UART_RPI:BUART:tx_state_2\
        );
        Output = \UART_RPI:BUART:tx_status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,0)][LB=1] #macrocells=2, #inputs=6, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=\UART_RPI:BUART:tx_state_0\, Mode=(T-Register) @ [UDB=(0,0)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_RPI:BUART:tx_state_1\ * !\UART_RPI:BUART:tx_state_0\ * 
              \UART_RPI:BUART:tx_bitclk_enable_pre\ * 
              !\UART_RPI:BUART:tx_fifo_empty\
            + !\UART_RPI:BUART:tx_state_1\ * !\UART_RPI:BUART:tx_state_0\ * 
              !\UART_RPI:BUART:tx_fifo_empty\ * !\UART_RPI:BUART:tx_state_2\
            + \UART_RPI:BUART:tx_state_1\ * \UART_RPI:BUART:tx_state_0\ * 
              \UART_RPI:BUART:tx_bitclk_enable_pre\ * 
              \UART_RPI:BUART:tx_fifo_empty\ * \UART_RPI:BUART:tx_state_2\
            + \UART_RPI:BUART:tx_state_0\ * !\UART_RPI:BUART:tx_state_2\ * 
              \UART_RPI:BUART:tx_bitclk\
        );
        Output = \UART_RPI:BUART:tx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\UART_RPI:BUART:tx_bitclk\, Mode=(D-Register) @ [UDB=(0,0)][LB=1][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_RPI:BUART:tx_state_1\ * !\UART_RPI:BUART:tx_state_0\ * 
              \UART_RPI:BUART:tx_state_2\
            + !\UART_RPI:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART_RPI:BUART:tx_bitclk\ (fanout=4)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART_RPI:BUART:sTX:TxShifter:u0\
    PORT MAP (
        clock => \UART_RPI:Net_9\ ,
        cs_addr_2 => \UART_RPI:BUART:tx_state_1\ ,
        cs_addr_1 => \UART_RPI:BUART:tx_state_0\ ,
        cs_addr_0 => \UART_RPI:BUART:tx_bitclk_enable_pre\ ,
        so_comb => \UART_RPI:BUART:tx_shift_out\ ,
        f0_bus_stat_comb => \UART_RPI:BUART:tx_fifo_notfull\ ,
        f0_blk_stat_comb => \UART_RPI:BUART:tx_fifo_empty\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=2, #inputs=8, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_RPI:BUART:txn\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART_RPI:BUART:txn\ * \UART_RPI:BUART:tx_state_1\ * 
              !\UART_RPI:BUART:tx_bitclk\
            + \UART_RPI:BUART:txn\ * \UART_RPI:BUART:tx_state_2\
            + !\UART_RPI:BUART:tx_state_1\ * \UART_RPI:BUART:tx_state_0\ * 
              !\UART_RPI:BUART:tx_shift_out\ * !\UART_RPI:BUART:tx_state_2\
            + !\UART_RPI:BUART:tx_state_1\ * \UART_RPI:BUART:tx_state_0\ * 
              !\UART_RPI:BUART:tx_state_2\ * !\UART_RPI:BUART:tx_bitclk\
            + \UART_RPI:BUART:tx_state_1\ * !\UART_RPI:BUART:tx_state_0\ * 
              !\UART_RPI:BUART:tx_shift_out\ * !\UART_RPI:BUART:tx_state_2\ * 
              !\UART_RPI:BUART:tx_counter_dp\ * \UART_RPI:BUART:tx_bitclk\
        );
        Output = \UART_RPI:BUART:txn\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_RPI:BUART:tx_state_1\, Mode=(T-Register) @ [UDB=(0,1)][LB=0][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART_RPI:BUART:tx_state_1\ * \UART_RPI:BUART:tx_state_0\ * 
              \UART_RPI:BUART:tx_bitclk_enable_pre\ * 
              \UART_RPI:BUART:tx_state_2\
            + \UART_RPI:BUART:tx_state_1\ * !\UART_RPI:BUART:tx_state_2\ * 
              \UART_RPI:BUART:tx_counter_dp\ * \UART_RPI:BUART:tx_bitclk\
            + \UART_RPI:BUART:tx_state_0\ * !\UART_RPI:BUART:tx_state_2\ * 
              \UART_RPI:BUART:tx_bitclk\
        );
        Output = \UART_RPI:BUART:tx_state_1\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,1)][LB=1] #macrocells=4, #inputs=8, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_RPI:BUART:tx_state_2\, Mode=(T-Register) @ [UDB=(0,1)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_RPI:BUART:tx_state_1\ * !\UART_RPI:BUART:tx_state_0\ * 
              \UART_RPI:BUART:tx_bitclk_enable_pre\ * 
              \UART_RPI:BUART:tx_state_2\
            + \UART_RPI:BUART:tx_state_1\ * \UART_RPI:BUART:tx_state_0\ * 
              \UART_RPI:BUART:tx_bitclk_enable_pre\ * 
              \UART_RPI:BUART:tx_state_2\
            + \UART_RPI:BUART:tx_state_1\ * \UART_RPI:BUART:tx_state_0\ * 
              !\UART_RPI:BUART:tx_state_2\ * \UART_RPI:BUART:tx_bitclk\
            + \UART_RPI:BUART:tx_state_1\ * !\UART_RPI:BUART:tx_state_2\ * 
              \UART_RPI:BUART:tx_counter_dp\ * \UART_RPI:BUART:tx_bitclk\
        );
        Output = \UART_RPI:BUART:tx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=Net_158, Mode=(Combinatorial) @ [UDB=(0,1)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_RPI:BUART:txn\
        );
        Output = Net_158 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_RPI:BUART:counter_load_not\, Mode=(Combinatorial) @ [UDB=(0,1)][LB=1][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_RPI:BUART:tx_state_1\ * !\UART_RPI:BUART:tx_state_0\ * 
              \UART_RPI:BUART:tx_bitclk_enable_pre\
            + !\UART_RPI:BUART:tx_state_1\ * !\UART_RPI:BUART:tx_state_0\ * 
              !\UART_RPI:BUART:tx_state_2\
        );
        Output = \UART_RPI:BUART:counter_load_not\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_RPI:BUART:tx_status_2\, Mode=(Combinatorial) @ [UDB=(0,1)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_RPI:BUART:tx_fifo_notfull\
        );
        Output = \UART_RPI:BUART:tx_status_2\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART_RPI:BUART:sTX:sCLOCK:TxBitClkGen\
    PORT MAP (
        clock => \UART_RPI:Net_9\ ,
        cs_addr_0 => \UART_RPI:BUART:counter_load_not\ ,
        ce0_reg => \UART_RPI:BUART:tx_bitclk_enable_pre\ ,
        ce1_reg => \UART_RPI:BUART:tx_counter_dp\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100001111001000000100000000000101111100000000000000001000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

statusicell: Name =\UART_RPI:BUART:sTX:TxSts\
    PORT MAP (
        clock => \UART_RPI:Net_9\ ,
        status_3 => \UART_RPI:BUART:tx_fifo_notfull\ ,
        status_2 => \UART_RPI:BUART:tx_status_2\ ,
        status_1 => \UART_RPI:BUART:tx_fifo_empty\ ,
        status_0 => \UART_RPI:BUART:tx_status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0000001"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }
}

statusicell: Name =\UART_OEM:BUART:sRX:RxSts\
    PORT MAP (
        clock => \UART_OEM:Net_9\ ,
        status_5 => \UART_OEM:BUART:rx_status_5\ ,
        status_4 => \UART_OEM:BUART:rx_status_4\ ,
        status_3 => \UART_OEM:BUART:rx_status_3\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "1011111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,3)] contents:
LAB@[UDB=(0,3)][LB=0] #macrocells=2, #inputs=9, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=MODIN7_1, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_154 * !\UART_RPI:BUART:rx_count_3\ * 
              !\UART_RPI:BUART:rx_count_2\ * !\UART_RPI:BUART:rx_count_1\ * 
              !\UART_RPI:BUART:rx_count7_bit8_wire\ * MODIN7_1
            + MODIN7_1_split
        );
        Output = MODIN7_1 (fanout=5)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=MODIN7_0, Mode=(D-Register) @ [UDB=(0,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 6
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 6 pterms
        (
              !Net_154 * !\UART_RPI:BUART:rx_count_3\ * 
              !\UART_RPI:BUART:rx_count_2\ * !\UART_RPI:BUART:rx_count_1\ * 
              !\UART_RPI:BUART:rx_count7_bit8_wire\ * MODIN7_0
            + !Net_154 * !\UART_RPI:BUART:rx_count_3\ * 
              \UART_RPI:BUART:rx_count_2\ * \UART_RPI:BUART:rx_count_1\ * 
              \UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * MODIN7_0
            + !Net_154 * \UART_RPI:BUART:rx_count_3\ * 
              !\UART_RPI:BUART:rx_count_2\ * !\UART_RPI:BUART:rx_count_1\ * 
              !\UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * MODIN7_0
            + Net_154 * !\UART_RPI:BUART:rx_count_3\ * 
              !\UART_RPI:BUART:rx_count_2\ * !\UART_RPI:BUART:rx_count_1\ * 
              !\UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN7_0
            + Net_154 * !\UART_RPI:BUART:rx_count_3\ * 
              \UART_RPI:BUART:rx_count_2\ * \UART_RPI:BUART:rx_count_1\ * 
              \UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN7_0
            + Net_154 * \UART_RPI:BUART:rx_count_3\ * 
              !\UART_RPI:BUART:rx_count_2\ * !\UART_RPI:BUART:rx_count_1\ * 
              !\UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN7_0
        );
        Output = MODIN7_0 (fanout=5)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,3)][LB=1] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(0,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

UDB [UDB=(0,4)] contents:
LAB@[UDB=(0,4)][LB=0] #macrocells=1, #inputs=8, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=MODIN7_1_split, Mode=(Combinatorial) @ [UDB=(0,4)][LB=0][MC=0]
        Total # of inputs        : 8
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              !Net_154 * !\UART_RPI:BUART:rx_count_3\ * 
              \UART_RPI:BUART:rx_count_2\ * \UART_RPI:BUART:rx_count_1\ * 
              \UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * MODIN7_1
            + !Net_154 * \UART_RPI:BUART:rx_count_3\ * 
              !\UART_RPI:BUART:rx_count_2\ * !\UART_RPI:BUART:rx_count_1\ * 
              !\UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * MODIN7_1
            + Net_154 * !\UART_RPI:BUART:rx_count_3\ * 
              !\UART_RPI:BUART:rx_count_2\ * !\UART_RPI:BUART:rx_count_1\ * 
              !\UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN7_1 * MODIN7_0
            + Net_154 * !\UART_RPI:BUART:rx_count_3\ * 
              \UART_RPI:BUART:rx_count_2\ * \UART_RPI:BUART:rx_count_1\ * 
              \UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN7_1 * MODIN7_0
            + Net_154 * \UART_RPI:BUART:rx_count_3\ * 
              !\UART_RPI:BUART:rx_count_2\ * !\UART_RPI:BUART:rx_count_1\ * 
              !\UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN7_1 * MODIN7_0
            + !\UART_RPI:BUART:rx_count_3\ * !\UART_RPI:BUART:rx_count_2\ * 
              !\UART_RPI:BUART:rx_count_1\ * 
              !\UART_RPI:BUART:rx_count7_bit8_wire\ * MODIN7_1 * !MODIN7_0
            + !\UART_RPI:BUART:rx_count_3\ * \UART_RPI:BUART:rx_count_2\ * 
              \UART_RPI:BUART:rx_count_1\ * \UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * MODIN7_1 * !MODIN7_0
            + \UART_RPI:BUART:rx_count_3\ * !\UART_RPI:BUART:rx_count_2\ * 
              !\UART_RPI:BUART:rx_count_1\ * !\UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * MODIN7_1 * !MODIN7_0
        );
        Output = MODIN7_1_split (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,4)][LB=1] #macrocells=4, #inputs=11, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_RPI:BUART:rx_state_0\, Mode=(T-Register) @ [UDB=(0,4)][LB=1][MC=0]
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !Net_154 * !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * 
              \UART_RPI:BUART:rx_bitclk_enable\ * 
              !\UART_RPI:BUART:rx_state_3\ * \UART_RPI:BUART:rx_state_2\ * 
              !MODIN7_1
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * 
              \UART_RPI:BUART:rx_bitclk_enable\ * 
              !\UART_RPI:BUART:rx_state_3\ * \UART_RPI:BUART:rx_state_2\ * 
              !MODIN7_1 * !MODIN7_0
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              \UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN10_6
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              \UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN10_5
        );
        Output = \UART_RPI:BUART:rx_state_0\ (fanout=9)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_RPI:BUART:rx_state_3\, Mode=(T-Register) @ [UDB=(0,4)][LB=1][MC=1]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * 
              \UART_RPI:BUART:rx_bitclk_enable\ * \UART_RPI:BUART:rx_state_3\ * 
              \UART_RPI:BUART:rx_state_2\
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              \UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN10_6
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              \UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN10_5
        );
        Output = \UART_RPI:BUART:rx_state_3\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_RPI:BUART:rx_load_fifo\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=2]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * 
              \UART_RPI:BUART:rx_bitclk_enable\ * \UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              \UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN10_6
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              \UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN10_5
        );
        Output = \UART_RPI:BUART:rx_load_fifo\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_RPI:BUART:rx_status_3\, Mode=(D-Register) @ [UDB=(0,4)][LB=1][MC=3]
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_154 * !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * 
              \UART_RPI:BUART:rx_bitclk_enable\ * \UART_RPI:BUART:rx_state_3\ * 
              \UART_RPI:BUART:rx_state_2\ * !MODIN7_1
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * 
              \UART_RPI:BUART:rx_bitclk_enable\ * \UART_RPI:BUART:rx_state_3\ * 
              \UART_RPI:BUART:rx_state_2\ * !MODIN7_1 * !MODIN7_0
        );
        Output = \UART_RPI:BUART:rx_status_3\ (fanout=1)
        Properties               : 
        {
        }
}

statusicell: Name =\UART_RPI:BUART:sRX:RxSts\
    PORT MAP (
        clock => \UART_RPI:Net_9\ ,
        status_5 => \UART_RPI:BUART:rx_status_5\ ,
        status_4 => \UART_RPI:BUART:rx_status_4\ ,
        status_3 => \UART_RPI:BUART:rx_status_3\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "1011111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(0,5)] contents:
LAB@[UDB=(0,5)][LB=0] #macrocells=3, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\UART_RPI:BUART:rx_bitclk_enable\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=0]
        Total # of inputs        : 5
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART_RPI:BUART:rx_count_3\ * !\UART_RPI:BUART:rx_count_2\ * 
              !\UART_RPI:BUART:rx_count_1\ * !\UART_RPI:BUART:rx_count_0\ * 
              !\UART_RPI:BUART:rx_count7_bit8_wire\
            + !\UART_RPI:BUART:rx_count_3\ * \UART_RPI:BUART:rx_count_2\ * 
              \UART_RPI:BUART:rx_count_1\ * \UART_RPI:BUART:rx_count_0\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\
        );
        Output = \UART_RPI:BUART:rx_bitclk_enable\ (fanout=6)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_RPI:BUART:rx_status_5\, Mode=(Combinatorial) @ [UDB=(0,5)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_RPI:BUART:rx_fifonotempty\ * 
              \UART_RPI:BUART:rx_state_stop1_reg\
        );
        Output = \UART_RPI:BUART:rx_status_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_RPI:BUART:rx_last\, Mode=(D-Register) @ [UDB=(0,5)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_154
        );
        Output = \UART_RPI:BUART:rx_last\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(0,5)][LB=1] #macrocells=4, #inputs=11, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_RPI:BUART:rx_state_2\, Mode=(T-Register) @ [UDB=(0,5)][LB=1][MC=0]
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !Net_154 * !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\ * \UART_RPI:BUART:rx_last\
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * 
              \UART_RPI:BUART:rx_bitclk_enable\ * \UART_RPI:BUART:rx_state_3\
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * 
              \UART_RPI:BUART:rx_bitclk_enable\ * \UART_RPI:BUART:rx_state_2\
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              \UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN10_6
            + !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              \UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\ * 
              \UART_RPI:BUART:rx_count7_bit8_wire\ * !MODIN10_5
        );
        Output = \UART_RPI:BUART:rx_state_2\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_RPI:BUART:rx_counter_load\, Mode=(Combinatorial) @ [UDB=(0,5)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\
        );
        Output = \UART_RPI:BUART:rx_counter_load\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_RPI:BUART:rx_count7_bit8_wire\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=2]
        Total # of inputs        : 6
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * !\UART_RPI:BUART:rx_state_3\ * 
              !\UART_RPI:BUART:rx_state_2\
            + !\UART_RPI:BUART:rx_count7_tc\ * 
              !\UART_RPI:BUART:rx_count7_bit8_wire\
        );
        Output = \UART_RPI:BUART:rx_count7_bit8_wire\ (fanout=9)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_RPI:BUART:rx_state_stop1_reg\, Mode=(D-Register) @ [UDB=(0,5)][LB=1][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART_RPI:BUART:tx_ctrl_mark_last\ * 
              !\UART_RPI:BUART:rx_state_0\ * \UART_RPI:BUART:rx_state_3\ * 
              \UART_RPI:BUART:rx_state_2\
        );
        Output = \UART_RPI:BUART:rx_state_stop1_reg\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART_RPI:BUART:sRX:RxShifter:u0\
    PORT MAP (
        clock => \UART_RPI:Net_9\ ,
        cs_addr_2 => \UART_RPI:BUART:tx_ctrl_mark_last\ ,
        cs_addr_1 => \UART_RPI:BUART:rx_state_0\ ,
        cs_addr_0 => \UART_RPI:BUART:rx_bitclk_enable\ ,
        route_si => \UART_RPI:BUART:rx_postpoll\ ,
        f0_load => \UART_RPI:BUART:rx_load_fifo\ ,
        f0_bus_stat_comb => \UART_RPI:BUART:rx_fifonotempty\ ,
        f0_blk_stat_comb => \UART_RPI:BUART:rx_fifofull\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

count7cell: Name =\UART_RPI:BUART:sRX:RxBitCounter\
    PORT MAP (
        clock => \UART_RPI:Net_9\ ,
        load => \UART_RPI:BUART:rx_counter_load\ ,
        count_6 => MODIN10_6 ,
        count_5 => MODIN10_5 ,
        count_4 => MODIN10_4 ,
        count_3 => \UART_RPI:BUART:rx_count_3\ ,
        count_2 => \UART_RPI:BUART:rx_count_2\ ,
        count_1 => \UART_RPI:BUART:rx_count_1\ ,
        count_0 => \UART_RPI:BUART:rx_count_0\ ,
        tc => \UART_RPI:BUART:rx_count7_tc\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "1110110"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,0)] contents:
LAB@[UDB=(1,0)][LB=0] #macrocells=3, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\UART_OEM:BUART:tx_ctrl_mark_last\, Mode=(T-Register) @ [UDB=(1,0)][LB=0][MC=0]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_OEM:BUART:tx_ctrl_mark_last\ (fanout=9)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\UART_OEM:BUART:rx_bitclk_enable\, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=2]
        Total # of inputs        : 5
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\UART_OEM:BUART:rx_count_3\ * !\UART_OEM:BUART:rx_count_2\ * 
              !\UART_OEM:BUART:rx_count_1\ * !\UART_OEM:BUART:rx_count_0\ * 
              !\UART_OEM:BUART:rx_count7_bit8_wire\
            + !\UART_OEM:BUART:rx_count_3\ * \UART_OEM:BUART:rx_count_2\ * 
              \UART_OEM:BUART:rx_count_1\ * \UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\
        );
        Output = \UART_OEM:BUART:rx_bitclk_enable\ (fanout=6)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=MODIN3_1, Mode=(D-Register) @ [UDB=(1,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_167 * !\UART_OEM:BUART:rx_count_3\ * 
              !\UART_OEM:BUART:rx_count_2\ * !\UART_OEM:BUART:rx_count_1\ * 
              !\UART_OEM:BUART:rx_count7_bit8_wire\ * MODIN3_1
            + MODIN3_1_split
        );
        Output = MODIN3_1 (fanout=5)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,0)][LB=1] #macrocells=4, #inputs=10, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_OEM:BUART:rx_postpoll\, Mode=(Combinatorial) @ [UDB=(1,0)][LB=1][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              Net_167 * MODIN3_0
            + MODIN3_1
        );
        Output = \UART_OEM:BUART:rx_postpoll\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(1,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=4, #inputs=10, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=Net_133, Mode=(Combinatorial) @ [UDB=(1,1)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_Debug:BUART:txn\
        );
        Output = Net_133 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS410:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(1,1)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_226 * !\ADC_TS410:bSAR_SEQ:load_period\
        );
        Output = \ADC_TS410:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,1)][LB=1] #macrocells=1, #inputs=7, #pterms=6
{
    [McSlotId=0]:     MacroCell: Name=MODIN3_0, Mode=(D-Register) @ [UDB=(1,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 6
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 6 pterms
        (
              !Net_167 * !\UART_OEM:BUART:rx_count_3\ * 
              !\UART_OEM:BUART:rx_count_2\ * !\UART_OEM:BUART:rx_count_1\ * 
              !\UART_OEM:BUART:rx_count7_bit8_wire\ * MODIN3_0
            + !Net_167 * !\UART_OEM:BUART:rx_count_3\ * 
              \UART_OEM:BUART:rx_count_2\ * \UART_OEM:BUART:rx_count_1\ * 
              \UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * MODIN3_0
            + !Net_167 * \UART_OEM:BUART:rx_count_3\ * 
              !\UART_OEM:BUART:rx_count_2\ * !\UART_OEM:BUART:rx_count_1\ * 
              !\UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * MODIN3_0
            + Net_167 * !\UART_OEM:BUART:rx_count_3\ * 
              !\UART_OEM:BUART:rx_count_2\ * !\UART_OEM:BUART:rx_count_1\ * 
              !\UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN3_0
            + Net_167 * !\UART_OEM:BUART:rx_count_3\ * 
              \UART_OEM:BUART:rx_count_2\ * \UART_OEM:BUART:rx_count_1\ * 
              \UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN3_0
            + Net_167 * \UART_OEM:BUART:rx_count_3\ * 
              !\UART_OEM:BUART:rx_count_2\ * !\UART_OEM:BUART:rx_count_1\ * 
              !\UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN3_0
        );
        Output = MODIN3_0 (fanout=5)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

UDB [UDB=(1,2)] contents:
LAB@[UDB=(1,2)][LB=0] #macrocells=2, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(1,2)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * !\ADC_TS410:ch_addr_5\
            + \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * !\ADC_TS410:ch_addr_4\
            + \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * !\ADC_TS410:ch_addr_3\
            + \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * !\ADC_TS410:ch_addr_2\
            + !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * \ADC_TS410:ch_addr_1\
            + \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * !\ADC_TS410:ch_addr_1\
            + !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\ * \ADC_TS410:ch_addr_0\
            + \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ * !\ADC_TS410:ch_addr_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_RPI:BUART:tx_ctrl_mark_last\, Mode=(T-Register) @ [UDB=(1,2)][LB=0][MC=1]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\UART_RPI:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \UART_RPI:BUART:tx_ctrl_mark_last\ (fanout=9)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,2)][LB=1] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:ch_addr_1\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }
}

count7cell: Name =\ADC_TS410:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \ADC_TS410:clock\ ,
        load => \ADC_TS410:bSAR_SEQ:load_period\ ,
        enable => \ADC_TS410:bSAR_SEQ:cnt_enable\ ,
        count_6 => \ADC_TS410:bSAR_SEQ:count_6\ ,
        count_5 => \ADC_TS410:ch_addr_5\ ,
        count_4 => \ADC_TS410:ch_addr_4\ ,
        count_3 => \ADC_TS410:ch_addr_3\ ,
        count_2 => \ADC_TS410:ch_addr_2\ ,
        count_1 => \ADC_TS410:ch_addr_1\ ,
        count_0 => \ADC_TS410:ch_addr_0\ ,
        tc => \ADC_TS410:bSAR_SEQ:cnt_tc\ ,
        clk_en => \ADC_TS410:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000011"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_TS410:bSAR_SEQ:enable\)

UDB [UDB=(1,3)] contents:
LAB@[UDB=(1,3)][LB=0] #macrocells=4, #inputs=10, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\UART_OEM:BUART:tx_state_2\, Mode=(T-Register) @ [UDB=(1,3)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_OEM:BUART:tx_state_1\ * !\UART_OEM:BUART:tx_state_0\ * 
              \UART_OEM:BUART:tx_bitclk_enable_pre\ * 
              \UART_OEM:BUART:tx_state_2\
            + \UART_OEM:BUART:tx_state_1\ * \UART_OEM:BUART:tx_state_0\ * 
              \UART_OEM:BUART:tx_bitclk_enable_pre\ * 
              \UART_OEM:BUART:tx_state_2\
            + \UART_OEM:BUART:tx_state_1\ * \UART_OEM:BUART:tx_state_0\ * 
              !\UART_OEM:BUART:tx_state_2\ * \UART_OEM:BUART:tx_bitclk\
            + \UART_OEM:BUART:tx_state_1\ * !\UART_OEM:BUART:tx_state_2\ * 
              \UART_OEM:BUART:tx_counter_dp\ * \UART_OEM:BUART:tx_bitclk\
        );
        Output = \UART_OEM:BUART:tx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_OEM:BUART:rx_status_5\, Mode=(Combinatorial) @ [UDB=(1,3)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_OEM:BUART:rx_fifonotempty\ * 
              \UART_OEM:BUART:rx_state_stop1_reg\
        );
        Output = \UART_OEM:BUART:rx_status_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_OEM:BUART:rx_status_4\, Mode=(Combinatorial) @ [UDB=(1,3)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_OEM:BUART:rx_load_fifo\ * \UART_OEM:BUART:rx_fifofull\
        );
        Output = \UART_OEM:BUART:rx_status_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_OEM:BUART:tx_state_1\, Mode=(T-Register) @ [UDB=(1,3)][LB=0][MC=3]
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART_OEM:BUART:tx_state_1\ * \UART_OEM:BUART:tx_state_0\ * 
              \UART_OEM:BUART:tx_bitclk_enable_pre\ * 
              \UART_OEM:BUART:tx_state_2\
            + \UART_OEM:BUART:tx_state_1\ * !\UART_OEM:BUART:tx_state_2\ * 
              \UART_OEM:BUART:tx_counter_dp\ * \UART_OEM:BUART:tx_bitclk\
            + \UART_OEM:BUART:tx_state_0\ * !\UART_OEM:BUART:tx_state_2\ * 
              \UART_OEM:BUART:tx_bitclk\
        );
        Output = \UART_OEM:BUART:tx_state_1\ (fanout=8)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,3)][LB=1] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(1,3)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:ch_addr_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART_OEM:BUART:sRX:RxShifter:u0\
    PORT MAP (
        clock => \UART_OEM:Net_9\ ,
        cs_addr_2 => \UART_OEM:BUART:tx_ctrl_mark_last\ ,
        cs_addr_1 => \UART_OEM:BUART:rx_state_0\ ,
        cs_addr_0 => \UART_OEM:BUART:rx_bitclk_enable\ ,
        route_si => \UART_OEM:BUART:rx_postpoll\ ,
        f0_load => \UART_OEM:BUART:rx_load_fifo\ ,
        f0_bus_stat_comb => \UART_OEM:BUART:rx_fifonotempty\ ,
        f0_blk_stat_comb => \UART_OEM:BUART:rx_fifofull\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,4)] contents:
LAB@[UDB=(1,4)][LB=0] #macrocells=3, #inputs=8, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(1,4)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_TS410:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_227
            + \ADC_TS410:Net_3935\
        );
        Output = \ADC_TS410:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_RPI:BUART:rx_postpoll\, Mode=(Combinatorial) @ [UDB=(1,4)][LB=0][MC=1]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              Net_154 * MODIN7_0
            + MODIN7_1
        );
        Output = \UART_RPI:BUART:rx_postpoll\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\UART_RPI:BUART:rx_status_4\, Mode=(Combinatorial) @ [UDB=(1,4)][LB=0][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \UART_RPI:BUART:rx_load_fifo\ * \UART_RPI:BUART:rx_fifofull\
        );
        Output = \UART_RPI:BUART:rx_status_4\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(1,4)][LB=1] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=Net_227, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: PosEdge(\ADC_TS410:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_TS410:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_TS410:bSAR_SEQ:nrq_reg\
        );
        Output = Net_227 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS410:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(1,4)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: PosEdge(\ADC_TS410:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_TS410:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_TS410:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

datapathcell: Name =\UART_Debug:BUART:sTX:TxShifter:u0\
    PORT MAP (
        clock => \UART_Debug:Net_9\ ,
        cs_addr_2 => \UART_Debug:BUART:tx_state_1\ ,
        cs_addr_1 => \UART_Debug:BUART:tx_state_0\ ,
        cs_addr_0 => \UART_Debug:BUART:tx_bitclk_enable_pre\ ,
        so_comb => \UART_Debug:BUART:tx_shift_out\ ,
        f0_bus_stat_comb => \UART_Debug:BUART:tx_fifo_notfull\ ,
        f0_blk_stat_comb => \UART_Debug:BUART:tx_fifo_empty\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,5)] contents:
LAB@[UDB=(1,5)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(1,5)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

UDB [UDB=(2,0)] contents:
LAB@[UDB=(2,0)][LB=0] #macrocells=1, #inputs=8, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=MODIN3_1_split, Mode=(Combinatorial) @ [UDB=(2,0)][LB=0][MC=0]
        Total # of inputs        : 8
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              !Net_167 * !\UART_OEM:BUART:rx_count_3\ * 
              \UART_OEM:BUART:rx_count_2\ * \UART_OEM:BUART:rx_count_1\ * 
              \UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * MODIN3_1
            + !Net_167 * \UART_OEM:BUART:rx_count_3\ * 
              !\UART_OEM:BUART:rx_count_2\ * !\UART_OEM:BUART:rx_count_1\ * 
              !\UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * MODIN3_1
            + Net_167 * !\UART_OEM:BUART:rx_count_3\ * 
              !\UART_OEM:BUART:rx_count_2\ * !\UART_OEM:BUART:rx_count_1\ * 
              !\UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN3_1 * MODIN3_0
            + Net_167 * !\UART_OEM:BUART:rx_count_3\ * 
              \UART_OEM:BUART:rx_count_2\ * \UART_OEM:BUART:rx_count_1\ * 
              \UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN3_1 * MODIN3_0
            + Net_167 * \UART_OEM:BUART:rx_count_3\ * 
              !\UART_OEM:BUART:rx_count_2\ * !\UART_OEM:BUART:rx_count_1\ * 
              !\UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN3_1 * MODIN3_0
            + !\UART_OEM:BUART:rx_count_3\ * !\UART_OEM:BUART:rx_count_2\ * 
              !\UART_OEM:BUART:rx_count_1\ * 
              !\UART_OEM:BUART:rx_count7_bit8_wire\ * MODIN3_1 * !MODIN3_0
            + !\UART_OEM:BUART:rx_count_3\ * \UART_OEM:BUART:rx_count_2\ * 
              \UART_OEM:BUART:rx_count_1\ * \UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * MODIN3_1 * !MODIN3_0
            + \UART_OEM:BUART:rx_count_3\ * !\UART_OEM:BUART:rx_count_2\ * 
              !\UART_OEM:BUART:rx_count_1\ * !\UART_OEM:BUART:rx_count_0\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * MODIN3_1 * !MODIN3_0
        );
        Output = MODIN3_1_split (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,0)][LB=1] #macrocells=4, #inputs=11, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_OEM:BUART:rx_state_0\, Mode=(T-Register) @ [UDB=(2,0)][LB=1][MC=0]
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !Net_167 * !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * 
              \UART_OEM:BUART:rx_bitclk_enable\ * 
              !\UART_OEM:BUART:rx_state_3\ * \UART_OEM:BUART:rx_state_2\ * 
              !MODIN3_1
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * 
              \UART_OEM:BUART:rx_bitclk_enable\ * 
              !\UART_OEM:BUART:rx_state_3\ * \UART_OEM:BUART:rx_state_2\ * 
              !MODIN3_1 * !MODIN3_0
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              \UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN6_6
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              \UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN6_5
        );
        Output = \UART_OEM:BUART:rx_state_0\ (fanout=9)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_OEM:BUART:rx_load_fifo\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=1]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * 
              \UART_OEM:BUART:rx_bitclk_enable\ * \UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              \UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN6_6
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              \UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN6_5
        );
        Output = \UART_OEM:BUART:rx_load_fifo\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_OEM:BUART:rx_state_3\, Mode=(T-Register) @ [UDB=(2,0)][LB=1][MC=2]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * 
              \UART_OEM:BUART:rx_bitclk_enable\ * \UART_OEM:BUART:rx_state_3\ * 
              \UART_OEM:BUART:rx_state_2\
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              \UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN6_6
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              \UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN6_5
        );
        Output = \UART_OEM:BUART:rx_state_3\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_OEM:BUART:rx_status_3\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=3]
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !Net_167 * !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * 
              \UART_OEM:BUART:rx_bitclk_enable\ * \UART_OEM:BUART:rx_state_3\ * 
              \UART_OEM:BUART:rx_state_2\ * !MODIN3_1
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * 
              \UART_OEM:BUART:rx_bitclk_enable\ * \UART_OEM:BUART:rx_state_3\ * 
              \UART_OEM:BUART:rx_state_2\ * !MODIN3_1 * !MODIN3_0
        );
        Output = \UART_OEM:BUART:rx_status_3\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=4, #inputs=11, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_OEM:BUART:rx_state_2\, Mode=(T-Register) @ [UDB=(2,1)][LB=0][MC=0]
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !Net_167 * !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\ * \UART_OEM:BUART:rx_last\
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * 
              \UART_OEM:BUART:rx_bitclk_enable\ * \UART_OEM:BUART:rx_state_3\
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * 
              \UART_OEM:BUART:rx_bitclk_enable\ * \UART_OEM:BUART:rx_state_2\
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              \UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN6_6
            + !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              \UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\ * 
              \UART_OEM:BUART:rx_count7_bit8_wire\ * !MODIN6_5
        );
        Output = \UART_OEM:BUART:rx_state_2\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_OEM:BUART:rx_count7_bit8_wire\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\
            + !\UART_OEM:BUART:rx_count7_tc\ * 
              !\UART_OEM:BUART:rx_count7_bit8_wire\
        );
        Output = \UART_OEM:BUART:rx_count7_bit8_wire\ (fanout=9)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_OEM:BUART:rx_state_stop1_reg\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * \UART_OEM:BUART:rx_state_3\ * 
              \UART_OEM:BUART:rx_state_2\
        );
        Output = \UART_OEM:BUART:rx_state_stop1_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\UART_OEM:BUART:rx_counter_load\, Mode=(Combinatorial) @ [UDB=(2,1)][LB=0][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_OEM:BUART:tx_ctrl_mark_last\ * 
              !\UART_OEM:BUART:rx_state_0\ * !\UART_OEM:BUART:rx_state_3\ * 
              !\UART_OEM:BUART:rx_state_2\
        );
        Output = \UART_OEM:BUART:rx_counter_load\ (fanout=2)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,1)][LB=1] #macrocells=3, #inputs=7, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\UART_OEM:BUART:tx_state_0\, Mode=(T-Register) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_OEM:BUART:tx_state_1\ * !\UART_OEM:BUART:tx_state_0\ * 
              \UART_OEM:BUART:tx_bitclk_enable_pre\ * 
              !\UART_OEM:BUART:tx_fifo_empty\
            + !\UART_OEM:BUART:tx_state_1\ * !\UART_OEM:BUART:tx_state_0\ * 
              !\UART_OEM:BUART:tx_fifo_empty\ * !\UART_OEM:BUART:tx_state_2\
            + \UART_OEM:BUART:tx_state_1\ * \UART_OEM:BUART:tx_state_0\ * 
              \UART_OEM:BUART:tx_bitclk_enable_pre\ * 
              \UART_OEM:BUART:tx_fifo_empty\ * \UART_OEM:BUART:tx_state_2\
            + \UART_OEM:BUART:tx_state_0\ * !\UART_OEM:BUART:tx_state_2\ * 
              \UART_OEM:BUART:tx_bitclk\
        );
        Output = \UART_OEM:BUART:tx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_OEM:BUART:tx_bitclk\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_OEM:BUART:tx_state_1\ * !\UART_OEM:BUART:tx_state_0\ * 
              \UART_OEM:BUART:tx_state_2\
            + !\UART_OEM:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART_OEM:BUART:tx_bitclk\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\UART_OEM:BUART:rx_last\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_167
        );
        Output = \UART_OEM:BUART:rx_last\ (fanout=1)
        Properties               : 
        {
        }
}

count7cell: Name =\UART_OEM:BUART:sRX:RxBitCounter\
    PORT MAP (
        clock => \UART_OEM:Net_9\ ,
        load => \UART_OEM:BUART:rx_counter_load\ ,
        count_6 => MODIN6_6 ,
        count_5 => MODIN6_5 ,
        count_4 => MODIN6_4 ,
        count_3 => \UART_OEM:BUART:rx_count_3\ ,
        count_2 => \UART_OEM:BUART:rx_count_2\ ,
        count_1 => \UART_OEM:BUART:rx_count_1\ ,
        count_0 => \UART_OEM:BUART:rx_count_0\ ,
        tc => \UART_OEM:BUART:rx_count7_tc\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "1110110"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,2)] contents:
LAB@[UDB=(2,2)][LB=0] #macrocells=4, #inputs=12, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\UART_OEM:BUART:tx_status_0\, Mode=(Combinatorial) @ [UDB=(2,2)][LB=0][MC=0]
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_OEM:BUART:tx_state_1\ * !\UART_OEM:BUART:tx_state_0\ * 
              \UART_OEM:BUART:tx_bitclk_enable_pre\ * 
              \UART_OEM:BUART:tx_fifo_empty\ * \UART_OEM:BUART:tx_state_2\
        );
        Output = \UART_OEM:BUART:tx_status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART_OEM:BUART:sTX:TxShifter:u0\
    PORT MAP (
        clock => \UART_OEM:Net_9\ ,
        cs_addr_2 => \UART_OEM:BUART:tx_state_1\ ,
        cs_addr_1 => \UART_OEM:BUART:tx_state_0\ ,
        cs_addr_0 => \UART_OEM:BUART:tx_bitclk_enable_pre\ ,
        so_comb => \UART_OEM:BUART:tx_shift_out\ ,
        f0_bus_stat_comb => \UART_OEM:BUART:tx_fifo_notfull\ ,
        f0_blk_stat_comb => \UART_OEM:BUART:tx_fifo_empty\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

statusicell: Name =\UART_OEM:BUART:sTX:TxSts\
    PORT MAP (
        clock => \UART_OEM:Net_9\ ,
        status_3 => \UART_OEM:BUART:tx_fifo_notfull\ ,
        status_2 => \UART_OEM:BUART:tx_status_2\ ,
        status_1 => \UART_OEM:BUART:tx_fifo_empty\ ,
        status_0 => \UART_OEM:BUART:tx_status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0000001"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,3)] contents:
LAB@[UDB=(2,3)][LB=0] #macrocells=3, #inputs=11, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\UART_Debug:BUART:txn\, Mode=(D-Register) @ [UDB=(2,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_Debug:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART_Debug:BUART:txn\ * \UART_Debug:BUART:tx_state_1\ * 
              !\UART_Debug:BUART:tx_bitclk\
            + \UART_Debug:BUART:txn\ * \UART_Debug:BUART:tx_state_2\
            + !\UART_Debug:BUART:tx_state_1\ * \UART_Debug:BUART:tx_state_0\ * 
              !\UART_Debug:BUART:tx_shift_out\ * 
              !\UART_Debug:BUART:tx_state_2\
            + !\UART_Debug:BUART:tx_state_1\ * \UART_Debug:BUART:tx_state_0\ * 
              !\UART_Debug:BUART:tx_state_2\ * !\UART_Debug:BUART:tx_bitclk\
            + \UART_Debug:BUART:tx_state_1\ * !\UART_Debug:BUART:tx_state_0\ * 
              !\UART_Debug:BUART:tx_shift_out\ * 
              !\UART_Debug:BUART:tx_state_2\ * 
              !\UART_Debug:BUART:tx_counter_dp\ * 
              \UART_Debug:BUART:tx_bitclk\
        );
        Output = \UART_Debug:BUART:txn\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_OEM:BUART:counter_load_not\, Mode=(Combinatorial) @ [UDB=(2,3)][LB=0][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_OEM:BUART:tx_state_1\ * !\UART_OEM:BUART:tx_state_0\ * 
              \UART_OEM:BUART:tx_bitclk_enable_pre\
            + !\UART_OEM:BUART:tx_state_1\ * !\UART_OEM:BUART:tx_state_0\ * 
              !\UART_OEM:BUART:tx_state_2\
        );
        Output = \UART_OEM:BUART:counter_load_not\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=__ONE__, Mode=(Combinatorial) @ [UDB=(2,3)][LB=0][MC=2]
        Total # of inputs        : 0
        Total # of product terms : 0
            Clock Enable: True
        Main Equation            : 0 pterms
        !(
            0
        );
        Output = __ONE__ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,3)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(2,3)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\UART_OEM:BUART:sTX:sCLOCK:TxBitClkGen\
    PORT MAP (
        clock => \UART_OEM:Net_9\ ,
        cs_addr_0 => \UART_OEM:BUART:counter_load_not\ ,
        ce0_reg => \UART_OEM:BUART:tx_bitclk_enable_pre\ ,
        ce1_reg => \UART_OEM:BUART:tx_counter_dp\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100001111001000000100000000000101111100000000000000001000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

controlcell: Name =\ADC_TS410:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \ADC_TS410:clock\ ,
        control_7 => \ADC_TS410:bSAR_SEQ:control_7\ ,
        control_6 => \ADC_TS410:bSAR_SEQ:control_6\ ,
        control_5 => \ADC_TS410:bSAR_SEQ:control_5\ ,
        control_4 => \ADC_TS410:bSAR_SEQ:control_4\ ,
        control_3 => \ADC_TS410:bSAR_SEQ:control_3\ ,
        control_2 => \ADC_TS410:bSAR_SEQ:control_2\ ,
        control_1 => \ADC_TS410:bSAR_SEQ:load_period\ ,
        control_0 => \ADC_TS410:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,4)] contents:
LAB@[UDB=(2,4)][LB=0] #macrocells=3, #inputs=12, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\UART_OEM:BUART:txn\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\UART_OEM:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \UART_OEM:BUART:txn\ * \UART_OEM:BUART:tx_state_1\ * 
              !\UART_OEM:BUART:tx_bitclk\
            + \UART_OEM:BUART:txn\ * \UART_OEM:BUART:tx_state_2\
            + !\UART_OEM:BUART:tx_state_1\ * \UART_OEM:BUART:tx_state_0\ * 
              !\UART_OEM:BUART:tx_shift_out\ * !\UART_OEM:BUART:tx_state_2\
            + !\UART_OEM:BUART:tx_state_1\ * \UART_OEM:BUART:tx_state_0\ * 
              !\UART_OEM:BUART:tx_state_2\ * !\UART_OEM:BUART:tx_bitclk\
            + \UART_OEM:BUART:tx_state_1\ * !\UART_OEM:BUART:tx_state_0\ * 
              !\UART_OEM:BUART:tx_shift_out\ * !\UART_OEM:BUART:tx_state_2\ * 
              !\UART_OEM:BUART:tx_counter_dp\ * \UART_OEM:BUART:tx_bitclk\
        );
        Output = \UART_OEM:BUART:txn\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=Net_171, Mode=(Combinatorial) @ [UDB=(2,4)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_OEM:BUART:txn\
        );
        Output = Net_171 (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_Debug:BUART:tx_status_0\, Mode=(Combinatorial) @ [UDB=(2,4)][LB=0][MC=2]
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_Debug:BUART:tx_state_1\ * !\UART_Debug:BUART:tx_state_0\ * 
              \UART_Debug:BUART:tx_bitclk_enable_pre\ * 
              \UART_Debug:BUART:tx_fifo_empty\ * 
              \UART_Debug:BUART:tx_state_2\
        );
        Output = \UART_Debug:BUART:tx_status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,4)][LB=1] #macrocells=2, #inputs=7, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\UART_Debug:BUART:tx_state_2\, Mode=(T-Register) @ [UDB=(2,4)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_Debug:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_Debug:BUART:tx_state_1\ * !\UART_Debug:BUART:tx_state_0\ * 
              \UART_Debug:BUART:tx_bitclk_enable_pre\ * 
              \UART_Debug:BUART:tx_state_2\
            + \UART_Debug:BUART:tx_state_1\ * \UART_Debug:BUART:tx_state_0\ * 
              \UART_Debug:BUART:tx_bitclk_enable_pre\ * 
              \UART_Debug:BUART:tx_state_2\
            + \UART_Debug:BUART:tx_state_1\ * \UART_Debug:BUART:tx_state_0\ * 
              !\UART_Debug:BUART:tx_state_2\ * \UART_Debug:BUART:tx_bitclk\
            + \UART_Debug:BUART:tx_state_1\ * !\UART_Debug:BUART:tx_state_2\ * 
              \UART_Debug:BUART:tx_counter_dp\ * \UART_Debug:BUART:tx_bitclk\
        );
        Output = \UART_Debug:BUART:tx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\UART_OEM:BUART:tx_status_2\, Mode=(Combinatorial) @ [UDB=(2,4)][LB=1][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_OEM:BUART:tx_fifo_notfull\
        );
        Output = \UART_OEM:BUART:tx_status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

synccell: Name =\ADC_TS410:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \ADC_TS410:nrq\ ,
        out => \ADC_TS410:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,5)] is empty.
UDB [UDB=(3,0)] contents:
LAB@[UDB=(3,0)][LB=0] #macrocells=4, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(3,0)][LB=0][MC=3]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * \ADC_TS410:ch_addr_5\
            + !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * \ADC_TS410:ch_addr_4\
            + !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * \ADC_TS410:ch_addr_3\
            + !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * \ADC_TS410:ch_addr_2\
            + \ADC_TS410:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }
}

LAB@[UDB=(3,0)][LB=1] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:ch_addr_5\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }
}

UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:ch_addr_2\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,2)] contents:
LAB@[UDB=(3,2)][LB=0] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:ch_addr_3\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,2)][LB=1] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:ch_addr_4\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,3)] contents:
LAB@[UDB=(3,3)][LB=0] #macrocells=4, #inputs=11, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\UART_Debug:BUART:counter_load_not\, Mode=(Combinatorial) @ [UDB=(3,3)][LB=0][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_Debug:BUART:tx_state_1\ * !\UART_Debug:BUART:tx_state_0\ * 
              \UART_Debug:BUART:tx_bitclk_enable_pre\
            + !\UART_Debug:BUART:tx_state_1\ * !\UART_Debug:BUART:tx_state_0\ * 
              !\UART_Debug:BUART:tx_state_2\
        );
        Output = \UART_Debug:BUART:counter_load_not\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,3)][LB=1] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

datapathcell: Name =\UART_Debug:BUART:sTX:sCLOCK:TxBitClkGen\
    PORT MAP (
        clock => \UART_Debug:Net_9\ ,
        cs_addr_0 => \UART_Debug:BUART:counter_load_not\ ,
        ce0_reg => \UART_Debug:BUART:tx_bitclk_enable_pre\ ,
        ce1_reg => \UART_Debug:BUART:tx_counter_dp\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100001111001000000100000000000101111100000000000000001000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

statuscell: Name =\ADC_TS410:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \ADC_TS410:clock\ ,
        status_0 => Net_227 ,
        clk_en => \ADC_TS410:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_TS410:bSAR_SEQ:enable\)

UDB [UDB=(3,4)] contents:
LAB@[UDB=(3,4)][LB=0] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_Debug:BUART:tx_status_2\, Mode=(Combinatorial) @ [UDB=(3,4)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\UART_Debug:BUART:tx_fifo_notfull\
        );
        Output = \UART_Debug:BUART:tx_status_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_TS410:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_TS410:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_TS410:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_TS410:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_TS410:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_TS410:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,4)][LB=1] #macrocells=3, #inputs=7, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\UART_Debug:BUART:tx_state_0\, Mode=(T-Register) @ [UDB=(3,4)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\UART_Debug:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\UART_Debug:BUART:tx_state_1\ * !\UART_Debug:BUART:tx_state_0\ * 
              \UART_Debug:BUART:tx_bitclk_enable_pre\ * 
              !\UART_Debug:BUART:tx_fifo_empty\
            + !\UART_Debug:BUART:tx_state_1\ * !\UART_Debug:BUART:tx_state_0\ * 
              !\UART_Debug:BUART:tx_fifo_empty\ * 
              !\UART_Debug:BUART:tx_state_2\
            + \UART_Debug:BUART:tx_state_1\ * \UART_Debug:BUART:tx_state_0\ * 
              \UART_Debug:BUART:tx_bitclk_enable_pre\ * 
              \UART_Debug:BUART:tx_fifo_empty\ * 
              \UART_Debug:BUART:tx_state_2\
            + \UART_Debug:BUART:tx_state_0\ * !\UART_Debug:BUART:tx_state_2\ * 
              \UART_Debug:BUART:tx_bitclk\
        );
        Output = \UART_Debug:BUART:tx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\UART_Debug:BUART:tx_state_1\, Mode=(T-Register) @ [UDB=(3,4)][LB=1][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\UART_Debug:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \UART_Debug:BUART:tx_state_1\ * \UART_Debug:BUART:tx_state_0\ * 
              \UART_Debug:BUART:tx_bitclk_enable_pre\ * 
              \UART_Debug:BUART:tx_state_2\
            + \UART_Debug:BUART:tx_state_1\ * !\UART_Debug:BUART:tx_state_2\ * 
              \UART_Debug:BUART:tx_counter_dp\ * \UART_Debug:BUART:tx_bitclk\
            + \UART_Debug:BUART:tx_state_0\ * !\UART_Debug:BUART:tx_state_2\ * 
              \UART_Debug:BUART:tx_bitclk\
        );
        Output = \UART_Debug:BUART:tx_state_1\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\UART_Debug:BUART:tx_bitclk\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=3]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\UART_Debug:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\UART_Debug:BUART:tx_state_1\ * !\UART_Debug:BUART:tx_state_0\ * 
              \UART_Debug:BUART:tx_state_2\
            + !\UART_Debug:BUART:tx_bitclk_enable_pre\
        );
        Output = \UART_Debug:BUART:tx_bitclk\ (fanout=4)
        Properties               : 
        {
        }
}

statusicell: Name =\UART_Debug:BUART:sTX:TxSts\
    PORT MAP (
        clock => \UART_Debug:Net_9\ ,
        status_3 => \UART_Debug:BUART:tx_fifo_notfull\ ,
        status_2 => \UART_Debug:BUART:tx_status_2\ ,
        status_1 => \UART_Debug:BUART:tx_fifo_empty\ ,
        status_0 => \UART_Debug:BUART:tx_status_0\ );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0000001"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,5)] is empty.
Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =\ADC_TS410:IRQ\
        PORT MAP (
            interrupt => Net_227 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(17)] 
    interrupt: Name =Timer_Interrupt
        PORT MAP (
            interrupt => Net_180 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(29)] 
    interrupt: Name =\ADC_DelSig:IRQ\
        PORT MAP (
            interrupt => Net_342 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =\ADC_TS410:FinalBuf\
        PORT MAP (
            dmareq => \ADC_TS410:Net_3698\ ,
            termin => Net_12 ,
            termout => \ADC_TS410:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\ADC_TS410:TempBuf\
        PORT MAP (
            dmareq => \ADC_TS410:Net_3830\ ,
            termin => Net_12 ,
            termout => \ADC_TS410:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
[IoId=4]: 
Pin : Name = Pressure_After_Pos(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pressure_After_Pos(0)__PA ,
        analog_term => Net_354 ,
        pad => Pressure_After_Pos(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = Pressure_After_Neg(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pressure_After_Neg(0)__PA ,
        analog_term => Net_357 ,
        pad => Pressure_After_Neg(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = ADC_CH3(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => ADC_CH3(0)__PA ,
        analog_term => Net_232 ,
        pad => ADC_CH3(0)_PAD ,
        pin_input => \ADC_TS410:AMuxHw_2_Decoder_one_hot_3\ );
    Properties:
    {
    }

Port 1 contains the following IO cells:
[IoId=6]: 
Pin : Name = RX_OEM(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => RX_OEM(0)__PA ,
        fb => Net_167 ,
        pad => RX_OEM(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = TX_OEM(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => TX_OEM(0)__PA ,
        pin_input => Net_171 ,
        pad => TX_OEM(0)_PAD );
    Properties:
    {
    }

Port 2 contains the following IO cells:
[IoId=1]: 
Pin : Name = USER_LED(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => USER_LED(0)__PA ,
        pad => USER_LED(0)_PAD );
    Properties:
    {
    }

Port 3 contains the following IO cells:
[IoId=3]: 
Pin : Name = ADC_CH1(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => ADC_CH1(0)__PA ,
        analog_term => Net_229 ,
        pad => ADC_CH1(0)_PAD ,
        pin_input => \ADC_TS410:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = Pressure_Before_Neg(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pressure_Before_Neg(0)__PA ,
        analog_term => Net_356 ,
        pad => Pressure_Before_Neg(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = Pressure_Before_Pos(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => Pressure_Before_Pos(0)__PA ,
        analog_term => Net_363 ,
        pad => Pressure_Before_Pos(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = ADC_CH2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => ADC_CH2(0)__PA ,
        analog_term => Net_231 ,
        pad => ADC_CH2(0)_PAD ,
        pin_input => \ADC_TS410:AMuxHw_2_Decoder_one_hot_2\ );
    Properties:
    {
    }

Port 12 contains the following IO cells:
[IoId=7]: 
Pin : Name = TX_Debug(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => TX_Debug(0)__PA ,
        pin_input => Net_133 ,
        pad => TX_Debug(0)_PAD );
    Properties:
    {
    }

Port 15 contains the following IO cells:
[IoId=3]: 
Pin : Name = ADC_CH0(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => ADC_CH0(0)__PA ,
        analog_term => Net_228 ,
        pad => ADC_CH0(0)_PAD ,
        pin_input => \ADC_TS410:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = RX_RPI(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => RX_RPI(0)__PA ,
        fb => Net_154 ,
        pad => RX_RPI(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = TX_RPI(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => TX_RPI(0)__PA ,
        pin_input => Net_158 ,
        pad => TX_RPI(0)_PAD );
    Properties:
    {
    }

ARM group 0: empty
CAN group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL_32KHZ ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => \ADC_DelSig:Net_93\ ,
            dclk_0 => \ADC_DelSig:Net_93_local\ ,
            dclk_glb_1 => \UART_Debug:Net_9\ ,
            dclk_1 => \UART_Debug:Net_9_local\ ,
            dclk_glb_2 => \UART_RPI:Net_9\ ,
            dclk_2 => \UART_RPI:Net_9_local\ ,
            dclk_glb_3 => \ADC_TS410:clock\ ,
            dclk_3 => \ADC_TS410:clock_local\ ,
            dclk_glb_4 => Net_10 ,
            dclk_4 => Net_10_local ,
            dclk_glb_5 => \UART_OEM:Net_9\ ,
            dclk_5 => \UART_OEM:Net_9_local\ ,
            aclk_glb_0 => \ADC_DelSig:Net_488\ ,
            aclk_0 => \ADC_DelSig:Net_488_local\ ,
            clk_a_dig_glb_0 => \ADC_DelSig:Net_488_adig\ ,
            clk_a_dig_0 => \ADC_DelSig:Net_488_adig_local\ );
        Properties:
        {
        }
Comparator group 0: empty
DFB group 0: empty
DSM group 0: 
    DS Modulator @ F(DSM,0): 
    dsmodcell: Name =\ADC_DelSig:DSM\
        PORT MAP (
            aclock => \ADC_DelSig:Net_488\ ,
            vplus => Net_339 ,
            vminus => Net_340 ,
            reset_dec => \ADC_DelSig:mod_reset\ ,
            extclk_cp_udb => \ADC_DelSig:Net_93_local\ ,
            ext_pin_1 => \ADC_DelSig:Net_249\ ,
            ext_pin_2 => \ADC_DelSig:Net_257\ ,
            ext_vssa => \ADC_DelSig:Net_109\ ,
            qtz_ref => \ADC_DelSig:Net_34\ ,
            dec_clock => \ADC_DelSig:aclock\ ,
            mod_dat_3 => \ADC_DelSig:mod_dat_3\ ,
            mod_dat_2 => \ADC_DelSig:mod_dat_2\ ,
            mod_dat_1 => \ADC_DelSig:mod_dat_1\ ,
            mod_dat_0 => \ADC_DelSig:mod_dat_0\ ,
            dout_udb_7 => \ADC_DelSig:Net_245_7\ ,
            dout_udb_6 => \ADC_DelSig:Net_245_6\ ,
            dout_udb_5 => \ADC_DelSig:Net_245_5\ ,
            dout_udb_4 => \ADC_DelSig:Net_245_4\ ,
            dout_udb_3 => \ADC_DelSig:Net_245_3\ ,
            dout_udb_2 => \ADC_DelSig:Net_245_2\ ,
            dout_udb_1 => \ADC_DelSig:Net_245_1\ ,
            dout_udb_0 => \ADC_DelSig:Net_245_0\ );
        Properties:
        {
            cy_registers = ""
            resolution = 16
        }
Decimator group 0: 
    Decimator Block @ F(Decimator,0): 
    decimatorcell: Name =\ADC_DelSig:DEC\
        PORT MAP (
            aclock => \ADC_DelSig:aclock\ ,
            mod_dat_3 => \ADC_DelSig:mod_dat_3\ ,
            mod_dat_2 => \ADC_DelSig:mod_dat_2\ ,
            mod_dat_1 => \ADC_DelSig:mod_dat_1\ ,
            mod_dat_0 => \ADC_DelSig:mod_dat_0\ ,
            ext_start => __ONE__ ,
            modrst => \ADC_DelSig:mod_reset\ ,
            interrupt => Net_342 );
        Properties:
        {
            cy_registers = ""
        }
EMIF group 0: empty
I2C group 0: empty
LCD group 0: empty
LVD group 0: empty
PICU group 0: empty
PM group 0: empty
SC group 0: empty
SPC group 0: empty
Timer group 0: 
    Timer Block @ F(Timer,0): 
    timercell: Name =\Timer_ISR:TimerHW\
        PORT MAP (
            clock => Net_10 ,
            enable => __ONE__ ,
            tc => \Timer_ISR:Net_51\ ,
            cmp => \Timer_ISR:Net_261\ ,
            irq => Net_180 );
        Properties:
        {
            cy_registers = ""
        }
USB group 0: empty
VIDAC group 0: empty
OpAmp group 0: empty
CsAbuf group 0: empty
Vref group 0: 
    Vref Block @ F(Vref,13): 
    vrefcell: Name =\ADC_TS410:SAR:vRef_Vdda_1\
        PORT MAP (
            vout => \ADC_TS410:SAR:Net_235\ );
        Properties:
        {
            autoenable = 1
            guid = "4720866E-BC14-478d-B8A0-3E44F38CADAC"
            ignoresleep = 0
            name = "Vdda/2"
        }
LPF group 0: empty
SAR group 0: 
    SAR Block @ F(SAR,0): 
    sarcell: Name =\ADC_TS410:SAR:ADC_SAR\
        PORT MAP (
            vplus => \ADC_TS410:Net_2803\ ,
            vminus => \ADC_TS410:SAR:Net_126\ ,
            ext_pin => \ADC_TS410:SAR:Net_209\ ,
            vrefhi_out => \ADC_TS410:SAR:Net_126\ ,
            vref => \ADC_TS410:SAR:Net_235\ ,
            clk_udb => \ADC_TS410:clock_local\ ,
            irq => \ADC_TS410:SAR:Net_252\ ,
            next => Net_226 ,
            data_out_udb_11 => \ADC_TS410:SAR:Net_207_11\ ,
            data_out_udb_10 => \ADC_TS410:SAR:Net_207_10\ ,
            data_out_udb_9 => \ADC_TS410:SAR:Net_207_9\ ,
            data_out_udb_8 => \ADC_TS410:SAR:Net_207_8\ ,
            data_out_udb_7 => \ADC_TS410:SAR:Net_207_7\ ,
            data_out_udb_6 => \ADC_TS410:SAR:Net_207_6\ ,
            data_out_udb_5 => \ADC_TS410:SAR:Net_207_5\ ,
            data_out_udb_4 => \ADC_TS410:SAR:Net_207_4\ ,
            data_out_udb_3 => \ADC_TS410:SAR:Net_207_3\ ,
            data_out_udb_2 => \ADC_TS410:SAR:Net_207_2\ ,
            data_out_udb_1 => \ADC_TS410:SAR:Net_207_1\ ,
            data_out_udb_0 => \ADC_TS410:SAR:Net_207_0\ ,
            eof_udb => \ADC_TS410:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }
ANAIF group 0: empty
PHUB group 0: empty

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\ADC_TS410:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_322 ,
            muxin_62 => Net_321 ,
            muxin_61 => Net_320 ,
            muxin_60 => Net_319 ,
            muxin_59 => Net_318 ,
            muxin_58 => Net_317 ,
            muxin_57 => Net_316 ,
            muxin_56 => Net_315 ,
            muxin_55 => Net_314 ,
            muxin_54 => Net_313 ,
            muxin_53 => Net_312 ,
            muxin_52 => Net_311 ,
            muxin_51 => Net_310 ,
            muxin_50 => Net_309 ,
            muxin_49 => Net_308 ,
            muxin_48 => Net_307 ,
            muxin_47 => Net_306 ,
            muxin_46 => Net_304 ,
            muxin_45 => Net_302 ,
            muxin_44 => Net_301 ,
            muxin_43 => Net_299 ,
            muxin_42 => Net_297 ,
            muxin_41 => Net_296 ,
            muxin_40 => Net_294 ,
            muxin_39 => Net_292 ,
            muxin_38 => Net_291 ,
            muxin_37 => Net_289 ,
            muxin_36 => Net_287 ,
            muxin_35 => Net_286 ,
            muxin_34 => Net_284 ,
            muxin_33 => Net_282 ,
            muxin_32 => Net_281 ,
            muxin_31 => Net_279 ,
            muxin_30 => Net_277 ,
            muxin_29 => Net_276 ,
            muxin_28 => Net_274 ,
            muxin_27 => Net_272 ,
            muxin_26 => Net_271 ,
            muxin_25 => Net_269 ,
            muxin_24 => Net_267 ,
            muxin_23 => Net_266 ,
            muxin_22 => Net_264 ,
            muxin_21 => Net_262 ,
            muxin_20 => Net_261 ,
            muxin_19 => Net_259 ,
            muxin_18 => Net_257 ,
            muxin_17 => Net_256 ,
            muxin_16 => Net_254 ,
            muxin_15 => Net_252 ,
            muxin_14 => Net_251 ,
            muxin_13 => Net_249 ,
            muxin_12 => Net_247 ,
            muxin_11 => Net_246 ,
            muxin_10 => Net_244 ,
            muxin_9 => Net_242 ,
            muxin_8 => Net_241 ,
            muxin_7 => Net_239 ,
            muxin_6 => Net_237 ,
            muxin_5 => Net_236 ,
            muxin_4 => Net_234 ,
            muxin_3 => Net_232 ,
            muxin_2 => Net_231 ,
            muxin_1 => Net_229 ,
            muxin_0 => Net_228 ,
            hw_ctrl_en_63 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \ADC_TS410:AMuxHw_2_Decoder_one_hot_4\ ,
            vout => \ADC_TS410:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
    Amux Block @ <No Location>: 
    amuxcell: Name =AMux_CYAMUXSIDE_A
        PORT MAP (
            muxin_1 => Net_354 ,
            muxin_0 => Net_363 ,
            vout => Net_339 );
        Properties:
        {
            api_type = 0
            connect_mode = 0
            cy_registers = ""
            hw_control = 0
            init_mux_sel = "00"
            muxin_width = 2
            one_active = 0
        }
    Amux Block @ <No Location>: 
    amuxcell: Name =AMux_CYAMUXSIDE_B
        PORT MAP (
            muxin_1 => Net_357 ,
            muxin_0 => Net_356 ,
            vout => Net_340 );
        Properties:
        {
            api_type = 0
            connect_mode = 0
            cy_registers = ""
            hw_control = 0
            init_mux_sel = "00"
            muxin_width = 2
            one_active = 0
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |                        | 
Port | Pin | Fixed |      Type |       Drive Mode |                   Name | Connections
-----+-----+-------+-----------+------------------+------------------------+------------------------------------------------------------
   0 |   4 |     * |      NONE |      HI_Z_ANALOG |  Pressure_After_Pos(0) | Analog(Net_354)
     |   5 |     * |      NONE |      HI_Z_ANALOG |  Pressure_After_Neg(0) | Analog(Net_357)
     |   7 |       |      NONE |      HI_Z_ANALOG |             ADC_CH3(0) | In(\ADC_TS410:AMuxHw_2_Decoder_one_hot_3\), Analog(Net_232)
-----+-----+-------+-----------+------------------+------------------------+------------------------------------------------------------
   1 |   6 |     * |      NONE |     HI_Z_DIGITAL |              RX_OEM(0) | FB(Net_167)
     |   7 |     * |      NONE |         CMOS_OUT |              TX_OEM(0) | In(Net_171)
-----+-----+-------+-----------+------------------+------------------------+------------------------------------------------------------
   2 |   1 |     * |      NONE |         CMOS_OUT |            USER_LED(0) | 
-----+-----+-------+-----------+------------------+------------------------+------------------------------------------------------------
   3 |   3 |       |      NONE |      HI_Z_ANALOG |             ADC_CH1(0) | In(\ADC_TS410:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_229)
     |   4 |     * |      NONE |      HI_Z_ANALOG | Pressure_Before_Neg(0) | Analog(Net_356)
     |   5 |     * |      NONE |      HI_Z_ANALOG | Pressure_Before_Pos(0) | Analog(Net_363)
     |   7 |       |      NONE |      HI_Z_ANALOG |             ADC_CH2(0) | In(\ADC_TS410:AMuxHw_2_Decoder_one_hot_2\), Analog(Net_231)
-----+-----+-------+-----------+------------------+------------------------+------------------------------------------------------------
  12 |   7 |     * |      NONE |         CMOS_OUT |            TX_Debug(0) | In(Net_133)
-----+-----+-------+-----------+------------------+------------------------+------------------------------------------------------------
  15 |   3 |       |      NONE |      HI_Z_ANALOG |             ADC_CH0(0) | In(\ADC_TS410:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_228)
     |   4 |     * |      NONE |     HI_Z_DIGITAL |              RX_RPI(0) | FB(Net_154)
     |   5 |     * |      NONE |         CMOS_OUT |              TX_RPI(0) | In(Net_158)
----------------------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.118ms
Digital Placement phase: Elapsed time ==> 3s.848ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
"C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\bin/sjrouter.exe" --xml-path "C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\dev\psoc5/psoc5lp/route_arch-rrg.cydata" --vh2-path "PSOC5 Implement_r.vh2" --pcf-path "PSOC5 Implement.pco" --des-name "PSOC5 Implement" --dsf-path "PSOC5 Implement.dsf" --sdc-path "PSOC5 Implement.sdc" --lib-path "PSOC5 Implement_r.lib"
Routing successful.
Digital Routing phase: Elapsed time ==> 3s.200ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Generation">
Bitstream Generation phase: Elapsed time ==> 0s.130ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Verification">
Bitstream Verification phase: Elapsed time ==> 0s.023ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Timing report is in PSOC5 Implement_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.581ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.201ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 15s.037ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 15s.039ms
API generation phase: Elapsed time ==> 2s.347ms
Dependency generation phase: Elapsed time ==> 0s.006ms
Cleanup phase: Elapsed time ==> 0s.000ms
